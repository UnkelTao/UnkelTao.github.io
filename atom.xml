<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[/UnkelTao]]></title>
  <link href="http://www.UnkelTao.com/atom.xml" rel="self"/>
  <link href="http://www.UnkelTao.com/"/>
  <updated>2014-03-27T00:47:54+08:00</updated>
  <id>http://www.UnkelTao.com/</id>
  <author>
    <name><![CDATA[UnkelTao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[<老人与海 (海明威)> 读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/"/>
    <updated>2014-03-25T10:59:52+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<p>语文书的内容，重温了下下。</p>

<blockquote><p>人並不比鳥獸強多少，我還是情願做那隻待在黑暗深水裡的動物。</p></blockquote>

<p>-At Kindle page:20-21    time: 2014-3-24 0:33:04</p>

<hr />

<!-- more -->


<blockquote><p>根本不懂這個，也不知道自己是不是相信。也許殺死這條魚是一個罪過，我想這應該算是罪過吧，儘管我是為了養活自己並且給許多人食用才這樣做的。不過話說回來，什麼事都是罪過啊。還是別想罪過了吧。現在想它也實在太遲了，而且有些人是專門拿錢出來給人家研究罪過的，所以這些惱人的問題就留給專家們去考慮吧。你天生是個漁夫，正如那魚天生就是一條魚一樣。</p></blockquote>

<p>-At Kindle page:366-369      time: 2014-3-24 23:50:07</p>

<hr />

<blockquote><p>「我想人一旦被打敗了，感覺也就舒坦些了。」他想。「我從來不知道失敗後竟還會這麼舒坦。那麼，到底是什麼把你打垮的呢？」他想。</p></blockquote>

<p>-At Kindle page:514-516      time: 2014-3-24 23:56:53</p>

<hr />

<blockquote><p>「海洋非常大。小船很小。不容易看見。」老人說，此刻他感到非常的愉快。因為現在他終於可以對一個活生生的人說話，而不再只是自言自語。或是對著海說話了。</p></blockquote>

<p>-At Kindle page:553-555      time: 2014-3-25 0:01:11</p>

<hr />

<blockquote><p>在馬路上另一頭老人的茅棚裡，他又睡著了。他依舊將臉朝下地躺著，孩子坐在他的身邊，守著他。老人正夢見獅子。</p></blockquote>

<p>-At Kindle page:578-579      time: 2014-3-25 0:01:26</p>

<hr />

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/'>http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces #238 (Div.1 AB)]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/"/>
    <updated>2014-03-23T19:51:37+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a</id>
    <content type="html"><![CDATA[<p>rating 居然涨了，简直不科学。 <br/>
<a href="http://codeforces.com/profile/UnkelTao">弱弱的求个关注:http://codeforces.com/profile/UnkelTao</a></p>

<h2><a href="http://codeforces.com/contest/406/problem/A">A. Unusual Product</a></h2>

<p><strong>题意</strong>: 给你一个矩阵，定义了unusual值，类似与矩阵乘法，但是做的与，对应所有Aij&amp;Aji的值再异或，然后你可以对矩阵的一行或者一列进行反转（0变1，1变0）查询则输出Unusual值。<br/>
<strong>key</strong>: 我们可以发现，Unusual值其实就是主对角线的值进行异或，跟周围的元素完全没有关系，因为： Aij&amp;Aji,但是Aji又会与Aij，这样等于 <code>（Aij&amp;Aji）^（Aji&amp;Aij）=0 (i!=j)</code>,那么操作一次，结果便会由0变1或者由1变0，不管怎么操作。</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">1002</span><span class="p">][</span><span class="mi">1002</span><span class="p">],</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">//data();</span>
</span><span class='line'>   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">ans</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>   <span class="n">ans</span><span class="o">+=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">*</span><span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">ans</span><span class="o">%=</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">m</span><span class="p">;</span>
</span><span class='line'>   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">m</span><span class="p">){</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">;</span>
</span><span class='line'>         <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>         <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>
</span><span class='line'>         <span class="k">else</span> <span class="p">{</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">);</span> <span class="n">ans</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="n">ans</span><span class="p">;}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://codeforces.com/contest/406/problem/B">B. Toy Sum</a></h2>

<p><strong>题意</strong>: 给你1，2&hellip;10<sup>6</sup>个数，从中已经选出了其中的n个作为X，让你再挑选出m个作为另外一组Y，要求满足题目给出的公式。<br/>
<strong>key</strong>:  我们稍微观察一下公式就会发现，  <code>a- 1 == s-(s+1-a)</code> ; 这样，我们就可以贪心了，如果X中选了a,那么看(s+1-a)被选没，没北选，那么我们便把(s+1-a)选入Y，如果选了，那么我们相当于X得了个s,我们便寻找一组都没被选入X的b和（s+1-b）,肯定可以找到的，因为<code>n&lt;=10<sup>5</sup>&lt;=s/2</code>; 这样便可以得出一个可行解。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;climits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cctype&gt;</span>
</span><span class='line'><span class="cp">#include &lt;ctime&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;queue&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;set&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stack&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class='line'><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class='line'><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class='line'><span class="cp">#define PB push_back</span>
</span><span class='line'><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class='line'><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class='line'><span class="cp">#define pi acos(-1)</span>
</span><span class='line'><span class="cp">#define eps 0.00000001</span>
</span><span class='line'><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class='line'><span class="cp">#define MaxN  1000000</span>
</span><span class='line'><span class="cp">#define mod 1000000007</span>
</span><span class='line'><span class="cp">#define mod2 1000000009</span>
</span><span class='line'><span class="cp">#define mod3 1000007</span>
</span><span class='line'><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class='line'><span class="cp">#define inf 2147483647</span>
</span><span class='line'><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define typed int</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">kk</span><span class="o">=</span><span class="mi">1000001</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">t</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">t2</span><span class="p">[</span><span class="mi">1000002</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">ans</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>   <span class="c1">// data();</span>
</span><span class='line'>   <span class="n">memset</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">a</span><span class="p">));</span>
</span><span class='line'>   <span class="n">memset</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">t2</span><span class="p">));</span>
</span><span class='line'>   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">){</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span><span class="n">a</span><span class="p">[</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span>
</span><span class='line'>
</span><span class='line'>   <span class="kt">int</span> <span class="n">tp</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]])</span> <span class="n">tp</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>      <span class="k">else</span><span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">t2</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]])</span> <span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>          <span class="n">t2</span><span class="p">[</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>          <span class="n">t2</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="n">tp</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">kk</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">tp</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="n">a</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">i</span><span class="p">]){</span><span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">;</span><span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">kk</span><span class="o">-</span><span class="n">i</span><span class="p">;</span><span class="n">tp</span><span class="o">--</span><span class="p">;}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>C,D,E实在做不动了。</h3>

<p>PS，顺带写下今天群内学第们训练的题，我是太闲了么。。。囧</p>

<h2><a href="http://acm.hust.edu.cn/vjudge/contest/view.action?cid=42652#problem/E">E Matrix</a></h2>

<p><strong>题意</strong>:  给你一个数字字符串，构造一个2维的矩阵，bij = si<em>sj; 给你一个范围x,y,z,t,让所有x=&lt;i&lt;=y, z=&lt;j&lt;=t 的bij的和等于a的这样的Group有多少个。 <br/>
<strong>key</strong>:  我们不难发现，其实所有区间的和其实可以转化为 <code>(Sx+S(x+1)&hellip;Sy)</em>(Xz+&hellip;+St)</code>（展开就能就是b了），那么相当于我们求的是连续的一段的和，和另外连续的一段的和的乘积等于a的个数，那么我们可以用O(n<sup>2</sup>)的算法枚举出所有连续子段和,并记录没种可能的个数。</p>

<ul>
<li>a=0, 那么判断有多少个连续字段和等于0的，<code> res = cnt[0]*cnt[0] + 2*cnt[0]*cnt[i](cnt[i] != 0)</code></li>
<li>a!=0,那么我们就可以分解a为两个数的乘积， <code>res = cnt[c]*cnt[d]*2(c*d==a) (若c==d不乘以2)</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;climits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cctype&gt;</span>
</span><span class='line'><span class="cp">#include &lt;ctime&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;queue&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;set&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stack&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class='line'><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class='line'><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class='line'><span class="cp">#define PB push_back</span>
</span><span class='line'><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class='line'><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class='line'><span class="cp">#define pi acos(-1)</span>
</span><span class='line'><span class="cp">#define eps 0.00000001</span>
</span><span class='line'><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class='line'><span class="cp">#define MaxN  1000000</span>
</span><span class='line'><span class="cp">#define mod 1000000007</span>
</span><span class='line'><span class="cp">#define mod2 1000000009</span>
</span><span class='line'><span class="cp">#define mod3 1000007</span>
</span><span class='line'><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class='line'><span class="cp">#define inf 2147483647</span>
</span><span class='line'><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define typed int</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">sum</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">//data();</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">)){</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">str</span><span class="p">);</span>
</span><span class='line'>      <span class="n">memset</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">cnt</span><span class="p">));</span>                   
</span><span class='line'>      <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class='line'>      <span class="n">sum</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">&#39;0&#39;</span><span class="p">;}</span>
</span><span class='line'>      <span class="n">repf</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">len</span><span class="p">)</span><span class="n">repf</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">)</span><span class="n">cnt</span><span class="p">[</span><span class="n">sum</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">-</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ll</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="n">res</span><span class="o">+=</span><span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>          <span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">sum</span><span class="p">[</span><span class="n">len</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">res</span><span class="o">+=</span><span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span>   
</span><span class='line'>          <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>          <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>                    
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">a</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">sum</span><span class="p">[</span><span class="n">len</span><span class="p">])</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">==</span><span class="n">a</span><span class="p">)</span> <span class="n">res</span> <span class="o">+=</span> <span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>              <span class="k">else</span> <span class="n">res</span> <span class="o">+=</span> <span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span>                       
</span><span class='line'>      <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>  
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="http://acm.hust.edu.cn/vjudge/contest/view.action?cid=42652#problem/F">F &ndash; How far away ？</a></h3>

<p><strong>题意</strong>:  给你一颗树，查询两个之间的距离(有且只有一条)。   <br/>
<strong>key</strong>： 标准解放应该是LCA（最近公共祖先） ，由于查询数目极少，本题只有200，那么很明显赤裸裸的搜索也能过啊，不知道为啥木有学第写。 广搜深搜应该都可以，n比较大，需要cevtor或者邻接表存储。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;climits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cctype&gt;</span>
</span><span class='line'><span class="cp">#include &lt;ctime&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;queue&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;set&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stack&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class='line'><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class='line'><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class='line'><span class="cp">#define PB push_back</span>
</span><span class='line'><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class='line'><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class='line'><span class="cp">#define pi acos(-1)</span>
</span><span class='line'><span class="cp">#define eps 0.00000001</span>
</span><span class='line'><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class='line'><span class="cp">#define MaxN  100000</span>
</span><span class='line'><span class="cp">#define mod 1000000007</span>
</span><span class='line'><span class="cp">#define mod2 1000000009</span>
</span><span class='line'><span class="cp">#define mod3 1000007</span>
</span><span class='line'><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class='line'><span class="cp">#define inf 2147483647</span>
</span><span class='line'><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define typed int</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">pnt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">nxt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">head</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">used</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">w</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">fg</span><span class="p">,</span><span class="n">ans</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="n">e</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">init</span><span class="p">(){</span>
</span><span class='line'>   <span class="n">len</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>   <span class="n">memset</span><span class="p">(</span><span class="n">head</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">head</span><span class="p">));</span>
</span><span class='line'>   <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">addeg</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span><span class="kt">int</span> <span class="n">v</span><span class="p">,</span><span class="kt">int</span> <span class="n">k</span><span class="p">){</span>
</span><span class='line'>      <span class="n">pnt</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>      <span class="n">w</span><span class="p">[</span><span class="n">len</span><span class="p">]</span><span class="o">=</span> <span class="n">k</span><span class="p">;</span>
</span><span class='line'>      <span class="n">nxt</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">];</span>
</span><span class='line'>      <span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">=</span> <span class="n">len</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span><span class="kt">int</span> <span class="n">cur</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>  <span class="n">used</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">];</span><span class="n">i</span><span class="o">!=-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">nxt</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
</span><span class='line'>      <span class="n">v</span><span class="o">=</span><span class="n">pnt</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">==</span><span class="n">e</span><span class="p">){</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">ans</span><span class="o">=</span><span class="n">cur</span><span class="o">+</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="k">return</span><span class="p">;}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">used</span><span class="p">[</span><span class="n">v</span><span class="p">]){</span>
</span><span class='line'>         <span class="n">used</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>         <span class="n">dfs</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="n">cur</span><span class="o">+</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//读入外挂 </span>
</span><span class='line'><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">())</span> <span class="o">==</span> <span class="sc">&#39; &#39;</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span><span class="p">)</span> <span class="n">s</span> <span class="o">=</span> <span class="o">-</span><span class="n">s</span><span class="p">;</span> <span class="k">else</span> <span class="n">value</span> <span class="o">=</span> <span class="n">c</span><span class="o">-</span><span class="mi">48</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">())</span> <span class="o">&gt;=</span> <span class="sc">&#39;0&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">&lt;=</span> <span class="sc">&#39;9&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">c</span> <span class="o">-</span> <span class="mi">48</span><span class="p">;</span>
</span><span class='line'>    <span class="n">a</span> <span class="o">=</span> <span class="n">s</span> <span class="o">*</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">){</span>
</span><span class='line'>    <span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">){</span>
</span><span class='line'>    <span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">b</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">;</span>
</span><span class='line'>  <span class="n">RD</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>     <span class="n">init</span><span class="p">();</span>        
</span><span class='line'>       <span class="n">RD</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>     <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span><span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">);</span><span class="n">addeg</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">);</span><span class="n">addeg</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">k</span><span class="p">);}</span>
</span><span class='line'>     <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">m</span><span class="p">){</span>
</span><span class='line'>        <span class="n">RD</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class='line'>        <span class="n">dfs</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>            
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>最后祝学第们加油。</h1>

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/'>http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[<人生若只如初见 (安意如)>读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/"/>
    <updated>2014-03-23T11:54:52+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<p>这样的书略微不太适合我读的样子，不过里面倒是好多不错的诗。</p>

<blockquote><p>人世如此翻云覆雨，似纳兰说的：“等闲变却故人心，却道故人心易变。”也似刘禹锡的《竹叶词》：“长恨人心不如水，等闲平地起波澜。”</p></blockquote>

<p>-At Kindle page:21-23    time: 2014-3-19 19:36:10</p>

<hr />

<!-- more -->


<blockquote><p>烟花不会让人懂得，它化做的尘埃是怎样的温暖。它宁可留下一地冰冷的幻象，一地破碎。如果你哀伤，你可以为它悼念，却无法改变它的坚持。</p></blockquote>

<p>-At Kindle page:258-259      time: 2014-3-21 23:26:00</p>

<hr />

<blockquote><p>爱一个人，倘若没有求的勇气，就像没有翅膀不能飞越沧海。除非，甘心就此放你离开，否则，还是去君子好逑吧。</p></blockquote>

<p>-At Kindle page:324-325      time: 2014-3-21 23:30:49</p>

<hr />

<blockquote><p>有哪一个人，不会以为爱着的时候，自己手中的这点爱，是女娲补天时漏下的精华；有哪一个人，不会以为身边这个人，会伴着自己渡尽浩浩余生。 可惜，我们看不见结果。</p></blockquote>

<p>-At Kindle page:399-401      time: 2014-3-21 23:34:50</p>

<hr />

<blockquote><p>山无棱，江水为竭，冬雷阵阵，夏雨雪，天地合，乃敢与君绝。有时候，爱只是输给了生死、时间，以及欲望。 当我们回归心海深处，那片幽蓝深静中，我是鲛人，依然会为你落泪成珠。 爱是沧海遗珠。</p></blockquote>

<p>-At Kindle page:455-458      time: 2014-3-21 23:38:56</p>

<hr />

<blockquote><p>有时候，爱是坚韧的东西。可是有时候，它只是一池碧水，一榭春花，一陌杨柳，一窗月光，天明了，就要干涸，萎谢，褪色，消失。</p></blockquote>

<p>-At Kindle page:750-751      time: 2014-3-21 23:54:45</p>

<hr />

<blockquote><p>我们，生生世世说相思，犹未厌倦满足。是贪恋也好啊。因着人世无常，众生有情，我尚未为你红豆熬成缠绵的伤口，美景良辰未赏透，怎么能就此放手？</p></blockquote>

<p>-At Kindle page:928-929      time: 2014-3-22 0:04:26</p>

<hr />

<blockquote><p>你也许曾经遇上一个人，你与他相爱，以为他是你全部的需要和存在的意义。你爱他，如生如死如火如荼缠绵如呼吸；然而有一天你们分手了，得已不得已情愿不情愿，伤筋动骨声嘶力竭歇斯底里愤怒悲伤安静压抑，而那个人就那样消失于你的世界了。同时，他静默地关闭了你通向他世界的门。</p></blockquote>

<p>-At Kindle page:1472-1474    time: 2014-3-22 16:04:21</p>

<hr />

<blockquote><p>今我来时，杨柳依依，沈园里，不见宋时明月宋时人。影壁上后人刻的两阕词，遥遥相看，黑的碑，白的字，叫人凄然。心意相通却无缘牵手。山长水阔，梦魂杳杳，再相逢，惟有来生了。这堵墙，被哀重的词剜了筋脉，虽然被修葺得光洁了，仍是“墨痕犹锁壁间尘”。</p></blockquote>

<p>-At Kindle page:2294-2297    time: 2014-3-23 0:58:30</p>

<hr />

<blockquote><p>那些赖以生存的温暖存在，曾经觉得是那么的无足轻重。从没有像现在一样，对悠闲恬静的田园生活有无尽的向往与渴望。步履蹒跚地蹀行在古道上，遥看日影衔山。落日也知道回家，那么人呢？ 为什么总要等失落了，才拾起寻常的好？年轻人，不出去经历一番，又怎么能甘心平淡终老？人心的贪婪，或者说追求，如同空阔的海，无法满足。</p></blockquote>

<p>-At Kindle page:2554-2557    time: 2014-3-23 1:14:49</p>

<hr />

<blockquote><p>问世间、情为何物，值得用生命去等待和交换？这个问题，不要问正在爱的人，他们意乱情迷，给不出清醒的答案；也不要问爱过了的人，他们不见得能给出答案。当爱消逝如飞雪时，剩下的只是白茫茫一片大地真干净。</p></blockquote>

<p>-At Kindle page:2661-2663    time: 2014-3-23 1:21:03</p>

<hr />

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/'>http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces Round #237 (Div. 2) ]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/"/>
    <updated>2014-03-21T11:03:13+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2</id>
    <content type="html"><![CDATA[<p>群中看到学第们发的比赛链接，于是又做了一场，结果悲惨。再也不在windows下做比赛了，电脑现在不知道出了啥问题，每次00：16都要自动关机。结果敲完的题没保存，又得重新敲一遍。</p>

<h3><a href="http://codeforces.com/contest/404/problem/A">A &ndash; Valera and X</a></h3>

<p><strong>题意</strong>： 给你一个矩阵，问你是不是恰好有2种字母，对角线字母一样，非对角线字母一样。<br/>
<strong>key</strong>:   模拟</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">n</span><span class="o">==</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;YES&quot;</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">b</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="n">j</span> <span class="o">||</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="n">x</span>
</span><span class='line'>                <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class='line'>                <span class="nb">exit</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>             <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="n">b</span>
</span><span class='line'>                <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class='line'>                <span class="nb">exit</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;YES&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://codeforces.com/contest/404/problem/B">B &ndash; Marathon</a></h2>

<p><strong>题意</strong>:  给你一个a*a的正方形，从(0,0)出发，沿边线逆时针行走，走n次，每次走d的距离，输出每次行走后的坐标。</p>

<p><strong>key</strong>:   模拟题，注意精度就好。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">eps</span> <span class="o">=</span> <span class="mi">1</span><span class="n">e</span><span class="o">-</span><span class="mi">5</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">d</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_f</span><span class="p">}</span>
</span><span class='line'><span class="n">n</span> <span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="n">cur_x</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'><span class="n">cur_y</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'><span class="n">pp</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">cur_y</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class='line'>      <span class="n">pp</span> <span class="o">=</span> <span class="n">cur_x</span> 
</span><span class='line'>  <span class="k">elsif</span> <span class="n">a</span><span class="o">-</span><span class="n">cur_x</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class='line'>      <span class="n">pp</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">cur_y</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">a</span><span class="o">-</span><span class="n">cur_y</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class='line'>      <span class="n">pp</span> <span class="o">=</span> <span class="n">a</span><span class="o">*</span><span class="mi">3</span> <span class="o">-</span><span class="n">cur_x</span>   
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      <span class="n">pp</span> <span class="o">=</span> <span class="n">a</span><span class="o">*</span><span class="mi">4</span> <span class="o">-</span><span class="n">cur_y</span>
</span><span class='line'>  <span class="k">end</span>  
</span><span class='line'>  <span class="n">pp</span> <span class="o">+=</span><span class="n">d</span><span class="p">;</span>
</span><span class='line'>  <span class="n">t</span><span class="o">=</span> <span class="p">(</span><span class="n">pp</span><span class="o">/</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class='line'>  <span class="n">pp</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">*</span><span class="n">t</span><span class="o">*</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">t</span><span class="o">%</span><span class="mi">4</span>
</span><span class='line'>  <span class="k">when</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">cur_x</span><span class="o">=</span><span class="n">pp</span>
</span><span class='line'>      <span class="n">cur_y</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>  <span class="k">when</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">cur_x</span><span class="o">=</span><span class="n">a</span>
</span><span class='line'>      <span class="n">cur_y</span><span class="o">=</span><span class="n">pp</span>
</span><span class='line'>  <span class="k">when</span> <span class="mi">2</span>
</span><span class='line'>      <span class="n">cur_x</span><span class="o">=</span><span class="n">a</span><span class="o">-</span><span class="n">pp</span>
</span><span class='line'>      <span class="n">cur_y</span><span class="o">=</span><span class="n">a</span>
</span><span class='line'>  <span class="k">when</span> <span class="mi">3</span>
</span><span class='line'>      <span class="n">cur_x</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">cur_y</span><span class="o">=</span><span class="n">a</span><span class="o">-</span><span class="n">pp</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%.8f %.8f</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">cur_x</span><span class="p">,</span><span class="n">cur_y</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2><a href="http://codeforces.com/contest/404/problem/C">C &ndash; Restore Graph</a></h2>

<p><strong>题意</strong>:  给你一个无向无子环的图，告诉你所有点到某一个选取的点的距离的矩阵d,问你能不能修复出满足条件的原图，其中一个点最多能够连接k条边。</p>

<p><strong>key</strong>:  首先d中肯定只有一个0，并且该点就是选取的点。否则肯定不存在。 对d进行排序，一条边一条边的修复模拟即可，注意满足每个点连接的边不能超过k个。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span><span class="p">,</span><span class="n">k</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">D</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="o">[</span><span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'><span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">flag</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="n">flag</span> <span class="o">!=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">D</span><span class="o">.</span><span class="n">sort!</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'><span class="n">l</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">f</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">t</span><span class="o">=</span><span class="mi">1</span>
</span><span class='line'><span class="k">while</span> <span class="n">t</span><span class="o">&lt;</span><span class="n">n</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">f</span><span class="o">==</span><span class="mi">1</span>
</span><span class='line'>        <span class="n">k</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="n">first!</span><span class="o">=</span> <span class="p">(</span><span class="n">D</span><span class="o">[</span><span class="n">f</span><span class="o">].</span><span class="n">first</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;-1&quot;</span>
</span><span class='line'>        <span class="nb">exit</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">p</span><span class="o">=</span><span class="n">k</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">=</span> <span class="n">t</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span>
</span><span class='line'>        <span class="k">break</span> <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">first!</span><span class="o">=</span><span class="n">D</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="n">first</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nb">p</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="n">f</span> <span class="o">+=</span><span class="mi">1</span>
</span><span class='line'>            <span class="nb">p</span><span class="o">=</span><span class="n">k</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nb">p</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;-1&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="nb">exit</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="nb">p</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="o">==</span><span class="n">t</span><span class="p">)</span>
</span><span class='line'>            <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;-1&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="nb">exit</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="n">b</span><span class="o">[</span><span class="n">l</span><span class="o">]=</span><span class="n">D</span><span class="o">[</span><span class="n">f</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>        <span class="n">e</span><span class="o">[</span><span class="n">l</span><span class="o">]=</span><span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>        <span class="n">l</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">f</span><span class="o">=</span><span class="n">t</span><span class="p">;</span>
</span><span class='line'>    <span class="n">t</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">l</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">e</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2><a href="http://codeforces.com/contest/404/problem/D">D &ndash; Minesweeper 1D</a></h2>

<p><strong>题意</strong>: 给你一个1<em>n的地雷图，0表示左右都没有地雷，1表示左右共有1个雷，2表示左右都是雷，</em>表示该点是雷，？表示该点未知，求有多少种合法的方案。</p>

<p><strong>key</strong>: DP,<code>dp[i][0]表示i点是0的方案数，dp[i][1]表示i点是1的方案数，dp[i][2]表示该点是雷的方案数</code>，其中1可以转化为0，2可以转化为1。 因为“<em>1”的话后面肯定不会是雷，那么变成0的方案数，如果是&#8221;01&#8221;或“11”的话，后面肯定是雷，保持1不动，&#8221;</em>2&#8221;的话后面肯定是雷。<br/>
<strong>转移方程见代码</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class='line'><span class="n">mods</span> <span class="o">=</span> <span class="mi">1000000007</span>
</span><span class='line'><span class="n">dp</span> <span class="o">=</span> <span class="o">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]]</span>
</span><span class='line'>
</span><span class='line'><span class="n">len</span> <span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">cur</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">nxt</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">len</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">s</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>  <span class="k">when</span> <span class="s1">&#39;0&#39;</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>  <span class="k">when</span> <span class="s1">&#39;1&#39;</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span> <span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span> <span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>  <span class="k">when</span> <span class="s1">&#39;2&#39;</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>  <span class="k">when</span> <span class="s1">&#39;*&#39;</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class='line'>  <span class="k">when</span> <span class="s1">&#39;?&#39;</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class='line'>      <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">cur</span> <span class="o">=</span> <span class="n">nxt</span>
</span><span class='line'>  <span class="n">nxt</span> <span class="o">=</span> <span class="n">cur</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span>
</span><span class='line'>  <span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2><a href="http://codeforces.com/contest/404/problem/E">E &ndash; Maze 1D</a></h2>

<p><strong>题意</strong>: 题意真是难读,大概就是机器人会左右移动，但是如果前面的点是障碍点的话他就不会向前进忽略这次移动，问在设置最少障碍点的情况下能够使得机器人最后停下的位置是以前没有走过的。 问这样的设置方案数有多少个（在障碍点最少的情况下）。</p>

<p><strong>key</strong>: 二分+枚举。</p>

<ul>
<li>首先我们可以确定，如果不加障碍点他最后停留的位置只走过一次的话，那么方案数肯定是1。</li>
<li>最多设置一个障碍点，如果一个障碍点不能满足情况，再多的障碍点也没用。</li>
<li>如果i点可以是障碍点，那么<code>(0,i]</code>的点都可以是障碍点，同理-i是障碍点，<code>[-1,0)</code>都可以是障碍点。</li>
</ul>


<p>有了这样的理解，那么遍可以2分来判断最大的i点是不是可以为障碍点了，判断方法模拟就可以了。<br/>
<strong>(ruby跑的太慢，TLE了，囧RZ，C++可以AC)</strong></p>

<p><strong>ruby代码</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#TLE 代码</span>
</span><span class='line'><span class="vg">$s</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class='line'><span class="vg">$fg</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'><span class="vg">$len</span> <span class="o">=</span> <span class="vg">$s</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="vg">$mods</span> <span class="o">=</span> <span class="vg">$len</span><span class="o">+</span><span class="mi">7</span>
</span><span class='line'><span class="vg">$vis</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">((</span><span class="mi">5</span><span class="o">*</span><span class="vg">$mods</span><span class="p">))</span>
</span><span class='line'><span class="k">def</span> <span class="nf">Judge</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="vg">$fg</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">pos</span> <span class="o">=</span> <span class="vg">$mods</span> <span class="o">+</span> <span class="mi">100</span>
</span><span class='line'>  <span class="n">k</span> <span class="o">+=</span> <span class="n">pos</span>
</span><span class='line'>  <span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$fg</span>
</span><span class='line'>  <span class="vg">$len</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vg">$s</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">chr</span><span class="o">==</span><span class="s1">&#39;R&#39;</span> <span class="ow">and</span> <span class="n">pos</span><span class="o">+</span><span class="mi">1</span> <span class="o">!=</span><span class="n">k</span>
</span><span class='line'>          <span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>          <span class="c1"># p 111111111111</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="vg">$s</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">chr</span><span class="o">==</span><span class="s1">&#39;L&#39;</span> <span class="ow">and</span> <span class="n">pos</span><span class="o">-</span><span class="mi">1</span> <span class="o">!=</span> <span class="n">k</span>
</span><span class='line'>          <span class="n">pos</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>          <span class="c1"># p 222222222222</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="vg">$len</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>          <span class="c1"># puts &quot;b:&quot;</span>
</span><span class='line'>          <span class="c1"># p $vis[pos]</span>
</span><span class='line'>          <span class="c1"># p pos </span>
</span><span class='line'>          <span class="c1"># p $fg</span>
</span><span class='line'>          <span class="k">return</span> <span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">!=</span> <span class="vg">$fg</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$fg</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="vg">$mods</span><span class="o">+</span><span class="mi">300</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">r</span><span class="o">=</span><span class="vg">$len</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">r</span>
</span><span class='line'>      <span class="n">mid</span> <span class="o">=</span> <span class="p">((</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class='line'>      <span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="n">mid</span><span class="p">)</span>
</span><span class='line'>          <span class="n">l</span> <span class="o">=</span> <span class="n">mid</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">r</span> <span class="o">=</span><span class="n">mid</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">+=</span> <span class="n">l</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">r</span><span class="o">=</span><span class="vg">$len</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">r</span>
</span><span class='line'>      <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'>      <span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="n">mid</span><span class="p">)</span>
</span><span class='line'>          <span class="n">l</span> <span class="o">=</span> <span class="n">mid</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">r</span> <span class="o">=</span><span class="n">mid</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">+=</span> <span class="n">l</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">res</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>c++代码</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">fg</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">vis</span><span class="p">[</span><span class="mi">5</span><span class="o">*</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">Judge</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">){</span>
</span><span class='line'>   <span class="n">fg</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">pos</span><span class="o">=</span><span class="mf">1e6</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
</span><span class='line'>   <span class="n">k</span><span class="o">+=</span><span class="n">pos</span><span class="p">;</span>
</span><span class='line'>   <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class='line'>   <span class="c1">// printf(&quot;%d %d %d\n&quot;, fg,pos,k);</span>
</span><span class='line'>   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;R&#39;</span><span class="o">&amp;&amp;</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="o">!=</span><span class="n">k</span><span class="p">)</span> <span class="n">pos</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;L&#39;</span><span class="o">&amp;&amp;</span><span class="n">pos</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="n">k</span><span class="p">)</span> <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>          <span class="c1">// printf(&quot;ans %d  %d %d\n&quot;, vis[pos],fg,pos);</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">!=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>   
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">str</span><span class="p">)){</span>
</span><span class='line'>      <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class='line'>      <span class="n">memset</span><span class="p">(</span><span class="n">vis</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">vis</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="mf">1e6</span><span class="o">+</span><span class="mi">200</span><span class="p">)){</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;1</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ll</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="n">len</span><span class="p">,</span><span class="n">mid</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>              <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="n">mid</span><span class="p">))</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class='line'>              <span class="k">else</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">+=</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="n">len</span><span class="p">,</span><span class="n">mid</span><span class="p">;</span>
</span><span class='line'>          <span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>              <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="o">-</span><span class="n">mid</span><span class="p">))</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class='line'>              <span class="k">else</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">+=</span> <span class="n">l</span><span class="p">;</span>           
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>    
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/'>http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2048 改版游戏]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/"/>
    <updated>2014-03-16T13:10:16+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi</id>
    <content type="html"><![CDATA[<p>2048这个游戏简直停不下来，已经玩了各种各样的版本了，群里7K+ 大神说可以做这么一个版本，想了想反正也闲着，就Fork了源代码出来改了这样一个版本。</p>

<h3>游戏地址</h3>

<p><a href="http://www.unkeltao.com/2048/">点我来一发</a><br/>
<a href="http://www.unkeltao.com/jiuzizhenyan/">另外一版本</a></p>

<!--more-->


<h3>操作说明</h3>

<p>上下左右，合并分数块（任意两块都能合并），构成指定的分数就行<br/>
如果3个数字大于目标数字，则失败。</p>

<h3>游戏解图</h3>

<p><img src="http://unkeltao.qiniudn.com/2048/IMG_2048.png" alt="" /></p>

<h3>2048源码地址</h3>

<p><a href="https://github.com/UnkelTao/2048/tree/gh-pages">改版</a><br/>
<a href="https://github.com/gabrielecirulli/2048">2048原版</a></p>

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/'>http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kindle笔记转换]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/"/>
    <updated>2014-03-14T22:59:13+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan</id>
    <content type="html"><![CDATA[<p>使用kindle-format导出笔记，标注和剪贴文章。</p>

<h2><a href="https://github.com/UnkelTao/kindle-note-format">脚本地址</a></h2>

<h2>源文件</h2>

<p>源文件是在使用kindle阅读书籍的时候产生的一个记录用户的标注，笔记，剪贴和标签信息的文档，但是源文件在共享的时候格式往往需要修改，于是提供一个脚本，将其格式化。
脚本参考于<a href="http://minejo.github.io/blog/2014/02/18/shi-yong-kindlebi-ji-lai-zuo-fortuneming-yan/">李超同学</a>的python脚本（没有学过python &ndash;_-），重构了ruby脚本，也算是我的的第一个脚本.<br/>
源文件共有四种格式:</p>

<!-- more -->


<h3>书签</h3>

<p>格式为：</p>

<pre><code>Book Title\r\n
- 我的书签 位置N | 已添加至 sometime\r\n
\r\n
\r\n
</code></pre>

<h3>标注</h3>

<p>格式为：</p>

<pre><code>Book Title\r\n
- 我的标注 位置N-N | 已添加至 sometime\r\n
\r\n
标注内容\r\n
</code></pre>

<h3>笔记</h3>

<p>笔记比较特殊，笔记是与标注连在一起的。表示该笔记是在该标注上完成的。</p>

<pre><code>Book Title\r\n
- 我的笔记 位置N | 已添加至 sometime\r\n
\r\n
笔记内容\r\n
==========\r\n
Book Title\r\n
- 我的标注 位置N-N | 已添加至 sometime\r\n
\r\n
标注内容\r\n
</code></pre>

<h3>剪贴文章</h3>

<pre><code>Book Title\r\n
- 剪贴文章 位置N | 已添加至 sometime\r\n
\r\n
剪贴文章内容\r\n
</code></pre>

<p>每一个摘录都用<code>==========\r\n</code>分割开。</p>

<h2>脚本使用</h2>

<h3>环境</h3>

<p>安装ruby</p>

<h3>运行</h3>

<blockquote><p>ruby kindle-format [-param] [path-to-sourcefile]</p></blockquote>

<p>其中</p>

<ul>
<li>-param 有 “-h”,&ldquo;-m&rdquo; <br/>
-h 表示查看帮助 <br/>
-m 表示输出为markdown格式<br/>
-mo 表示输出支持Octopress的markdown格式</li>
<li>path-to-sourcefile 为可选参数，默认为当前路径下的My Clippings.txt</li>
</ul>


<h3>输出</h3>

<p>-m 会在当前目录下生成“kindle-markdown”目录，并在该目录下创建一个以运行时间为标题的markdown文件.</p>

<h2>待完成</h2>

<h3>支持Octopress的文档(已完成)</h3>

<h3>支持其他格式的文档</h3>

<h3>windows与linux下的编码的Bug</h3>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/minejo/kindle-clips">kindle-clips</a></li>
<li><a href="https://github.com/lxyu/kindle-clippings">lxyu-Kindle Clippings</a></li>
</ul>


<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/'>http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[北岛.失败之书 读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/"/>
    <updated>2014-03-14T22:03:25+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<blockquote><p>话说回来了，那时我们有梦，关于文学，关于爱情，关于穿越世界的旅行。如今我们深夜饮酒，杯子碰到一起，都是梦破碎的声音。</p></blockquote>

<p>-At Kindle page:1201-1202    time: 2014-3-14 22:00:42</p>

<hr />

<blockquote><p>熊先生住得远，来去匆匆，难得有时间多聊聊。和他在一起很少喝酒，总是清茶一杯。茶带来的记忆就是和酒不同，清爽明澈，这也恰似熊先生的为人。熊先生很健谈，路数多变，或曲径通幽，或海阔天空。记得有一回他对我的诗委婉提出批评，我和他争了起来，且相当不敬，而他只是宽厚地笑笑。另一回他请我读一首近作，结尾是“如果天空不死”，他感叹说，这句让他想起他的青年时代。我当时不知道这联想是怎么来的，现在终有所悟。这诗句其实有种悖论式的紧张：说来年轻时的天空是不死的，但虚拟语气对此提出了质疑，那正是青春期的困惑。</p></blockquote>

<p>-At Kindle page:1420-1425    time: 2014-3-13 0:34:59</p>

<hr />

<!-- more -->


<blockquote><p>查尔斯(J.B.Chiles)上校为什么决定迁移到加州来？对我来说还是个谜。也许这是天性，有人像家雀儿，不愿意挪窝；有人像候鸟，永远在路上。自一八四一到一八五四年，在老家密苏里和加州的萨克拉门托(Sacramento)河谷之间，上校七次横跨大陆。这么折腾，胃准有毛病。他极瘦，鹰眼勾鼻，像林肯总统。他的祖先瓦尔特(Walter Chiles)也是只候鸟，一六三八年驾多桅帆船从英格兰来到佛吉尼亚。</p></blockquote>

<p>-At Kindle page:1596-1599    time: 2014-3-13 0:36:28</p>

<hr />

<blockquote><p>那天，午觉醒来，大雨撼动屋顶。看表，三点十分，田田正要下课。开车到学校，找不到停车位，开紧急灯，打伞冲进去。学生们正向外涌，一把把伞迎风张开。我到处找田田那件红绒衣。男孩子五大三粗，女孩子叽叽喳喳。我逆流而行。很快，人去楼空。我转身，雨停，天空变得明朗。</p></blockquote>

<p>-At Kindle page:1744-1746    time: 2014-3-13 0:37:33</p>

<hr />

<blockquote><p>Note:<strong>人总会想的太多</strong></p>

<blockquote><p>拦了辆出租车，司机是个土耳其人。他一路大叫大喊：“……这世界就要玩完了。你还没听说？南北极正他妈融化。哈哈，水位上升，俄国、欧洲，就要被淹没了。”他边说边掏出个扁玻璃瓶往嘴里灌。天哪，但愿不是酒。“你从哪儿来？中国？中国跑不了，我们土耳其也跑不了，统统喂鱼。上帝？上帝也没用。别着急，纽约头一个。哈哈，这些大楼就要沉到海底下啦……”</p></blockquote></blockquote>

<p>-At Kindle page:1845-1849    time: 2014-3-13 0:39:11</p>

<hr />

<blockquote><p>写到这儿，我不禁打了个冷颤。郊区生活真的有那么可怕吗？我想郊区老鼠至少文质彬彬。早上出门散步，一路上人们都招手致意，“哈罗”、“早安”没完没了，这总比城里老鼠横眉冷对甚至拔刀相向好多了。据说一个乡下孩子头一次到纽约，下了长途车跟过往行人挨个打招呼，可没一个人理他，没走多远他只好放弃了。也许在大都市，人们对孤独有更彻底的领悟，用不着装模作样。要不贾克梅蒂的雕塑——那些细得像竹竿一样的人，其背景正是大都市呢。</p></blockquote>

<p>-At Kindle page:1971-1975    time: 2014-3-13 19:47:49</p>

<hr />

<blockquote><p>其实孤独并非与寂静对应，它有自己的声音，这声音在纽约则被无限放大了。首先是那些警车救护车救火车，为引起足够的注意，不断提高音量，高入云霄。而那些单元里快憋疯了的狗，好不容易放到街上，为了向另一只狗致敬，非得用整个腹腔吼叫。轮到纽约人，要想再表达点什么，得多不屈不挠才行——他们扯直嗓门，说到一半被警笛打断，张着嘴，只好把话咽了回去。</p></blockquote>

<p>-At Kindle page:3502-3506    time: 2014-3-14 16:49:48</p>

<hr />

<blockquote><p>选择的余地。F又提到白金尺。他说，人的很多努力是非实用的，但有意义。他的话有道理。但我接着说，这种死亡是被美国媒体无限夸大了，成为民族国家神话的一部分。这样做，起码是不尊重死者应享有的宁静。</p></blockquote>

<p>-At Kindle page:3679-3681    time: 2014-3-14 16:58:32</p>

<hr />

<blockquote><p>戴维斯人民公社成立于若干年前，这和合作开荒发展农业或与推翻资产阶级政权的集体谋反都没关系，而是一些住在戴维斯的中国人为了巩固友谊消磨时光而凑成的松散团体，自认为“人民公社”。主要活动是吃中国饭喝白干嗑瓜子闲聊熬夜打牌钻桌子。X是专家兼美术设计，憨厚正直，助人为乐。他们两口子好客，加上房子大，顺理成章成了公社的据点。每到周末大家先打电话，破门而入。满屋欢声笑语，通宵达旦。</p></blockquote>

<p>-At Kindle page:3684-3688    time: 2014-3-14 20:21:14</p>

<hr />

<h4>断断续续的还是把这本书读完了<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/'><a href="http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/">http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces Round #235 (Div. 2) ]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/"/>
    <updated>2014-03-11T14:02:19+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/11/codeforce-235</id>
    <content type="html"><![CDATA[<p>好久没做CF了，觉得再不做估计以后笔试都过不鸟，于是还得经常做一做。</p>

<p>CF的回滚对我木有影响阿，我已经好久没做了似乎。</p>

<p>这次的DIV2似乎比以前的简单一点。</p>

<h2><a href="http://codeforces.com/contest/401/problem/A">A. Vanya and Cards</a></h2>

<p>送分,大概给你一堆数，问你最少还需要几个绝对值不超过X的数能够让他们的和为0.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span><span class="p">,</span><span class="n">x</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="p">(</span><span class="n">sum</span><span class="o">.</span><span class="n">abs</span> <span class="o">+</span> <span class="n">x</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">x</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2><a href="http://codeforces.com/contest/401/problem/B">B. Sereja and Contests</a></h2>

<p>模拟题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span><span class="p">,</span><span class="n">k</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class='line'><span class="n">A</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>  <span class="mi">0</span><span class="p">}</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">c</span><span class="p">,</span><span class="n">d1</span><span class="p">,</span><span class="n">d2</span> <span class="o">=</span>  <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class='line'>   <span class="n">A</span><span class="o">[</span><span class="n">d1</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>   <span class="k">if</span> <span class="n">d2</span> <span class="o">!=</span> <span class="kp">nil</span>
</span><span class='line'>     <span class="n">A</span><span class="o">[</span><span class="n">d2</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">mx</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">mi</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">cur</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>   <span class="k">if</span> <span class="n">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">cur</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>       <span class="n">mx</span> <span class="o">+=</span> <span class="n">cur</span>
</span><span class='line'>       <span class="n">mi</span> <span class="o">+=</span> <span class="p">(</span><span class="n">cur</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'>       <span class="n">cur</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">mx</span> <span class="o">+=</span> <span class="n">cur</span>
</span><span class='line'><span class="n">mi</span> <span class="o">+=</span> <span class="p">(</span><span class="n">cur</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">mi</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">mx</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://codeforces.com/contest/401/problem/C">C. Team</a></h2>

<p>也是模拟题，给你n个1，m个0，让你给出一种排列，不能有3个1连在一起，不能有两个0连在一起，给出任意一种方案即可，不能则输出-1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">m</span><span class="p">,</span><span class="n">n</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">m</span>
</span><span class='line'>    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">elsif</span> <span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span> <span class="o">&lt;</span> <span class="n">n</span>
</span><span class='line'>    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="n">m</span>
</span><span class='line'>    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">printf</span> <span class="s2">&quot;10&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">m</span> <span class="o">==</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;01&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="mi">0</span>
</span><span class='line'><span class="k">elsif</span> <span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span> <span class="o">==</span> <span class="n">n</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">printf</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;11&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">m</span><span class="o">*</span><span class="mi">2</span> <span class="o">==</span> <span class="n">n</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">k</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">m</span>
</span><span class='line'>    <span class="p">(</span><span class="n">k</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="n">k</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;10&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://codeforces.com/contest/401/problem/D">D. Roman and Numbers</a></h2>

<p>暴力+状态压缩。
题意：给你一个不超过18位的数n,和不超过100的m,将n进行重排(改变里面的位置，当然0不能排在最前面)，问有多少个数是m的倍数。
ruby似乎跑的很慢，不幸TLE的，C++可以过</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">n</span><span class="p">,</span><span class="n">m</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span>
</span><span class='line'><span class="n">m</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="n">len</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">dp</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span>
</span><span class='line'><span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>        <span class="n">tp</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">len</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="o">|</span>
</span><span class='line'>            <span class="n">t</span> <span class="o">=</span> <span class="n">n</span><span class="o">[</span><span class="n">k</span><span class="o">].</span><span class="n">chr</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">i</span><span class="o">&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">k</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">t</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="n">tp</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">!=</span><span class="mi">0</span>
</span><span class='line'>                <span class="k">next</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>            <span class="n">tp</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">|</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">k</span><span class="p">)</span><span class="o">][</span><span class="p">(</span><span class="n">j</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">t</span><span class="p">)</span><span class="o">%</span><span class="n">m</span><span class="o">]</span> <span class="o">+=</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="n">dp</span><span class="o">[</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2><a href="http://codeforces.com/contest/401/problem/E">E. Olympic Games</a></h2>

<p>略难，暂时不会<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/'><a href="http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/">http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Hustoj添加ruby支持]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/"/>
    <updated>2014-03-02T22:33:16+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj</id>
    <content type="html"><![CDATA[<p>虽然已经不是再搞ACM了，但是算法偶尔还是要练习一下写代码，然后最近学习ruby中，打算用ruby来写写ACM题目也算熟悉ruby，免得不用就忘记了，记得Hustoj是可以支持Ruby的，于是就在我们学校的训练Oj上提交了A+B的Ruby代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">readlines</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>于是华丽的给了我一个WA~~~正在想怎么可能，想起来服务器上没有装ruby，于是远程到7509的服务器上再ssh到训练oj的服务器(只能内网访问，ping不到外网地址)，将ruby装上。</p>

<p>然后就开始了无止境的RE生涯，简直无情，各种call禁止：</p>

<!--more-->


<p><img src="http://unkeltao.qiniudn.com/img/IMG_ruby_1.png" alt="" /></p>

<p>在hustoj的wiki页面上，终于找到了参考的添加其他<a href="http://code.google.com/p/hustoj/wiki/AddProgrammingLanguage">语言支持的方法</a></p>

<p>其实主要的就是找到所有的call编号，放到数组里面去就行了，ruby对应了两个数组</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#保存为Main.rb</span>
</span><span class='line'><span class="nb">readlines</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>terminal中运行如下命令。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>strace -ff ruby Main.rb 2&gt;&amp;1|awk -F<span class="se">\(</span> <span class="s1">&#39;{print $1}&#39;</span>|sort -u
</span></code></pre></td></tr></table></div></figure>


<p>然后会产生,以access开头，write结束（也有可能是其他）的一些列标志如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>access
</span><span class='line'>xxx
</span><span class='line'>xxx
</span><span class='line'>write
</span></code></pre></td></tr></table></div></figure>


<p>把这些标志放入如下过程，结尾是0，对应RC数组其他值为-1，结尾为0.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="kt">int</span> <span class="n">LANG_RV</span><span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="n">SYS_access</span><span class="p">,</span><span class="n">SYS_write</span><span class="p">.....,</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'><span class="kt">int</span> <span class="n">LANG_RC</span><span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,......,</span><span class="mi">0</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>改好之后切换到对应目录下，重新make</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ~/hustoj-read-only/core/
</span><span class='line'>./make.sh
</span></code></pre></td></tr></table></div></figure>


<p>接下来就是体力活了，找到提交的runid，rejudge下，看看是不是AC了，可能还会接着RE，如果RE，就将新的callid(是一个数字)加入到数组中，也就是RV数组中，RC数组值为-1就行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo judge_client 2028 0 /home/judge/ debug Y
</span></code></pre></td></tr></table></div></figure>


<p>直到返回值不是10，然后再去页面提交，这下应该就可以了~~~（当然我中间还做了一堆傻事，这儿就不提了）
偶尔可以在训练oj上做做练习了，免得以后笔试说不定都跪。</p>

<p>最终结果：
<img src="http://unkeltao.qiniudn.com/img/IMG_ruby_2.png" alt="" /></p>

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/'>http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Latex 绘制跨页表格]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/24/latex-table/"/>
    <updated>2014-02-24T19:16:26+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/24/latex-table</id>
    <content type="html"><![CDATA[<p>使用latex绘制表格或多或少都会遇到这样的问题，一个表格过长超过一页应该如何处理，latex提供了一些宏包，如longtable和supertabular;这里介绍如何用supertabular绘制跨页表格。</p>

<!--more-->


<h2>标题命令</h2>

<figure class='code'><figcaption><span>宏包相关命令</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='latex'><span class='line'><span class="k">\bottomcaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class='line'>   底部标题命令，指定在表格的下方生成表格标题。 
</span><span class='line'><span class="k">\tablecaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class='line'>   表格标题命令，生成在上方，作用于<span class="k">\caption</span>类似  
</span><span class='line'><span class="k">\tablefirsthead</span><span class="nb">{</span>首页列标题<span class="nb">}</span>
</span><span class='line'>   用于设置第一页表格的各列标题     
</span><span class='line'><span class="k">\tablehead</span><span class="nb">{</span>续页列标题<span class="nb">}</span>
</span><span class='line'>   用于设置续页列标题，可以含有多个表格行  
</span><span class='line'><span class="k">\tablelasttail</span><span class="nb">{</span>结束表示<span class="nb">}</span>
</span><span class='line'>   用于表格结束时候显示的标示。     
</span><span class='line'><span class="k">\tabletail</span><span class="nb">{</span>分页标识<span class="nb">}</span>
</span><span class='line'>   用于设置分页前，所显示的分页标识，如&quot;接下页&quot;。 
</span><span class='line'><span class="k">\topcaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class='line'>   顶部标题设置，指定表格上方生成表格标题。   
</span></code></pre></td></tr></table></div></figure>


<p>再和其他一些宏包使用，便可以轻松的画出表格了。</p>

<h2>参考样例</h2>

<figure class='code'><figcaption><span>宏包</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='latex'><span class='line'><span class="c">%涉及宏包</span>
</span><span class='line'><span class="k">\usepackage</span><span class="nb">{</span>supertabular<span class="nb">}</span> <span class="c">%supertabular表格宏包</span>
</span><span class='line'><span class="k">\usepackage</span><span class="nb">{</span>colortbl<span class="nb">}</span> <span class="c">%彩色表格宏包</span>
</span><span class='line'><span class="k">\usepackage</span><span class="nb">{</span>booktabs<span class="nb">}</span> <span class="c">%表格线宏包</span>
</span></code></pre></td></tr></table></div></figure>


<h3>参考代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='latex'><span class='line'><span class="c">%跨页表格</span>
</span><span class='line'><span class="k">\begin</span><span class="nb">{</span>center<span class="nb">}</span> <span class="k">\tablecaption</span><span class="nb">{</span>Linux 系统中的目录 <span class="k">\label</span><span class="nb">{</span>tab:super<span class="nb">}}</span>
</span><span class='line'><span class="k">\tablefirsthead</span><span class="nb">{</span>
</span><span class='line'><span class="k">\rowcolor</span><span class="na">[gray]</span><span class="nb">{</span>0.8<span class="nb">}</span>
</span><span class='line'><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>l<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>目录<span class="nb">}}</span> <span class="nb">&amp;</span>
</span><span class='line'><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>注解<span class="nb">}}</span> <span class="k">\\</span> <span class="nb">}</span>
</span><span class='line'><span class="k">\tablehead</span><span class="nb">{</span><span class="k">\multicolumn</span><span class="nb">{</span>2<span class="nb">}{</span>c<span class="nb">}{</span>
</span><span class='line'><span class="k">\small</span> 表 <span class="k">\ref</span><span class="nb">{</span>tab:super<span class="nb">}</span> (续) <span class="nb">}</span> <span class="k">\\</span>
</span><span class='line'><span class="k">\rowcolor</span><span class="na">[gray]</span><span class="nb">{</span>0.8<span class="nb">}</span>
</span><span class='line'><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>l<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>目录<span class="nb">}}</span> <span class="nb">&amp;</span>
</span><span class='line'><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>注解<span class="nb">}}</span> <span class="k">\\</span><span class="nb">}</span>
</span><span class='line'><span class="k">\tabletail</span><span class="nb">{</span><span class="k">\bottomrule</span>
</span><span class='line'><span class="k">\multicolumn</span><span class="nb">{</span>2<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\small</span> 接下页<span class="nb">}</span> <span class="k">\\</span><span class="nb">}</span>
</span><span class='line'><span class="k">\tablelasttail</span><span class="nb">{</span><span class="k">\bottomrule</span><span class="nb">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">\begin</span><span class="nb">{</span>supertabular<span class="nb">}{</span>p<span class="nb">{</span>2.cm<span class="nb">}</span>p<span class="nb">{</span>13cm<span class="nb">}}</span>
</span><span class='line'>
</span><span class='line'>/ <span class="nb">&amp;</span> 根目录，万物起源。<span class="k">\\</span>
</span><span class='line'><span class="k">\midrule</span>
</span><span class='line'>/bin <span class="nb">&amp;</span> 包含系统启动和运行所必须的二进制程序。<span class="k">\\</span>
</span><span class='line'><span class="c">% 以下都是类似行数据，故省略</span>
</span><span class='line'>
</span><span class='line'><span class="k">\end</span><span class="nb">{</span>supertabular<span class="nb">}</span>
</span><span class='line'><span class="k">\end</span><span class="nb">{</span>center<span class="nb">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>效果图</h3>

<p>(太长，缩小看整体效果)</p>

<p><img src="http://unkeltao.qiniudn.com/img/001.png" alt="" /></p>

<p>(标题)</p>

<p><img src="http://unkeltao.qiniudn.com/img/002.png" alt="" /></p>

<p>(跨页表示)</p>

<p><img src="http://unkeltao.qiniudn.com/img/003.png" alt="" /></p>

<p>(续页标题)</p>

<p><img src="http://unkeltao.qiniudn.com/img/004.png" alt="" /><p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/02/24/latex-table/'><a href="http://www.UnkelTao.com/blog/2014/02/24/latex-table/">http://www.UnkelTao.com/blog/2014/02/24/latex-table/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用Sublime text 编写 Ctex]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/"/>
    <updated>2014-02-20T16:29:21+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex</id>
    <content type="html"><![CDATA[<p>写论文必不可少的工具当然是 Latex，但是WinEdt的界面实在是不喜欢，钟爱Sublime的当然想在Sublime上进行Latex的书写，一找，还真找到插件了<strong><a href="https://github.com/SublimeText/LaTeXTools/blob/master/README.markdown">LatexTools</a></strong>。</p>

<!--more-->


<h3>安装与配置</h3>

<p>安装也就是Sublime Text的插件安装，这个很easy。<br/>
配置则参考于<a href="git@github.com:LiamHuang0205/liamhuang0205.github.io.git">这篇文章</a>,讲述的很详细，我就不重复了。<br/>
与之不同的是我并没有安装Texlive,安装的是Ctex，但是操作是一样的。</p>

<p>主要的问题是注意Sublime的中文问题，我是在tex中指明UTF8编码，并且使用xelatex进行编译。</p>

<p><img src="http://unkeltao.qiniudn.com/IMG_latex.png" alt="" /></p>

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/'>http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从 Wordpress 搬迁到 Octopress]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/"/>
    <updated>2014-02-18T21:48:51+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>终于还是从 Wordpress 搬迁到 Octopress 上来了，搬迁相对还是挺容易了，毕竟以前还是接触过一些ruby，加上<a href="http://octopress.org/docs/setup/" title="官方文档">官方文档</a> ，所以环境什么的搭建的比较顺利。</p>

<!--more-->


<p>大概的步骤也就这些：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>安装相关环境：Ruby，Devkit,Python(代码高亮)
</span><span class='line'>参照 Octopress 官方文档进行操作
</span><span class='line'>下载对应主题并修改
</span><span class='line'>添加 Disqus 评论
</span><span class='line'>绑定域名暂时没有做（其实很简单，但是域名暂有其他作用）</span></code></pre></td></tr></table></div></figure>


<p>而且本身Wordpress并没有使用太久，所以文章很少，就手动复制了两篇过来，其他觉得没有必要保留的就抛弃了。比较麻烦的是以前使用过很多个不同类型的博客，里面的搬迁过来手动的写Markdown还是挺麻烦的，而且数量也很大，只能挑选一些放上来了。</p>

<p>以后的博客就是这个了，试用了一下还可以哟。<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/'><a href="http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/">http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemSQL start]]></title>
    <link href="http://www.UnkelTao.com/blog/2013/08/04/memsql-start/"/>
    <updated>2013-08-04T20:13:34+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2013/08/04/memsql-start</id>
    <content type="html"><![CDATA[<p>【测试代码】</p>

<p>昨晚的CF略晚~~而且提示说div2的少年们，你们很可能会爆0~~~</p>

<p>于是赤裸裸的去了，然后悲催的爆0了</p>

<p>只看了A、B两题~~A题觉得挺简单的，敲了个2分交上去过了Pass，想了想B觉得没有想法就睡觉了。。。</p>

<!--more-->


<p>早上一起洗个澡吃完早餐一看<del>WA了</del>然后看了下代码，我去，尼玛有一行特判输出没改，直接注释掉没用的特判就过了</p>

<p>说说A题吧，题意大概是一串字符串，求一个长度为k的子串，是的用最少的该子串来构成源串，你可以使用子串的其中任意个字符按照你想要的方式排序拼接,输出需要的最少个数和该k子串。</p>

<p>解法：数据那么弱，统计下源串每个字母的个数，直接暴力匹配从1个到(n+k-1)/k个能否拼成源串就好,写的2分,也过了.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;climits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cctype&gt;</span>
</span><span class='line'><span class="cp">#include &lt;ctime&gt;</span>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;queue&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;set&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stack&gt;</span>
</span><span class='line'><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class='line'><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class='line'><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class='line'><span class="cp">#define PB push_back</span>
</span><span class='line'><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class='line'><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class='line'><span class="cp">#define pi acos(-1)</span>
</span><span class='line'><span class="cp">#define eps 0.00000001</span>
</span><span class='line'><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class='line'><span class="cp">#define MaxN  1000000</span>
</span><span class='line'><span class="cp">#define mod 10e+7</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define typed int</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">char</span> <span class="n">s</span><span class="p">[</span><span class="mi">1100</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">su</span><span class="p">[</span><span class="mi">27</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">jd</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'><span class="err">   </span><span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">){</span>
</span><span class='line'><span class="err">       </span><span class="n">cnt</span><span class="o">+=</span><span class="p">(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="p">}</span>
</span><span class='line'><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="o">&lt;=</span><span class="n">k</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">pt</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'><span class="err"> </span><span class="c1">//  cout&lt;&lt;&quot;pt&quot;&lt;&lt;endl;   </span>
</span><span class='line'><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">n</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="err">   </span>
</span><span class='line'><span class="err">   </span><span class="n">string</span> <span class="n">ss</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">){</span>
</span><span class='line'><span class="err">      </span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">n</span><span class="p">){</span> <span class="n">ss</span><span class="o">+=</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="sc">&#39;a&#39;</span><span class="p">);</span><span class="n">cnt</span><span class="o">++</span><span class="p">;}</span>
</span><span class='line'><span class="err">   </span><span class="p">}</span>
</span><span class='line'><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ss</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">k</span><span class="o">-</span><span class="n">cnt</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="sc">&#39;a&#39;</span><span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">bit</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
</span><span class='line'><span class="err">     </span><span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'><span class="err">     </span><span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="kt">int</span> <span class="n">kk</span><span class="o">=</span><span class="n">jd</span><span class="p">(</span><span class="n">mid</span><span class="p">);</span>
</span><span class='line'><span class="err">       </span><span class="k">if</span><span class="p">(</span><span class="n">kk</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class='line'><span class="err">       </span><span class="k">else</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="err">   </span>
</span><span class='line'><span class="err">     </span><span class="p">}</span>
</span><span class='line'><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">l</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'><span class="err">   </span><span class="k">while</span><span class="p">(</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="o">&gt;&gt;</span><span class="n">k</span><span class="p">){</span>
</span><span class='line'><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">)</span> <span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">))</span><span class="n">su</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="kt">int</span> <span class="n">ma</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span><span class="n">ma</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">ma</span><span class="p">,</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]);}</span>
</span><span class='line'><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">&lt;</span><span class="n">cnt</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;-</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="k">else</span><span class="p">{</span>
</span><span class='line'><span class="err">       </span>
</span><span class='line'><span class="err">         </span>
</span><span class='line'><span class="err">        </span><span class="c1">//bit((strlen(s)+k-1)/k,ma+1); //2分 </span>
</span><span class='line'><span class="err">        </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">)){</span><span class="err">  </span> <span class="c1">//暴力 </span>
</span><span class='line'><span class="err">           </span><span class="k">if</span><span class="p">(</span><span class="n">jd</span><span class="p">(</span><span class="n">i</span><span class="p">)){</span><span class="n">pt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span><span class="k">break</span><span class="p">;}</span>
</span><span class='line'><span class="err">        </span><span class="p">}</span>
</span><span class='line'><span class="err">     </span><span class="p">}</span>
</span><span class='line'><span class="err">   </span><span class="p">}</span><span class="err">       </span>
</span><span class='line'><span class="err">   </span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>B题一看最长回文子序列，能想到的方法就是2维DP出LCS<del>可是源串长度为50000，2维DP肯定挂</del>早上起来，顺带看了一眼，发现一个条件，回文最长为100（大于100输出100的就行）,这个想了下，就好搞了.一共26字母，说明在2600个字母序列里面肯定会产生回文长度至少是100的。。</p>

<p>这样超过长度2600的就可以直接DP前2600个字母就行了<del>然后就是模板题了</del>真是弱爆了~~</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;climits&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cctype&gt;</span>
</span><span class='line'><span class="cp">#include &lt;ctime&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;queue&gt;</span>
</span><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;set&gt;</span>
</span><span class='line'><span class="cp">#include &lt;map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stack&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class='line'><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class='line'><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class='line'><span class="cp">#define PB push_back</span>
</span><span class='line'><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class='line'><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class='line'><span class="cp">#define pi acos(-1)</span>
</span><span class='line'><span class="cp">#define eps 0.00000001</span>
</span><span class='line'><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class='line'><span class="cp">#define MaxN  50000</span>
</span><span class='line'><span class="cp">#define mod 10e+7</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define typed int</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class='line'><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">dp</span><span class="p">[</span><span class="mi">2620</span><span class="p">][</span><span class="mi">2620</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">c</span><span class="p">[</span><span class="n">MaxN</span><span class="o">+</span><span class="mi">100</span><span class="p">],</span><span class="n">a</span><span class="p">[</span><span class="mi">2620</span><span class="p">],</span><span class="n">b</span><span class="p">[</span><span class="mi">2620</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">k</span><span class="p">[</span><span class="mi">2620</span><span class="p">][</span><span class="mi">2620</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="mi">27</span><span class="p">];</span>
</span><span class='line'><span class="kt">void</span> <span class="n">LCS</span><span class="p">(</span><span class="kt">int</span> <span class="n">len</span><span class="p">){</span>
</span><span class='line'><span class="err">     </span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
</span><span class='line'><span class="err">      </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span>
</span><span class='line'><span class="err">      </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="err">        </span><span class="n">repd</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="err">        </span><span class="p">{</span>
</span><span class='line'><span class="err">            </span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
</span><span class='line'><span class="err">                </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">                </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="o">+</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="err"> </span>
</span><span class='line'><span class="err">            </span><span class="p">}</span>
</span><span class='line'><span class="err">            </span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]){</span>
</span><span class='line'><span class="err">                </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="err">                </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'><span class="err">            </span><span class="p">}</span>
</span><span class='line'><span class="err">            </span><span class="k">else</span><span class="p">{</span>
</span><span class='line'><span class="err">                 </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="err">                 </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="err">            </span><span class="p">}</span><span class="err">        </span>
</span><span class='line'><span class="err">        </span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">char</span> <span class="n">st</span><span class="p">[</span><span class="mi">2610</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
</span><span class='line'><span class="kt">void</span> <span class="n">pt</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="o">||</span><span class="n">m</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">;</span>
</span><span class='line'><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="err">     </span><span class="n">st</span><span class="p">[</span><span class="n">num</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">[</span><span class="n">m</span><span class="p">];</span>
</span><span class='line'><span class="err">   </span><span class="p">}</span>
</span><span class='line'><span class="err">   </span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'><span class="err">   </span><span class="k">else</span> <span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="err"> </span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'><span class="err">    </span><span class="c1">//data();</span>
</span><span class='line'><span class="err">    </span><span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)){</span><span class="err">                           </span>
</span><span class='line'><span class="err">     </span><span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">strlen</span><span class="p">(</span><span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="err">     </span><span class="n">num</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class='line'><span class="err">         </span><span class="n">cnt1</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="err">         </span><span class="k">if</span><span class="p">(</span><span class="n">cnt1</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">&gt;=</span><span class="mi">100</span><span class="p">){</span>
</span><span class='line'><span class="err">           </span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'><span class="err">           </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="err">         </span><span class="p">}</span>
</span><span class='line'><span class="err">     </span><span class="p">}</span>
</span><span class='line'><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fg</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">len</span><span class="o">&gt;</span><span class="mi">2602</span><span class="p">)</span> <span class="n">len</span><span class="o">=</span><span class="mi">2602</span><span class="p">;</span>
</span><span class='line'><span class="err">     </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">b</span><span class="p">[</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];}</span>
</span><span class='line'><span class="err">     </span><span class="n">LCS</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">len</span><span class="p">,</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">st</span><span class="p">);</span>
</span><span class='line'><span class="err">     </span><span class="k">else</span><span class="p">{</span>
</span><span class='line'><span class="err">       </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">st</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">reps</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">49</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">st</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="err"> </span>
</span><span class='line'><span class="err">     </span><span class="p">}</span>
</span><span class='line'><span class="err">     </span>
</span><span class='line'><span class="err">    </span><span class="p">}</span><span class="err">          </span>
</span><span class='line'><span class="err">   </span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>（效果似乎一般）<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2013/08/04/memsql-start/'><a href="http://www.UnkelTao.com/blog/2013/08/04/memsql-start/">http://www.UnkelTao.com/blog/2013/08/04/memsql-start/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The 9th SWJTU Collegiate Programming Contest Qualification Round]]></title>
    <link href="http://www.UnkelTao.com/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round/"/>
    <updated>2013-04-14T06:16:28+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round</id>
    <content type="html"><![CDATA[<p><strong>比赛链接：</strong>  <a href="http://acm.swjtu.edu.cn/JudgeOnline/showcontest?contest_id=1135" title="第九届ACM校赛资格赛">第九届ACM校赛资格赛</a></p>

<p>资格赛嘛，本着大家熟悉环境增强自信心的原则~10道题没有太难的题目~适合新手练习.本次比赛D、E、F是我出的，本着简单的想法却没想到坑了一部分人，其中E题的数据再随机的时候超出了题目描述的范围造成一些人AC的程序WA了，在此表示抱歉,致以诚挚的歉意。下面给出我对着10道题的解法，可能我的解法并不是完全正确恰好过了数据而已，欢迎大家指正。</p>

<!--more-->


<h2>A <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1982">A+B</a></h2>

<p>完全熟悉OJ环境的题目,上面都有标程,第一次接触ACM的需要知道怎么多组输入.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d %d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>B <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1986">猴子爬楼梯1</a></h2>

<p>因为数据不大，可以有3中解法:</p>

<ul>
<li><p>原理：看 n能被被整除<code>GCD(a,b)</code>整除，推论过程略,详见大牛(<a href="http://blog.csdn.net/openspirit/article/details/8797246">大牛题解</a>)。</p></li>
<li><p>模拟法：我们可以确定只要大于 <code>a+b-1</code>的数 我们都可以通过加上a来得到,在+a ,-b的过程中，通过模拟产生出<code>(1，a+b-1)</code>所有的可能,把n对a取模既可以。</p></li>
<li><p>搜索或者暴力,记忆化搜索，也就1000个点而已,代码未写,参见C题。</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">//模拟法</span>
</span><span class='line'><span class="kt">int</span> <span class="n">s</span><span class="p">[</span><span class="mi">10000</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">cnt</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">cur</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">s</span><span class="p">));</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">s</span><span class="p">[</span><span class="n">cur</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">tmp</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">&gt;=</span><span class="n">b</span><span class="p">)</span><span class="n">tmp</span><span class="o">-=</span><span class="n">b</span><span class="p">;</span>
</span><span class='line'>        <span class="k">else</span> <span class="n">tmp</span><span class="o">+=</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cur</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>C <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1990">猴子爬楼梯2</a></h2>

<p><strong>本题将我深深的伤害了</strong></p>

<ul>
<li><p>模拟法:看着数据不大，于是暴力模拟,无限WA,基本思路同B题二解法，只是模拟过程中出现大于top就停止,至今未AC，未发现错误数据，回头对拍,有待考证。(<strong>忘记加特判了<code>a=0,b=0</code>时候挂掉了, 加上AC</strong>)</p></li>
<li><p>记忆化搜索</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">//模拟法</span>
</span><span class='line'><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">gcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span> <span class="n">b</span><span class="o">?</span><span class="n">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">a</span><span class="p">;}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">s</span><span class="p">[</span><span class="mi">1000</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">cnt</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">cur</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">;</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;}</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="n">cur</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">tmp</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">&gt;=</span><span class="n">b</span><span class="p">)</span><span class="n">tmp</span><span class="o">-=</span><span class="n">b</span><span class="p">;</span><span class="k">else</span> <span class="n">tmp</span><span class="o">+=</span><span class="n">a</span><span class="p">;}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cur</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data2.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>       <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">&gt;</span><span class="n">m</span><span class="o">||</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NO</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>       <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">%</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;YES</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>               <span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">cnt</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>               <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">%</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'>               <span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>               <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class='line'>                  <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span>
</span><span class='line'>                  <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&gt;</span><span class="n">m</span><span class="p">){</span><span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span>
</span><span class='line'>               <span class="p">}</span>
</span><span class='line'>               <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;YES</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="k">else</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NO</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">//记忆化搜索</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">used</span><span class="p">[</span><span class="mi">1100</span><span class="p">];</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">bfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="kt">int</span> <span class="n">m</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q</span><span class="p">;</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">m</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>    <span class="n">used</span><span class="p">[</span><span class="n">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">t</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
</span><span class='line'>       <span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">==</span><span class="n">n</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">&amp;&amp;!</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">]){</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">);}</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">]){</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">);}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>D <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1991">统计学号</a></h2>

<p>排序下，扫描一遍即可，秒杀级水题一枚。不会快排的可冒泡。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include&lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include&lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">110</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'> <span class="c1">//   freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class='line'> <span class="c1">//   freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>       <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>       <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>       <span class="n">sort</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>       <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="n">cnt</span><span class="o">++</span><span class="p">;}</span>
</span><span class='line'>       <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>E <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1992">德德的嗜好2.0</a></h2>

<p>此题也是一个排序题，当然如果直接<code>strcmp</code>是不行的，考虑90 9这组数据，结果很明显应该是990而不是909。<br/>
因为我们在排序的时候只要保证<code>(a+b)>(b+a)</code>即可。<br/>
<strong>再次表示对数据中出现了大于1000的数表示抱歉</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include&lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include&lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="n">string</span> <span class="n">s</span><span class="p">[</span><span class="mi">81</span><span class="p">];</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">cmp</span><span class="p">(</span><span class="n">string</span> <span class="n">a</span><span class="p">,</span><span class="n">string</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span><span class="o">&gt;</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">T</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>      <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>      <span class="n">sort</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="n">n</span><span class="p">,</span><span class="n">cmp</span><span class="p">);</span>
</span><span class='line'>      <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>      <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>F <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1993">德德的嗜好3.0</a></h2>

<p>公式题或者找规律  <code>b(8k+m)=b(m)+60k;  (k=n/8;m=n%8)</code> 打表出前8项就够了;其中<code>b(0)=-1;</code> 可以m等于1到8~这样就用不到b(0)但是计算k,m就多了几行代码。<br/>
下面是推论：</p>

<ul>
<li><p>由于<code>a(n+15)-a(n)=60</code>,故若<code>a(n)</code>是3或5的倍数,当且仅当<code>a(n+15)</code>是3或5的倍数.</p></li>
<li><p>于是每15个数是一个周期，前15个3-59~所以划分区间。</p></li>
<li><p>现将数轴正向分成一系列长为60的区间段: <code>(0,+?)＝(0,60]∪(60,120]∪(120,180]∪…,</code>注意第一个区间段中含有{a(n)}的项15个,即<code>3,7,11,15,19,23,27,31,35,39,43,47,51,55,59</code>其中属于{ }的项8个,为:<code>b(1)=7, b(2)=11, b(3)=19, b(4)=23,   b(5)=31, b(6)=43, b(7)=47, b(8)=59</code></p></li>
<li><p>于是每个区间段中恰有15个{ }的项,8个{ }的项,且有<code>b(8k+m)-b(m)=60k;</code></p></li>
<li><p>EG：由于<code>2006＝8×250+6</code>,而<code>b(6)=43</code>,所以<code>b(2006)=60*250+b(6)=15043</code>。</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include&lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include&lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class='line'>    <span class="c1">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ll</span> <span class="n">ans</span><span class="o">=</span><span class="mi">60LL</span><span class="o">*</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="n">b</span><span class="p">[</span><span class="n">n</span><span class="o">%</span><span class="mi">8</span><span class="p">];</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%lld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>G <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1994">不知道自己不知道</a></h2>

<p>没什么好说的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">))</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="n">n</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>H <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1995">知道自己不知道</a></h2>

<p>数组求和除以M向上取整.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'><span class="n">sum</span><span class="o">+=</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,(</span><span class="n">sum</span><span class="o">+</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">m</span><span class="p">);</span> <span class="c1">//加上m-1为向上取整</span>
</span></code></pre></td></tr></table></div></figure>


<h2>I <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1996">不知道自己知道</a></h2>

<p>暴力比较即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class='line'><span class="n">string</span> <span class="n">s</span><span class="p">[</span><span class="mi">110</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">T</span><span class="p">;</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">qurry</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">t</span><span class="o">++&lt;</span><span class="n">T</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">){</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];}</span>
</span><span class='line'>        <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Case #&quot;</span><span class="o">&lt;&lt;</span><span class="n">t</span><span class="o">&lt;&lt;</span><span class="s">&quot;:&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">){</span>
</span><span class='line'>          <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">qurry</span><span class="p">;</span>
</span><span class='line'>          <span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="n">qurry</span><span class="o">==</span><span class="n">s</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;}}</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Yes&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>          <span class="k">else</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;No&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>J <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1997">知道自己知道</a></h1>

<p>做一下结构体，保存i和和i出现的次数，有负数，i集体加上100，然后恢复即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class='line'><span class="k">struct</span> <span class="n">pt</span><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">cnt</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="n">pt</span> <span class="n">s</span><span class="p">[</span><span class="mi">550</span><span class="p">];</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">cmp</span><span class="p">(</span><span class="n">pt</span> <span class="n">a</span><span class="p">,</span><span class="n">pt</span> <span class="n">b</span><span class="p">){</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">cnt</span><span class="o">==</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">)</span> <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">i</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">cnt</span><span class="o">&gt;</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">t</span><span class="p">);</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">t</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">i</span><span class="o">=</span><span class="n">i</span><span class="o">-</span><span class="mi">100</span><span class="p">;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>  <span class="p">{</span>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>      <span class="n">s</span><span class="p">[</span><span class="n">a</span><span class="o">+</span><span class="mi">100</span><span class="p">].</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>        <span class="n">sort</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="mi">500</span><span class="p">,</span><span class="n">cmp</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">;}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span>  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %d&quot;</span><span class="p">,</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">i</span><span class="p">);</span>   <span class="p">}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上题目均为过测试数据的程序，不保证程序完全正确无误，欢迎指正,预赛题目难度很明显会增大很多，大家加油。 3Q<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round/'><a href="http://www.UnkelTao.com/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round/">http://www.UnkelTao.com/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round/</a></a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'><a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[回文判断 Hash+线段树]]></title>
    <link href="http://www.UnkelTao.com/blog/2012/12/18/huiwen-hash/"/>
    <updated>2012-12-18T17:14:12+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2012/12/18/huiwen-hash</id>
    <content type="html"><![CDATA[<p>比赛的一道题,一直没时间写.最近空了，继续写写水题。</p>

<p>题目描述：</p>

<!--more-->


<h2>Description</h2>

<p>Now we have a long long string, and we will have two kinds of operation on it.<br/>
C i y: change the ith letter to y;<br/>
Q i j: check whether the substring from ith letter to jth letter is a palindrome.</p>

<h2>Input</h2>

<p>There are multiple test cases.<br/>
The first line contains a string whose length is not large than 1,000,000.<br/>
The next line contains a integer N indicating the number of operations.<br/>
The next N lines each lines contains a operation.<br/>
All letters in the input are lower-case.</p>

<h2>Output</h2>

<p>For each query operation, output &ldquo;yes&rdquo; if the corresponding substring is a palindrome, otherwise output &ldquo;no&rdquo;.</p>

<h2>Sample Input</h2>

<p>aaaaa <br/>
4<br/>
Q 1 5 <br/>
C 2 b <br/>
Q 1 5 <br/>
Q 1 3</p>

<h2>Sample Output</h2>

<p>yes <br/>
no <br/>
yes</p>

<p><strong>题意：</strong>给你一串字符串~然后有两种操作：Q a b 询问a到b之间的子串是否是回文 ；C i y 将第i个字母变成y</p>

<p>水题，比赛的时候没有写完,
在学妹的提示下，知道了判断回文可以用hash，正反hash相等的子串就是回文;于是再套上线段树来维护区间的hash值.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include&lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include&lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#define N 1100010</span>
</span><span class='line'><span class="cp">#define mod 1000000007</span>
</span><span class='line'><span class="cp">#define ll long long</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">Tree</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ll</span> <span class="n">left</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ll</span> <span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">Tree</span> <span class="n">T</span><span class="p">[</span><span class="n">N</span><span class="o">*</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">kk</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">hashinit</span><span class="p">(){</span><span class="n">kk</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">kk</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">kk</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="o">%</span><span class="n">mod</span><span class="p">;}</span>
</span><span class='line'><span class="n">Tree</span> <span class="n">cnt</span><span class="p">(</span><span class="n">Tree</span> <span class="n">tmp1</span><span class="p">,</span><span class="n">Tree</span> <span class="n">tmp2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>   <span class="n">Tree</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'>     <span class="n">ans</span><span class="p">.</span><span class="n">l</span><span class="o">=</span><span class="n">tmp1</span><span class="p">.</span><span class="n">l</span><span class="p">;</span>
</span><span class='line'>     <span class="n">ans</span><span class="p">.</span><span class="n">r</span><span class="o">=</span><span class="n">tmp2</span><span class="p">.</span><span class="n">r</span><span class="p">;</span>
</span><span class='line'>     <span class="n">ans</span><span class="p">.</span><span class="n">left</span><span class="o">=</span><span class="p">(</span><span class="n">kk</span><span class="p">[</span><span class="n">tmp2</span><span class="p">.</span><span class="n">r</span><span class="o">-</span><span class="n">tmp2</span><span class="p">.</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">tmp1</span><span class="p">.</span><span class="n">left</span><span class="o">+</span><span class="n">tmp2</span><span class="p">.</span><span class="n">left</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
</span><span class='line'>     <span class="n">ans</span><span class="p">.</span><span class="n">right</span><span class="o">=</span><span class="p">(</span><span class="n">kk</span><span class="p">[</span><span class="n">tmp1</span><span class="p">.</span><span class="n">r</span><span class="o">-</span><span class="n">tmp1</span><span class="p">.</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="n">tmp2</span><span class="p">.</span><span class="n">right</span><span class="o">+</span><span class="n">tmp1</span><span class="p">.</span><span class="n">right</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">init</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">l</span><span class="o">=</span><span class="n">l</span><span class="p">;</span>
</span><span class='line'>     <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">r</span><span class="o">=</span><span class="n">r</span><span class="p">;</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">==</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>        <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">right</span><span class="o">=</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">left</span><span class="o">=</span><span class="n">str</span><span class="p">[</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">;</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>     <span class="n">init</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>     <span class="n">init</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">,((</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
</span><span class='line'>     <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">],</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">update</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="kt">int</span> <span class="n">k</span><span class="p">,</span><span class="kt">int</span> <span class="n">w</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="kt">int</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">l</span><span class="o">==</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">l</span><span class="o">==</span><span class="n">k</span><span class="p">)</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">left</span><span class="o">=</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">right</span><span class="o">=</span><span class="n">w</span><span class="p">;</span>
</span><span class='line'>       <span class="k">return</span> <span class="p">;</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">].</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">k</span><span class="o">&amp;&amp;</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">].</span><span class="n">r</span><span class="o">&gt;=</span><span class="n">k</span><span class="p">)</span> <span class="n">update</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">w</span><span class="p">);</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">].</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">k</span><span class="o">&amp;&amp;</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">].</span><span class="n">r</span><span class="o">&gt;=</span><span class="n">k</span><span class="p">)</span><span class="n">update</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">w</span><span class="p">);</span>
</span><span class='line'>     <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">cnt</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">],</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">Tree</span> <span class="n">querry</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="n">Tree</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">l</span><span class="o">&gt;=</span><span class="n">l</span><span class="o">&amp;&amp;</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">r</span><span class="o">&lt;=</span><span class="n">r</span><span class="p">)</span><span class="k">return</span> <span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">].</span><span class="n">r</span><span class="o">&gt;=</span><span class="n">r</span><span class="p">)</span><span class="k">return</span> <span class="n">querry</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">].</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">l</span><span class="p">)</span><span class="k">return</span> <span class="n">querry</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">cnt</span><span class="p">(</span><span class="n">querry</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">].</span><span class="n">r</span><span class="p">),</span><span class="n">querry</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">,</span><span class="n">T</span><span class="p">[</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span><span class="p">].</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">q</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">qt</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="n">ch</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="n">Tree</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'>    <span class="n">hashinit</span><span class="p">();</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">str</span><span class="p">)){</span>
</span><span class='line'>        <span class="n">init</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">strlen</span><span class="p">(</span><span class="n">str</span><span class="p">));</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">q</span><span class="p">);</span>
</span><span class='line'>       <span class="k">while</span><span class="p">(</span><span class="n">q</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>           <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">qt</span><span class="p">);</span>
</span><span class='line'>           <span class="k">if</span><span class="p">(</span><span class="n">qt</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;C&#39;</span><span class="p">){</span>
</span><span class='line'>            <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%s&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">k</span><span class="p">,</span><span class="o">&amp;</span><span class="n">ch</span><span class="p">);</span>
</span><span class='line'>            <span class="n">update</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">ch</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>           <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>            <span class="n">ans</span><span class="o">=</span><span class="n">querry</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">.</span><span class="n">right</span><span class="o">==</span><span class="n">ans</span><span class="p">.</span><span class="n">left</span><span class="o">?</span><span class="s">&quot;yes&quot;</span><span class="o">:</span><span class="s">&quot;no&quot;</span><span class="p">);</span>
</span><span class='line'>           <span class="p">}</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2012/12/18/huiwen-hash/'>http://www.UnkelTao.com/blog/2012/12/18/huiwen-hash/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu problem]]></title>
    <link href="http://www.UnkelTao.com/blog/2011/02/19/ubuntu-problem/"/>
    <updated>2011-02-19T00:00:07+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2011/02/19/ubuntu-problem</id>
    <content type="html"><![CDATA[<p>问题：</p>

<p><img src="http://unkeltao.qiniudn.com/IMG_002.jpg" alt="" />
<img src="http://unkeltao.qiniudn.com/IMG_003.jpg" alt="" /></p>

<p>解决代码：
法1：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install dkms build-essential linux-headers-<span class="k">$(</span>uname -r<span class="k">)</span>
</span><span class='line'>sudo /etc/init.d/vboxdrv setup
</span></code></pre></td></tr></table></div></figure>


<p>法2：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install module-assistant
</span><span class='line'>sudo modprobe vboxnetflt
</span><span class='line'>sudo modprobe vboxdrv
</span></code></pre></td></tr></table></div></figure>


<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2011/02/19/ubuntu-problem/'>http://www.UnkelTao.com/blog/2011/02/19/ubuntu-problem/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[雨季不再来]]></title>
    <link href="http://www.UnkelTao.com/blog/2010/03/05/my-first-post/"/>
    <updated>2010-03-05T20:10:42+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2010/03/05/my-first-post</id>
    <content type="html"><![CDATA[<p><img src="http://unkeltao.qiniudn.com/IMG_001.jpg" alt="" />
人之所以悲哀，是因为我们留不住岁月，更无法不承认，青春，有一日是要这么自然地消失过去。</p>

<!--more-->


<p>而人之可贵，也在于我们因着时光环境的改变，在生活上得到长进。岁月的流失固然是无可奈何，而人的逐渐蜕变，却又脱不出时光的力量。</p>

<p>我想，一个人的过去，就像《圣经》上雅各的天梯一样，踏一步决不能上升到天国去。而人的过程，也是要一格一格地爬着梯子，才能到了某种高度。在那个高度上，满江风月，青山绿水，尽入眼前。这种境界心情与踏上第一步梯子而不知上面将是什么情形的迷惘惶惑是很不相同的。</p>

<p>乐观与悲观，都不流于实际。一件明明没有希望的事情，如果乐观地去处理，在我，就是失之于天真，这跟悲观是一样的不正确，甚而更坏。</p>

<p>我，只是一个实际的人，我要得着的东西，说起来十分普通。一切不着边际的想法，如果我守着自己淡泊宁静的生活原则，我根本不会刻意去追求它。对于生活的环境，我也抱着一样的态度。我唯一锲而不舍，愿意以自己的生命去努力的，只不过是保守我个人的心怀意念，在有生之日，不放弃对生活的热爱和执著，在有限的时空里，过无限广大的日子。</p>

<p>人，是可以改变的，只是每个人都需要时间。我们要如何度过自己的一生，固执不变当然是可贵，而有时向生活中另找乐趣，亦是不可或缺的努力和目标。</p>

<p>我的心中有一个不变的信仰，它是什么，我也不清楚，但我不会放弃这在冥冥中引导我的力量，直到有一天我离开人世，返回永恒的地方。-</p>

<p>真正的快乐，不是狂喜，亦不是痛苦，在我很主观的来说，它是细水长流，碧海无波，在芸芸众生里做一个普通的人，享受生命一刹间喜悦，那么我们即使不死，也在天堂了。。。。</p>

<p>—《雨季不再来》</p>

<p class='post-footer'>原文地址:&nbsp;<a href='http://www.UnkelTao.com/blog/2010/03/05/my-first-post/'>http://www.UnkelTao.com/blog/2010/03/05/my-first-post/</a><br/><br/>&nbsp;由 <a href='http://www.UnkelTao.com'>UnkelTao</a>&nbsp;撰写并发表于 <a href='http://www.UnkelTao.com'>http://www.UnkelTao.com</a></p>

]]></content>
  </entry>
  
</feed>
