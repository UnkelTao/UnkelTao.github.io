<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CF | /UnkelTao]]></title>
  <link href="http://www.UnkelTao.com/blog/categories/cf/atom.xml" rel="self"/>
  <link href="http://www.UnkelTao.com/"/>
  <updated>2014-03-19T01:06:57+08:00</updated>
  <id>http://www.UnkelTao.com/</id>
  <author>
    <name><![CDATA[UnkelTao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[codeforce 235]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/"/>
    <updated>2014-03-11T14:02:19+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/11/codeforce-235</id>
    <content type="html"><![CDATA[<p>好久没做CF了，觉得再不做估计以后笔试都过不鸟，于是还得经常做一做。</p>

<p>CF的回滚对我木有影响阿，我已经好久没做了似乎。</p>

<p>这次的DIV2似乎比以前的简单一点。</p>

<h2><a href="http://codeforces.com/contest/401/problem/A">A. Vanya and Cards</a></h2>

<p>送分,大概给你一堆数，问你最少还需要几个绝对值不超过X的数能够让他们的和为0.</p>

<p><code>ruby
n,x = gets.chomp!.split.map { |e|  e.to_i}
sum = gets.split.collect{|x| x.to_i}.inject{|y, x| y += x}
p (sum.abs + x -1)/x
</code></p>

<!--more-->


<h2><a href="http://codeforces.com/contest/401/problem/B">B. Sereja and Contests</a></h2>

<p>模拟题
```ruby
n,k = gets.chomp!.split.map { |e|  e.to_i}
A = Array.new(n) { |i|  0}
k.times {<br/>
   c,d1,d2 =  gets.chomp!.split.map { |e|  e.to_i}
   A[d1-1] = 1
   if d2 != nil</p>

<pre><code> A[d2-1] = 1
</code></pre>

<p>   end
}</p>

<p>mx=0
mi=0
cur=0
(n-1).times do |i|
   if A[i] == 0</p>

<pre><code>    cur += 1
</code></pre>

<p>   else</p>

<pre><code>   mx += cur
   mi += (cur+1)/2
   cur = 0  
</code></pre>

<p>   end<br/>
end</p>

<p>mx += cur
mi += (cur+1)/2
puts &ldquo;#{mi} #{mx}&rdquo;
```</p>

<h2><a href="http://codeforces.com/contest/401/problem/C">C. Team</a></h2>

<p>也是模拟题，给你n个1，m个0，让你给出一种排列，不能有3个1连在一起，不能有两个0连在一起，给出任意一种方案即可，不能则输出-1
```ruby
m,n = gets.chomp!.split.map { |e|  e.to_i}
if n+1 &lt; m</p>

<pre><code>p -1
exit
</code></pre>

<p>elsif (m+1)*2 &lt; n</p>

<pre><code>p -1
exit
</code></pre>

<p>end</p>

<p>if n == m</p>

<pre><code>n.times{printf "10" }
puts ""
</code></pre>

<p>elsif m == n+1</p>

<pre><code>n.times{print "01"}
puts 0
</code></pre>

<p>elsif (m+1)*2 == n</p>

<pre><code>m.times{printf "110"}
puts "11"
</code></pre>

<p>elsif m*2 == n</p>

<pre><code>m.times{print "110"}
puts ""
</code></pre>

<p>else</p>

<pre><code>k = n - 1 - m
(k).times {print "110"}
(m-k).times{print "10"}
puts "1"
</code></pre>

<p>end
```</p>

<h2><a href="http://codeforces.com/contest/401/problem/D">D. Roman and Numbers</a></h2>

<p>暴力+状态压缩。
题意：给你一个不超过18位的数n,和不超过100的m,将n进行重排(改变里面的位置，当然0不能排在最前面)，问有多少个数是m的倍数。
ruby似乎跑的很慢，不幸TLE的，C++可以过</p>

<p>```ruby
n,m = gets.chomp!.split
m = m.to_i
len = n.size
dp = Array.new((1&lt;&lt;len)+2) {Array.new(m+5,0)}
dp[0][0] = 1</p>

<p>(1&lt;&lt;len).times do |i|</p>

<pre><code>m.times { |j|  
    tp = Array.new(20,0)
    len.times{|k|
        t = n[k].chr.to_i
        if i&amp;(1&lt;&lt;k) != 0 || (i==0 &amp;&amp; t==0) || tp[t] !=0 
            next
        end
        tp[t] = 1
        dp[i|(1&lt;&lt;k)][(j*10+t)%m] +=dp[i][j]
    }   
}
</code></pre>

<p>end
p dp[(1&lt;&lt;len)-1][0]
```</p>

<h2><a href="http://codeforces.com/contest/401/problem/E">E. Olympic Games</a></h2>

<p>略难，暂时不会</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemSQL start]]></title>
    <link href="http://www.UnkelTao.com/blog/2013/08/04/memsql-start/"/>
    <updated>2013-08-04T20:13:34+08:00</updated>
    <id>http://www.UnkelTao.com/blog/2013/08/04/memsql-start</id>
    <content type="html"><![CDATA[<p>【测试代码】</p>

<p>昨晚的CF略晚~~而且提示说div2的少年们，你们很可能会爆0~~~</p>

<p>于是赤裸裸的去了，然后悲催的爆0了</p>

<p>只看了A、B两题~~A题觉得挺简单的，敲了个2分交上去过了Pass，想了想B觉得没有想法就睡觉了。。。</p>

<!--more-->


<p>早上一起洗个澡吃完早餐一看<del>WA了</del>然后看了下代码，我去，尼玛有一行特判输出没改，直接注释掉没用的特判就过了</p>

<p>说说A题吧，题意大概是一串字符串，求一个长度为k的子串，是的用最少的该子串来构成源串，你可以使用子串的其中任意个字符按照你想要的方式排序拼接,输出需要的最少个数和该k子串。</p>

<p>解法：数据那么弱，统计下源串每个字母的个数，直接暴力匹配从1个到(n+k-1)/k个能否拼成源串就好,写的2分,也过了.</p>

<p>```c++</p>

<h1>include <cstdio></h1>

<h1>include <cstdlib></h1>

<h1>include <cstring></h1>

<h1>include <cmath></h1>

<h1>include <climits></h1>

<h1>include <cctype></h1>

<h1>include <ctime></h1>

<h1>include <algorithm></h1>

<h1>include <iostream></h1>

<h1>include <queue></h1>

<h1>include <vector></h1>

<h1>include <set></h1>

<h1>include <map></h1>

<h1>include <stack></h1>

<h1>define SQR(x) ((x)*(x))</h1>

<h1>define rep(i, n) for (int i=0; i&lt;(n); ++i)</h1>

<h1>define repd(i,n)  for(int i=1;i&lt;=(n);++i)</h1>

<h1>define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</h1>

<h1>define reps(i, a, b) for (int i=(a); i>=(b); &mdash;i)</h1>

<h1>define PB push_back</h1>

<h1>define MP(A, B) make_pair(A, B)</h1>

<h1>define pow2(n) (1&lt;&lt;(n))</h1>

<h1>define pi acos(-1)</h1>

<h1>define eps 0.00000001</h1>

<h1>define lg(n) log10((n)*1.0)</h1>

<h1>define MaxN  1000000</h1>

<h1>define mod 10e+7</h1>

<h1>define ll long long</h1>

<h1>define typed int</h1>

<p>using namespace std;
void data(){
   freopen(&ldquo;data.in&rdquo;,&ldquo;r&rdquo;,stdin);
   freopen(&ldquo;data.out&rdquo;,&ldquo;w&rdquo;,stdout);
}
char s[1100];
int su[27];
int k;
int jd(int n){
   int cnt=0;
   rep(i,26){
       cnt+=(su[i]+n-1)/n;
   }
   if(cnt&lt;=k) return 1;
   else return 0;
}
void pt(int n){
 //  cout&lt;&lt;&ldquo;pt&rdquo;&lt;&lt;endl;  
   cout&lt;&lt;n&lt;&lt;endl;   
   string ss=&ldquo;&rdquo;;
   int cnt=0;
   rep(i,26){
      rep(j,(su[i]+n-1)/n){ ss+=(i+&lsquo;a&rsquo;);cnt++;}
   }
   cout&lt;&lt;ss;
   rep(i,k-cnt)cout&lt;&lt;&lsquo;a&rsquo;;
   cout&lt;&lt;endl;
}
void bit(int l,int r){
     while(l&lt;r){
     int mid=(l+r)/2;
     int kk=jd(mid);
       if(kk>0) r=mid;
       else l=mid+1;   
     }
     pt(l);
}
 
int main(){
   while(cin>>s>>k){
     rep(i,26) su[i]=0;
     rep(i,strlen(s))su[s[i]&ndash;&lsquo;a&rsquo;]++;
     int ma=0,cnt=0;
     rep(i,26)if(su[i]){cnt++;ma=max(ma,su[i]);}
     if(k&lt;cnt)cout&lt;&lt;-1&lt;&lt;endl;
     else{
       
         
        //bit((strlen(s)+k-1)/k,ma+1); //2分
        repd(i,strlen(s)){   //暴力
           if(jd(i)){pt(i);break;}
        }
     }
   }       
   return 0;
}
```</p>

<p>B题一看最长回文子序列，能想到的方法就是2维DP出LCS<del>可是源串长度为50000，2维DP肯定挂</del>早上起来，顺带看了一眼，发现一个条件，回文最长为100（大于100输出100的就行）,这个想了下，就好搞了.一共26字母，说明在2600个字母序列里面肯定会产生回文长度至少是100的。。</p>

<p>这样超过长度2600的就可以直接DP前2600个字母就行了<del>然后就是模板题了</del>真是弱爆了~~</p>

<p>```c++</p>

<h1>include <cstdio></h1>

<h1>include <cstdlib></h1>

<h1>include <cstring></h1>

<h1>include <cmath></h1>

<h1>include <climits></h1>

<h1>include <cctype></h1>

<h1>include <ctime></h1>

<p> </p>

<h1>include <algorithm></h1>

<h1>include <iostream></h1>

<h1>include <queue></h1>

<h1>include <vector></h1>

<h1>include <set></h1>

<h1>include <map></h1>

<h1>include <stack></h1>

<p> </p>

<h1>define SQR(x) ((x)*(x))</h1>

<h1>define rep(i, n) for (int i=0; i&lt;(n); ++i)</h1>

<h1>define repd(i,n)  for(int i=1;i&lt;=(n);++i)</h1>

<h1>define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</h1>

<h1>define reps(i, a, b) for (int i=(a); i>=(b); &mdash;i)</h1>

<h1>define PB push_back</h1>

<h1>define MP(A, B) make_pair(A, B)</h1>

<h1>define pow2(n) (1&lt;&lt;(n))</h1>

<h1>define pi acos(-1)</h1>

<h1>define eps 0.00000001</h1>

<h1>define lg(n) log10((n)*1.0)</h1>

<h1>define MaxN  50000</h1>

<h1>define mod 10e+7</h1>

<h1>define ll long long</h1>

<h1>define typed int</h1>

<p>using namespace std;
void data(){
   freopen(&ldquo;data.in&rdquo;,&ldquo;r&rdquo;,stdin);
   freopen(&ldquo;data.out&rdquo;,&ldquo;w&rdquo;,stdout);
}
int dp[2620][2620];
char c[MaxN+100],a[2620],b[2620];
int k[2620][2620];
int cnt[27];
void LCS(int len){
     int i, j;
      rep(i,len+1){ dp[i][0]=dp[0][i]=0;}
      repd(i,len)
        repd(j,len)
        {
            if(a[i]==b[j]){
                k[i][j]=0;
                dp[i][j]=1+dp[i-1][j-1]; 
            }
            else if(dp[i-1][j]>=dp[i][j-1]){
                k[i][j]=1;
                dp[i][j]=dp[i-1][j];
            }
            else{
                 k[i][j]=-1;
                 dp[i][j]=dp[i][j-1];
            }        
        }
}
char st[2610];
int num;
void pt(int m,int n){
   if(n==0||m==0) return ;
   if(k[m][n]==0){
     pt(m-1,n-1);
     st[num++]=a[m];
   }
   else if(k[m][n]>0) pt(m-1,n);
   else pt(m,n-1); 
}
int main(){
    //data();
    while(~scanf(&ldquo;%s&rdquo;,c+1)){                           
     int len=strlen(c+1);
     num=0;
     bool fg=1;
     repd(i,len){
         cnt1-&lsquo;a&rsquo;]++;
         if(cnt1-&lsquo;a&rsquo;]>=100){
           rep(j,100)cout&lt;&lt;c[i];
           cout&lt;&lt;endl;fg=0;break;
         }
     }
     if(!fg)continue;
     if(len>2602) len=2602;
     repd(i,len){a[i]=c[i];b[len+1-i]=c[i];}
     LCS(len);
     pt(len,len);
     if(num&lt;=100)printf(&ldquo;%s\n&rdquo;,st);
     else{
       rep(i,50)cout&lt;&lt;st[i];reps(i,49,0)cout&lt;&lt;st[i]; cout&lt;&lt;endl; 
     }
     
    }          
   return 0;
}
```</p>

<p>（效果似乎一般）</p>
]]></content>
  </entry>
  
</feed>
