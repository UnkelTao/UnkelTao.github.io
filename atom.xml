<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[\UnkelTao]]></title>
  <link href="http://UnkelTao.github.io/atom.xml" rel="self"/>
  <link href="http://UnkelTao.github.io/"/>
  <updated>2014-02-19T21:21:58+08:00</updated>
  <id>http://UnkelTao.github.io/</id>
  <author>
    <name><![CDATA[UnkelTao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从 Wordpress 搬迁到 Octopress]]></title>
    <link href="http://UnkelTao.github.io/blog/2014/02/18/wordpress-to-octopress/"/>
    <updated>2014-02-18T21:48:51+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2014/02/18/wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>终于还是从 Wordpress 搬迁到 Octopress 上来了，搬迁相对还是挺容易了，毕竟以前还是接触过一些ruby，加上<a href="http://octopress.org/docs/setup/" title="官方文档">官方文档</a> ，所以环境什么的搭建的比较顺利。</p>

<p>大概的步骤也就这些：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>安装相关环境：Ruby，Devkit,Python(代码高亮)
</span><span class='line'>参照 Octopress 官方文档进行操作
</span><span class='line'>下载对应主题并修改
</span><span class='line'>添加 Disqus 评论
</span><span class='line'>绑定域名暂时没有做（其实很简单，但是域名暂有其他作用）</span></code></pre></td></tr></table></div></figure>


<p>而且本身Wordpress并没有使用太久，所以文章很少，就手动复制了两篇过来，其他觉得没有必要保留的就抛弃了。比较麻烦的是以前使用过很多个不同类型的博客，里面的搬迁过来手动的写Markdown还是挺麻烦的，而且数量也很大，只能挑选一些放上来了。</p>

<p>以后的博客就是这个了，试用了一下还可以哟。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemSQL start]]></title>
    <link href="http://UnkelTao.github.io/blog/2013/08/04/memsql-start/"/>
    <updated>2013-08-04T20:13:34+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2013/08/04/memsql-start</id>
    <content type="html"><![CDATA[<p>【测试代码】</p>

<p>昨晚的CF略晚~~而且提示说div2的少年们，你们很可能会爆0~~~</p>

<p>于是赤裸裸的去了，然后悲催的爆0了</p>

<p>只看了A、B两题~~A题觉得挺简单的，敲了个2分交上去过了Pass，想了想B觉得没有想法就睡觉了。。。</p>

<!--more-->


<p>早上一起洗个澡吃完早餐一看<del>WA了</del>然后看了下代码，我去，尼玛有一行特判输出没改，直接注释掉没用的特判就过了</p>

<p>说说A题吧，题意大概是一串字符串，求一个长度为k的子串，是的用最少的该子串来构成源串，你可以使用子串的其中任意个字符按照你想要的方式排序拼接,输出需要的最少个数和该k子串。</p>

<p>解法：数据那么弱，统计下源串每个字母的个数，直接暴力匹配从1个到(n+k-1)/k个能否拼成源串就好,写的2分,也过了.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>#include &lt;cstdlib&gt;
</span><span class='line'>#include &lt;cstring&gt;
</span><span class='line'>#include &lt;cmath&gt;
</span><span class='line'>#include &lt;climits&gt;
</span><span class='line'>#include &lt;cctype&gt;
</span><span class='line'>#include &lt;ctime&gt;
</span><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;iostream&gt;
</span><span class='line'>#include &lt;queue&gt;
</span><span class='line'>#include &lt;vector&gt;
</span><span class='line'>#include &lt;set&gt;
</span><span class='line'>#include &lt;map&gt;
</span><span class='line'>#include &lt;stack&gt;
</span><span class='line'>#define SQR(x) ((x)*(x))
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class='line'>#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class='line'>#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class='line'>#define PB push_back
</span><span class='line'>#define MP(A, B) make_pair(A, B)
</span><span class='line'>#define pow2(n) (1&lt;&lt;(n))
</span><span class='line'>#define pi acos(-1)
</span><span class='line'>#define eps 0.00000001
</span><span class='line'>#define lg(n) log10((n)*1.0)
</span><span class='line'>#define MaxN  1000000
</span><span class='line'>#define mod 10e+7
</span><span class='line'>#define ll long long
</span><span class='line'>#define typed int
</span><span class='line'>using namespace std;
</span><span class='line'>void data(){
</span><span class='line'>   freopen("data.in","r",stdin);
</span><span class='line'>   freopen("data.out","w",stdout);
</span><span class='line'>}
</span><span class='line'>char s[1100];
</span><span class='line'>int su[27];
</span><span class='line'>int k;
</span><span class='line'>int jd(int n){
</span><span class='line'>   int cnt=0;
</span><span class='line'>   rep(i,26){
</span><span class='line'>       cnt+=(su[i]+n-1)/n;
</span><span class='line'>   } 
</span><span class='line'>   if(cnt&lt;=k) return 1;
</span><span class='line'>   else return 0;
</span><span class='line'>}
</span><span class='line'>void pt(int n){
</span><span class='line'> //  cout&lt;&lt;"pt"&lt;&lt;endl;   
</span><span class='line'>   cout&lt;&lt;n&lt;&lt;endl;    
</span><span class='line'>   string ss="";
</span><span class='line'>   int cnt=0;
</span><span class='line'>   rep(i,26){
</span><span class='line'>      rep(j,(su[i]+n-1)/n){ ss+=(i+'a');cnt++;}
</span><span class='line'>   }
</span><span class='line'>   cout&lt;&lt;ss;
</span><span class='line'>   rep(i,k-cnt)cout&lt;&lt;'a';
</span><span class='line'>   cout&lt;&lt;endl;
</span><span class='line'>}
</span><span class='line'>void bit(int l,int r){
</span><span class='line'>     while(l&lt;r){
</span><span class='line'>     int mid=(l+r)/2;
</span><span class='line'>     int kk=jd(mid);
</span><span class='line'>       if(kk&gt;0) r=mid;
</span><span class='line'>       else l=mid+1;    
</span><span class='line'>     }
</span><span class='line'>     pt(l);
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>int main(){
</span><span class='line'>   while(cin&gt;&gt;s&gt;&gt;k){
</span><span class='line'>     rep(i,26) su[i]=0;
</span><span class='line'>     rep(i,strlen(s))su[s[i]-'a']++;
</span><span class='line'>     int ma=0,cnt=0;
</span><span class='line'>     rep(i,26)if(su[i]){cnt++;ma=max(ma,su[i]);}
</span><span class='line'>     if(k&lt;cnt)cout&lt;&lt;-1&lt;&lt;endl;
</span><span class='line'>     else{
</span><span class='line'>       
</span><span class='line'>         
</span><span class='line'>        //bit((strlen(s)+k-1)/k,ma+1); //2分 
</span><span class='line'>        repd(i,strlen(s)){   //暴力 
</span><span class='line'>           if(jd(i)){pt(i);break;}
</span><span class='line'>        }
</span><span class='line'>     } 
</span><span class='line'>   }        
</span><span class='line'>   return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>B题一看最长回文子序列，能想到的方法就是2维DP出LCS<del>可是源串长度为50000，2维DP肯定挂</del>早上起来，顺带看了一眼，发现一个条件，回文最长为100（大于100输出100的就行）,这个想了下，就好搞了.一共26字母，说明在2600个字母序列里面肯定会产生回文长度至少是100的。。</p>

<p>这样超过长度2600的就可以直接DP前2600个字母就行了<del>然后就是模板题了</del>真是弱爆了~~</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>#include &lt;cstdlib&gt;
</span><span class='line'>#include &lt;cstring&gt;
</span><span class='line'>#include &lt;cmath&gt;
</span><span class='line'>#include &lt;climits&gt;
</span><span class='line'>#include &lt;cctype&gt;
</span><span class='line'>#include &lt;ctime&gt;
</span><span class='line'> 
</span><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;iostream&gt;
</span><span class='line'>#include &lt;queue&gt;
</span><span class='line'>#include &lt;vector&gt;
</span><span class='line'>#include &lt;set&gt;
</span><span class='line'>#include &lt;map&gt;
</span><span class='line'>#include &lt;stack&gt;
</span><span class='line'> 
</span><span class='line'>#define SQR(x) ((x)*(x))
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class='line'>#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class='line'>#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class='line'>#define PB push_back
</span><span class='line'>#define MP(A, B) make_pair(A, B)
</span><span class='line'>#define pow2(n) (1&lt;&lt;(n))
</span><span class='line'>#define pi acos(-1)
</span><span class='line'>#define eps 0.00000001
</span><span class='line'>#define lg(n) log10((n)*1.0)
</span><span class='line'>#define MaxN  50000
</span><span class='line'>#define mod 10e+7
</span><span class='line'>#define ll long long
</span><span class='line'>#define typed int
</span><span class='line'>using namespace std;
</span><span class='line'>void data(){
</span><span class='line'>   freopen("data.in","r",stdin);
</span><span class='line'>   freopen("data.out","w",stdout);
</span><span class='line'>}
</span><span class='line'>int dp[2620][2620];
</span><span class='line'>char c[MaxN+100],a[2620],b[2620];
</span><span class='line'>int k[2620][2620];
</span><span class='line'>int cnt[27];
</span><span class='line'>void LCS(int len){
</span><span class='line'>     int i, j;
</span><span class='line'>      rep(i,len+1){ dp[i][0]=dp[0][i]=0;}
</span><span class='line'>      repd(i,len)
</span><span class='line'>        repd(j,len)
</span><span class='line'>        {
</span><span class='line'>            if(a[i]==b[j]){
</span><span class='line'>                k[i][j]=0;
</span><span class='line'>                dp[i][j]=1+dp[i-1][j-1];  
</span><span class='line'>            }
</span><span class='line'>            else if(dp[i-1][j]&gt;=dp[i][j-1]){
</span><span class='line'>                k[i][j]=1;
</span><span class='line'>                dp[i][j]=dp[i-1][j]; 
</span><span class='line'>            }
</span><span class='line'>            else{
</span><span class='line'>                 k[i][j]=-1;
</span><span class='line'>                 dp[i][j]=dp[i][j-1];
</span><span class='line'>            }         
</span><span class='line'>        } 
</span><span class='line'>}
</span><span class='line'>char st[2610];
</span><span class='line'>int num;
</span><span class='line'>void pt(int m,int n){
</span><span class='line'>   if(n==0||m==0) return ;
</span><span class='line'>   if(k[m][n]==0){
</span><span class='line'>     pt(m-1,n-1);
</span><span class='line'>     st[num++]=a[m];
</span><span class='line'>   }
</span><span class='line'>   else if(k[m][n]&gt;0) pt(m-1,n);
</span><span class='line'>   else pt(m,n-1);  
</span><span class='line'>}
</span><span class='line'>int main(){
</span><span class='line'>    //data();
</span><span class='line'>    while(~scanf("%s",c+1)){                            
</span><span class='line'>     int len=strlen(c+1);
</span><span class='line'>     num=0;
</span><span class='line'>     bool fg=1;
</span><span class='line'>     repd(i,len){
</span><span class='line'>         cnt1-'a']++;
</span><span class='line'>         if(cnt1-'a']&gt;=100){
</span><span class='line'>           rep(j,100)cout&lt;&lt;c[i];
</span><span class='line'>           cout&lt;&lt;endl;fg=0;break;
</span><span class='line'>         }
</span><span class='line'>     }
</span><span class='line'>     if(!fg)continue;
</span><span class='line'>     if(len&gt;2602) len=2602;
</span><span class='line'>     repd(i,len){a[i]=c[i];b[len+1-i]=c[i];}
</span><span class='line'>     LCS(len);
</span><span class='line'>     pt(len,len);
</span><span class='line'>     if(num&lt;=100)printf("%s\n",st);
</span><span class='line'>     else{
</span><span class='line'>       rep(i,50)cout&lt;&lt;st[i];reps(i,49,0)cout&lt;&lt;st[i]; cout&lt;&lt;endl;  
</span><span class='line'>     }
</span><span class='line'>     
</span><span class='line'>    }           
</span><span class='line'>   return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>（效果似乎一般）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The 9th SWJTU Collegiate Programming Contest Qualification Round]]></title>
    <link href="http://UnkelTao.github.io/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round/"/>
    <updated>2013-04-14T06:16:28+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2013/04/14/the-9th-swjtu-collegiate-programming-contest-qualification-round</id>
    <content type="html"><![CDATA[<p><strong>比赛链接：</strong>  <a href="http://acm.swjtu.edu.cn/JudgeOnline/showcontest?contest_id=1135" title="第九届ACM校赛资格赛">第九届ACM校赛资格赛</a></p>

<p>资格赛嘛，本着大家熟悉环境增强自信心的原则~10道题没有太难的题目~适合新手练习.本次比赛D、E、F是我出的，本着简单的想法却没想到坑了一部分人，其中E题的数据再随机的时候超出了题目描述的范围造成一些人AC的程序WA了，在此表示抱歉,致以诚挚的歉意。下面给出我对着10道题的解法，可能我的解法并不是完全正确恰好过了数据而已，欢迎大家指正。</p>

<!--more-->


<h2>A <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1982">A+B</a></h2>

<p>完全熟悉OJ环境的题目,上面都有标程,第一次接触ACM的需要知道怎么多组输入.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>int a, b; 
</span><span class='line'>while(scanf("%d %d", &a, &b)==2){
</span><span class='line'>    printf("%d\n", a + b);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>B <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1986">猴子爬楼梯1</a></h2>

<p>因为数据不大，可以有3中解法:</p>

<ul>
<li><p>原理：看 n能被被整除<code>GCD(a,b)</code>整除，推论过程略,详见大牛(<a href="http://blog.csdn.net/openspirit/article/details/8797246">大牛题解</a>)。</p></li>
<li><p>模拟法：我们可以确定只要大于 <code>a+b-1</code>的数 我们都可以通过加上a来得到,在+a ,-b的过程中，通过模拟产生出<code>(1，a+b-1)</code>所有的可能,把n对a取模既可以。</p></li>
<li><p>搜索或者暴力,记忆化搜索，也就1000个点而已,代码未写,参见C题。</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//模拟法
</span><span class='line'>int s[10000];
</span><span class='line'>int cnt(int a,int b)
</span><span class='line'>{
</span><span class='line'>    int tmp=a,cur=0;
</span><span class='line'>    memset(s,0,sizeof(s));
</span><span class='line'>    while(tmp!=0)
</span><span class='line'>    {
</span><span class='line'>        s[cur++]=tmp;         
</span><span class='line'>        if(tmp&gt;=b)tmp-=b;
</span><span class='line'>        else tmp+=a;           
</span><span class='line'>    } 
</span><span class='line'>    return cur;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>C <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1990">猴子爬楼梯2</a></h2>

<p><strong>本题将我深深的伤害了</strong></p>

<ul>
<li><p>模拟法:看着数据不大，于是暴力模拟,无限WA,基本思路同B题二解法，只是模拟过程中出现大于top就停止,至今未AC，未发现错误数据，回头对拍,有待考证。(<strong>忘记加特判了<code>a=0,b=0</code>时候挂掉了, 加上AC</strong>)</p></li>
<li><p>记忆化搜索</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//模拟法
</span><span class='line'>#include&lt;cstdio&gt;
</span><span class='line'>#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)
</span><span class='line'>int gcd(int a,int b){return b?gcd(b,a%b):a;}
</span><span class='line'>int s[1000];
</span><span class='line'>int cnt(int a,int b)
</span><span class='line'>{
</span><span class='line'>    int tmp=a,cur=0;
</span><span class='line'>    if(b==0){s[0]=a; return 1;}
</span><span class='line'>    while(tmp!=0){s[cur++]=tmp;if(tmp&gt;=b)tmp-=b;else tmp+=a;} 
</span><span class='line'>    return cur;
</span><span class='line'>}
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'>    //freopen("data.in","r",stdin);
</span><span class='line'>    //freopen("data2.out","w",stdout);
</span><span class='line'>    int T,a,b,n,m;
</span><span class='line'>    scanf("%d",&T);
</span><span class='line'>    while(T--){
</span><span class='line'>       scanf("%d%d%d%d",&a,&b,&n,&m);
</span><span class='line'>       if(n&gt;m||a==0) printf("NO\n");
</span><span class='line'>       else {
</span><span class='line'>          if(n%a==0) printf("YES\n");
</span><span class='line'>          else {  
</span><span class='line'>               int len=cnt(a,b);
</span><span class='line'>               n=n%a; 
</span><span class='line'>               bool fg=0;
</span><span class='line'>               rep(i,0,len){
</span><span class='line'>                  if(s[i]==n) {fg=1;break;}
</span><span class='line'>                  if(s[i]&gt;m){fg=0;break;}
</span><span class='line'>               }
</span><span class='line'>               if(fg)printf("YES\n");else printf("NO\n");  
</span><span class='line'>          
</span><span class='line'>          }
</span><span class='line'>       }
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//记忆化搜索
</span><span class='line'>bool used[1100];
</span><span class='line'>bool bfs(int a,int b,int n,int m)
</span><span class='line'>{
</span><span class='line'>    queue&lt;int&gt; q;
</span><span class='line'>    memset(used,0,sizeof(used));
</span><span class='line'>    if(a&gt;m) return 0;
</span><span class='line'>    q.push(a);
</span><span class='line'>    used[a]=1;
</span><span class='line'>    int t;
</span><span class='line'>    while(!q.empty())
</span><span class='line'>    {
</span><span class='line'>       int tmp=q.front(); q.pop();
</span><span class='line'>       used[tmp]=1;
</span><span class='line'>       if(tmp==n) return 1;
</span><span class='line'>       if(tmp+a&lt;=m&&!used[tmp+a]){used[tmp+a]=1; q.push(tmp+a);}
</span><span class='line'>       if(tmp-b&gt;=0&&!used[tmp-b]){used[tmp-b]=1; q.push(tmp-b);}           
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>D <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1991">统计学号</a></h2>

<p>排序下，扫描一遍即可，秒杀级水题一枚。不会快排的可冒泡。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;cstdio&gt;
</span><span class='line'>#include&lt;cstring&gt;
</span><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include&lt;algorithm&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)
</span><span class='line'>int a[110];
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'> //   freopen("data.in","r",stdin);
</span><span class='line'> //   freopen("data.out","w",stdout);
</span><span class='line'>    int T,n;
</span><span class='line'>    scanf("%d",&T);
</span><span class='line'>    while(T--){
</span><span class='line'>       scanf("%d",&n);
</span><span class='line'>       rep(i,0,n)scanf("%d",&a[i]);
</span><span class='line'>       sort(a,a+n);
</span><span class='line'>       int cnt=1;
</span><span class='line'>       rep(i,1,n) {if(a[i]!=a[i-1])cnt++;}
</span><span class='line'>       printf("%d\n",cnt);        
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>E <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1992">德德的嗜好2.0</a></h2>

<p>此题也是一个排序题，当然如果直接<code>strcmp</code>是不行的，考虑90 9这组数据，结果很明显应该是990而不是909。<br/>
因为我们在排序的时候只要保证<code>(a+b)>(b+a)</code>即可。<br/>
<strong>再次表示对数据中出现了大于1000的数表示抱歉</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;cstdio&gt;
</span><span class='line'>#include&lt;cstring&gt;
</span><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include&lt;algorithm&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>string s[81];
</span><span class='line'>bool cmp(string a,string b)
</span><span class='line'>{
</span><span class='line'>     return (a+b)&gt;(b+a);
</span><span class='line'>}
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'>    //freopen("data.in","r",stdin);
</span><span class='line'>    //freopen("data.out","w",stdout);
</span><span class='line'>    int T,n;
</span><span class='line'>    cin&gt;&gt;T;
</span><span class='line'>    while(T--)
</span><span class='line'>    {
</span><span class='line'>      cin&gt;&gt;n;
</span><span class='line'>      rep(i,n)cin&gt;&gt;s[i];
</span><span class='line'>      sort(s,s+n,cmp);   
</span><span class='line'>      rep(i,n)cout&lt;&lt;s[i];
</span><span class='line'>      cout&lt;&lt;endl;    
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>F <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1993">德德的嗜好3.0</a></h2>

<p>公式题或者找规律  <code>b(8k+m)=b(m)+60k;  (k=n/8;m=n%8)</code> 打表出前8项就够了;其中<code>b(0)=-1;</code> 可以m等于1到8~这样就用不到b(0)但是计算k,m就多了几行代码。<br/>
下面是推论：</p>

<ul>
<li><p>由于<code>a(n+15)-a(n)=60</code>,故若<code>a(n)</code>是3或5的倍数,当且仅当<code>a(n+15)</code>是3或5的倍数.</p></li>
<li><p>于是每15个数是一个周期，前15个3-59~所以划分区间。</p></li>
<li><p>现将数轴正向分成一系列长为60的区间段: <code>(0,+?)＝(0,60]∪(60,120]∪(120,180]∪…,</code>注意第一个区间段中含有{a(n)}的项15个,即<code>3,7,11,15,19,23,27,31,35,39,43,47,51,55,59</code>其中属于{ }的项8个,为:<code>b(1)=7, b(2)=11, b(3)=19, b(4)=23,   b(5)=31, b(6)=43, b(7)=47, b(8)=59</code></p></li>
<li><p>于是每个区间段中恰有15个{ }的项,8个{ }的项,且有<code>b(8k+m)-b(m)=60k;</code></p></li>
<li><p>EG：由于<code>2006＝8×250+6</code>,而<code>b(6)=43</code>,所以<code>b(2006)=60*250+b(6)=15043</code>。</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;cstdio&gt;
</span><span class='line'>#include&lt;cstring&gt;
</span><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include&lt;algorithm&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>#define ll long long
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>int b[8]={-1,7,11,19,23,31,43,47};
</span><span class='line'>
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'>    //freopen("data.in","r",stdin);
</span><span class='line'>    //freopen("data.out","w",stdout);
</span><span class='line'>    int T,n;
</span><span class='line'>    scanf("%d",&T);
</span><span class='line'>    while(T--)
</span><span class='line'>    {
</span><span class='line'>        scanf("%d",&n);  
</span><span class='line'>        ll ans=60LL*(n/8)+b[n%8];
</span><span class='line'>        printf("%lld\n",ans);    
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>G <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1994">不知道自己不知道</a></h2>

<p>没什么好说的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>while(~scanf("%d",&n)) printf("%d\n",2013-n);</span></code></pre></td></tr></table></div></figure>


<h2>H <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1995">知道自己不知道</a></h2>

<p>数组求和除以M向上取整.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rep(i,0,n)  scanf("%d",&a);
</span><span class='line'>sum+=a;     
</span><span class='line'>printf("%d\n",(sum+m-1)/m); //加上m-1为向上取整</span></code></pre></td></tr></table></div></figure>


<h2>I <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1996">不知道自己知道</a></h2>

<p>暴力比较即可</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)
</span><span class='line'>string s[110];
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'> 
</span><span class='line'>    int t=0,T,m,n;
</span><span class='line'>    cin&gt;&gt;T;
</span><span class='line'>    string qurry;
</span><span class='line'>    while(t++&lt;T)
</span><span class='line'>    {
</span><span class='line'>        cin&gt;&gt;m;
</span><span class='line'>        rep(i,0,m){cin&gt;&gt;s[i];}
</span><span class='line'>        cin&gt;&gt;n;
</span><span class='line'>        cout&lt;&lt;"Case #"&lt;&lt;t&lt;&lt;":"&lt;&lt;endl;
</span><span class='line'>        rep(i,0,n){
</span><span class='line'>          cin&gt;&gt;qurry;
</span><span class='line'>          bool fg=0;
</span><span class='line'>          rep(j,0,m){if(qurry==s[j]){fg=1;break;}}
</span><span class='line'>          if(fg)cout&lt;&lt;"Yes"&lt;&lt;endl;
</span><span class='line'>          else cout&lt;&lt;"No"&lt;&lt;endl;
</span><span class='line'>        }        
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h1>J <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1997">知道自己知道</a></h1>

<p>做一下结构体，保存i和和i出现的次数，有负数，i集体加上100，然后恢复即可。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)
</span><span class='line'>struct pt{     
</span><span class='line'>  int cnt;
</span><span class='line'>    int i;  
</span><span class='line'>};
</span><span class='line'>pt s[550];
</span><span class='line'>bool cmp(pt a,pt b){
</span><span class='line'>     if(a.cnt==b.cnt) return a.i&lt;b.i;     
</span><span class='line'>     return a.cnt&gt;b.cnt;
</span><span class='line'>}
</span><span class='line'>int main(){
</span><span class='line'>    int t,n,a;
</span><span class='line'>    scanf("%d",&t);
</span><span class='line'>    while(t--){
</span><span class='line'>        rep(i,0,500){s[i].i=i-100;s[i].cnt=0;}
</span><span class='line'>        scanf("%d",&n);
</span><span class='line'>        rep(i,0,n)  {  scanf("%d",&a);      s[a+100].cnt++; }
</span><span class='line'>        sort(s,s+500,cmp);
</span><span class='line'>        int cnt=0;
</span><span class='line'>        rep(i,0,500){if(s[i].cnt!=0)cnt++;else break;}
</span><span class='line'>        printf("%d",cnt);
</span><span class='line'>        rep(i,0,500){  if(!s[i].cnt)break;  printf(" %d",s[i].i);   }
</span><span class='line'>        printf("\n");
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>以上题目均为过测试数据的程序，不保证程序完全正确无误，欢迎指正,预赛题目难度很明显会增大很多，大家加油。 3Q</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[回文判断 Hash+线段树]]></title>
    <link href="http://UnkelTao.github.io/blog/2012/12/18/huiwen-hash/"/>
    <updated>2012-12-18T17:14:12+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2012/12/18/huiwen-hash</id>
    <content type="html"><![CDATA[<p>比赛的一道题,一直没时间写.最近空了，继续写写水题。</p>

<p>题目描述：</p>

<!--more-->


<h2>Description</h2>

<p>Now we have a long long string, and we will have two kinds of operation on it.<br/>
C i y: change the ith letter to y;<br/>
Q i j: check whether the substring from ith letter to jth letter is a palindrome.</p>

<h2>Input</h2>

<p>There are multiple test cases.<br/>
The first line contains a string whose length is not large than 1,000,000.<br/>
The next line contains a integer N indicating the number of operations.<br/>
The next N lines each lines contains a operation.<br/>
All letters in the input are lower-case.</p>

<h2>Output</h2>

<p>For each query operation, output &ldquo;yes&rdquo; if the corresponding substring is a palindrome, otherwise output &ldquo;no&rdquo;.</p>

<h2>Sample Input</h2>

<p>aaaaa <br/>
4<br/>
Q 1 5 <br/>
C 2 b <br/>
Q 1 5 <br/>
Q 1 3</p>

<h2>Sample Output</h2>

<p>yes <br/>
no <br/>
yes</p>

<p><strong>题意：</strong>给你一串字符串~然后有两种操作：Q a b 询问a到b之间的子串是否是回文 ；C i y 将第i个字母变成y</p>

<p>水题，比赛的时候没有写完,
在学妹的提示下，知道了判断回文可以用hash，正反hash相等的子串就是回文;于是再套上线段树来维护区间的hash值.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>#include &lt;cstdlib&gt;
</span><span class='line'>#include &lt;cstring&gt;
</span><span class='line'>#include&lt;algorithm&gt;
</span><span class='line'>#include&lt;cmath&gt;
</span><span class='line'>#define N 1100010
</span><span class='line'>#define mod 1000000007
</span><span class='line'>#define ll long long
</span><span class='line'>using namespace std;
</span><span class='line'>
</span><span class='line'>struct Tree
</span><span class='line'>{
</span><span class='line'>   int l;
</span><span class='line'>   int r;
</span><span class='line'>   ll left;
</span><span class='line'>   ll right;    
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>Tree T[N*2];
</span><span class='line'>char str[N];
</span><span class='line'>int kk[N];
</span><span class='line'>
</span><span class='line'>void hashinit(){kk[0]=1; for(int i=1;i&lt;N;i++) kk[i]=kk[i-1]*2%mod;}
</span><span class='line'>Tree cnt(Tree tmp1,Tree tmp2)
</span><span class='line'>{   Tree ans;
</span><span class='line'>     ans.l=tmp1.l;
</span><span class='line'>     ans.r=tmp2.r;    
</span><span class='line'>     ans.left=(kk[tmp2.r-tmp2.l+1]*tmp1.left+tmp2.left)%mod;
</span><span class='line'>     ans.right=(kk[tmp1.r-tmp1.l+1]*tmp2.right+tmp1.right)%mod;  
</span><span class='line'>     return ans; 
</span><span class='line'>}
</span><span class='line'>void init(int i,int l,int r)
</span><span class='line'>{   
</span><span class='line'>     T[i].l=l;
</span><span class='line'>     T[i].r=r; 
</span><span class='line'>     if(l==r){
</span><span class='line'>        T[i].right=T[i].left=str[l-1]-'a';
</span><span class='line'>        return ;
</span><span class='line'>     }
</span><span class='line'>     init(i&lt;&lt;1,l,(l+r)&gt;&gt;1);
</span><span class='line'>     init(i&lt;&lt;1|1,((l+r)&gt;&gt;1)+1,r);  
</span><span class='line'>     T[i]=cnt(T[i&lt;&lt;1],T[i&lt;&lt;1|1]);
</span><span class='line'>  
</span><span class='line'>}
</span><span class='line'>void update(int i,int k,int w)
</span><span class='line'>{    
</span><span class='line'>     int ans;
</span><span class='line'>     if(T[i].l==T[i].r){                                      
</span><span class='line'>       if(T[i].l==k)T[i].left=T[i].right=w;          
</span><span class='line'>       return ;                                     
</span><span class='line'>     }
</span><span class='line'>
</span><span class='line'>     if(T[i&lt;&lt;1].l&lt;=k&&T[i&lt;&lt;1].r&gt;=k) update(i&lt;&lt;1,k,w);                                 
</span><span class='line'>     if(T[i&lt;&lt;1|1].l&lt;=k&&T[i&lt;&lt;1|1].r&gt;=k)update(i&lt;&lt;1|1,k,w);    
</span><span class='line'>     T[i]=cnt(T[i&lt;&lt;1],T[i&lt;&lt;1|1]);
</span><span class='line'>}
</span><span class='line'>Tree querry(int i,int l,int r)
</span><span class='line'>{         
</span><span class='line'>     Tree ans;
</span><span class='line'>     if(T[i].l&gt;=l&&T[i].r&lt;=r)return T[i];                                     
</span><span class='line'>     if(T[i&lt;&lt;1].r&gt;=r)return querry(i&lt;&lt;1,l,r);                                 
</span><span class='line'>     if(T[i&lt;&lt;1|1].l&lt;=l)return querry(i&lt;&lt;1|1,l,r);                                               
</span><span class='line'>     return cnt(querry(i&lt;&lt;1,l,T[i&lt;&lt;1].r),querry(i&lt;&lt;1|1,T[i&lt;&lt;1|1].l,r));
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'>    int q,k,a,b;
</span><span class='line'>    char qt[2],ch[2];
</span><span class='line'>    Tree ans; 
</span><span class='line'>    hashinit();
</span><span class='line'>    while(~scanf("%s",str)){   
</span><span class='line'>        init(1,1,strlen(str));       
</span><span class='line'>        scanf("%d",&q);
</span><span class='line'>       while(q--){ 
</span><span class='line'>           scanf("%s",&qt);
</span><span class='line'>           if(qt[0]=='C'){
</span><span class='line'>            scanf("%d%s",&k,&ch);
</span><span class='line'>            update(1,k,ch[0]);
</span><span class='line'>           }else{
</span><span class='line'>            scanf("%d%d",&a,&b);
</span><span class='line'>            ans=querry(1,a,b);
</span><span class='line'>            printf("%s\n",ans.right==ans.left?"yes":"no");
</span><span class='line'>           }
</span><span class='line'>       }
</span><span class='line'>    }
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu problem]]></title>
    <link href="http://UnkelTao.github.io/blog/2011/02/19/ubuntu-problem/"/>
    <updated>2011-02-19T00:00:07+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2011/02/19/ubuntu-problem</id>
    <content type="html"><![CDATA[<p>问题：</p>

<p><img src="http://unkeltao.qiniudn.com/IMG_002.jpg" alt="" />
<img src="http://unkeltao.qiniudn.com/IMG_003.jpg" alt="" /></p>

<p>解决代码：</p>

<p>法1：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install dkms build-essential linux-headers-$(uname -r) 
</span><span class='line'>sudo /etc/init.d/vboxdrv setup</span></code></pre></td></tr></table></div></figure>


<p>法2：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install module-assistant
</span><span class='line'>sudo modprobe vboxnetflt
</span><span class='line'>sudo modprobe vboxdrv</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[雨季不再来]]></title>
    <link href="http://UnkelTao.github.io/blog/2010/03/05/my-first-post/"/>
    <updated>2010-03-05T20:10:42+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2010/03/05/my-first-post</id>
    <content type="html"><![CDATA[<p><img src="http://unkeltao.qiniudn.com/IMG_001.jpg" alt="" />
人之所以悲哀，是因为我们留不住岁月，更无法不承认，青春，有一日是要这么自然地消失过去。</p>

<!--more-->


<p>而人之可贵，也在于我们因着时光环境的改变，在生活上得到长进。岁月的流失固然是无可奈何，而人的逐渐蜕变，却又脱不出时光的力量。</p>

<p>我想，一个人的过去，就像《圣经》上雅各的天梯一样，踏一步决不能上升到天国去。而人的过程，也是要一格一格地爬着梯子，才能到了某种高度。在那个高度上，满江风月，青山绿水，尽入眼前。这种境界心情与踏上第一步梯子而不知上面将是什么情形的迷惘惶惑是很不相同的。</p>

<p>乐观与悲观，都不流于实际。一件明明没有希望的事情，如果乐观地去处理，在我，就是失之于天真，这跟悲观是一样的不正确，甚而更坏。</p>

<p>我，只是一个实际的人，我要得着的东西，说起来十分普通。一切不着边际的想法，如果我守着自己淡泊宁静的生活原则，我根本不会刻意去追求它。对于生活的环境，我也抱着一样的态度。我唯一锲而不舍，愿意以自己的生命去努力的，只不过是保守我个人的心怀意念，在有生之日，不放弃对生活的热爱和执著，在有限的时空里，过无限广大的日子。</p>

<p>人，是可以改变的，只是每个人都需要时间。我们要如何度过自己的一生，固执不变当然是可贵，而有时向生活中另找乐趣，亦是不可或缺的努力和目标。</p>

<p>我的心中有一个不变的信仰，它是什么，我也不清楚，但我不会放弃这在冥冥中引导我的力量，直到有一天我离开人世，返回永恒的地方。-</p>

<p>真正的快乐，不是狂喜，亦不是痛苦，在我很主观的来说，它是细水长流，碧海无波，在芸芸众生里做一个普通的人，享受生命一刹间喜悦，那么我们即使不死，也在天堂了。。。。</p>

<p>—《雨季不再来》</p>
]]></content>
  </entry>
  
</feed>
