<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[/UnkelTao]]></title>
  <link href="http://www.UnkelTao.com/atom.xml" rel="self"/>
  <link href="http://www.UnkelTao.com/"/>
  <updated>2014-11-16T13:37:48+00:00</updated>
  <id>http://www.UnkelTao.com/</id>
  <author>
    <name><![CDATA[UnkelTao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2014年西南交通大学 新秀杯 ACM程序设计大赛 决赛解题报告]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/11/16/2014-swjtu-acm-onsite-programming-contest/"/>
    <updated>2014-11-16T10:41:05+00:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/11/16/2014-swjtu-acm-onsite-programming-contest</id>
    <content type="html"><![CDATA[<p><strong>比赛链接：</strong>  <a href="http://acm.swjtu.edu.cn/JudgeOnline/showcontest?contest_id=1178">新秀杯 ACM程序设计大赛决赛</a>  </p>

<p>比赛还算成功，算上友情参赛，总共有7个题目有人通过，第一名最后成绩为5题，虽然离我想的差一点。不过还是不错~~  </p>

<!--more-->

<h2 id="a-httpacmswjtueducnjudgeonlineshowproblemproblemid2173">A <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2173">从头再来</a></h2>

<p>只需要简单的统计单词A中每个字母出现的次数，与B中每个字母出现的次数做比较即可。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include &lt;cmath&gt;
</span><span class="line">#include &lt;algorithm&gt;
</span><span class="line">#include &lt;iostream&gt;
</span><span class="line">#define SQR(x) ((x)*(x))
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">#define MaxN  10010
</span><span class="line">#define ll long long
</span><span class="line">using namespace std;
</span><span class="line">void data(){
</span><span class="line">   freopen("data.in","r",stdin);
</span><span class="line">   freopen("data.out","w",stdout);
</span><span class="line">}
</span><span class="line">char a[MaxN],b[MaxN];
</span><span class="line">int s1[27],s2[27];
</span><span class="line">int gao(){
</span><span class="line">    memset(s1,0,sizeof(s1));
</span><span class="line">    memset(s2,0,sizeof(s2));
</span><span class="line">    int l1=strlen(a),l2=strlen(b);
</span><span class="line">    rep(i,l1) s1[a[i]-'a']++;
</span><span class="line">    rep(i,l2) s2[b[i]-'a']++;
</span><span class="line">    rep(i,26)if(s1[i]&lt;s2[i]) return 0;
</span><span class="line">    return 1;   
</span><span class="line">}
</span><span class="line">int main(){
</span><span class="line">   //data();
</span><span class="line">   while(cin&gt;&gt;a&gt;&gt;b){
</span><span class="line">      printf("%s\n",gao()?"Yes":"No");
</span><span class="line">   }
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="b-httpacmswjtueducnjudgeonlineshowproblemproblemid2175">B <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2175">挖掘机技术哪家强</a></h2>

<p><img src="http://unkeltao.qiniudn.com/wailian/10_onsite_B.jpg" alt="" />   </p>

<p>~~连接DF，那么ADF的面积为正方形的一半，也是矩形的一半，正方形的面积就等于矩形的面积。
<code>AE=a*a/b; DE=sqrt(a*a-AE*AE)</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">int main(){
</span><span class="line">   //  data();
</span><span class="line">   int a,b;
</span><span class="line">   while(~scanf("%d%d",&amp;a,&amp;b)){
</span><span class="line">       double res=sqrt(a*a-(a*a*1.0/b)*(a*a*1.0/b))*(a*a*1.0/b)/2.0;
</span><span class="line">       printf("%.2lf\n",res);             
</span><span class="line">   }
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="c-yogykwaniphonehttpacmswjtueducnjudgeonlineshowproblemproblemid2175">C <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2175">YogyKwan的iPhone也弯了</a></h2>

<p>假设半径为<code>r,t</code>为输入的数据那么可以写出如下等式：
<code>r*sin(pi-15/r/2)=t/2</code>
我们可以知道，当<code>r</code>越大时候，<code>t</code>就会越小，于是我们可以二分判定。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include&lt;cstdio&gt;
</span><span class="line">#include&lt;cmath&gt;
</span><span class="line">const double PI=acos(-1);
</span><span class="line">const double eps=1e-10;
</span><span class="line">int main(){
</span><span class="line">    //freopen("data.in","r",stdin);freopen("data2.out","w",stdout);
</span><span class="line">    double l,w,r,a,sj,xj,m,t;
</span><span class="line">    while(scanf("%lf",&amp;w)!=EOF){
</span><span class="line">        l=15;
</span><span class="line">        sj=l/PI,xj=0.5*l/PI;
</span><span class="line">        w*=0.5,l*=0.5;
</span><span class="line">        while(sj-xj&gt;eps){
</span><span class="line">            m=(sj+xj)*0.5;
</span><span class="line">            t=m*sin(l/m);
</span><span class="line">            if(t&gt;w) sj=m;
</span><span class="line">            else xj=m;
</span><span class="line">        }
</span><span class="line">        r=m;
</span><span class="line">        a=l/r*2;
</span><span class="line">        printf("%f %f\n",r,a);
</span><span class="line">    }
</span><span class="line">    return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="d-httpacmswjtueducnjudgeonlineshowproblemproblemid2776">D <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2776">强迫症改变世界</a></h2>

<p>不妨用 <code>f(k)</code> 来表示摆放<code>k</code>个座位的方案数。我们可以把这些方案分成两类：最后一个座位是坐女生，或者最后一个座位是坐男生。如果是前一种情形，则我们只需要看前<code>k–1</code>座位有多少摆法就可以了；如果是后一种情形，那么倒数第二个座位必须是女生，因而这种情形下的方案数就取决于前 <code>k–2</code>个座位的安排方案数。因此我们得到， <code>f(k) = f(k – 1) + f(k – 2)</code> 其中<code>f[1]=2,f[2]=3;</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#define SQR(x) ((x)*(x))
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">int f[1002];
</span><span class="line">void gao(){
</span><span class="line">     f[0]=1;
</span><span class="line">     f[1]=2;
</span><span class="line">     repf(i,2,1001) f[i]=(f[i-1]+f[i-2])%mod;           
</span><span class="line">}
</span><span class="line">int main(){
</span><span class="line">    //data();
</span><span class="line">    int n;
</span><span class="line">    gao();
</span><span class="line">    while(~scanf("%d",&amp;n)){
</span><span class="line">        printf("%ld\n",f[n]);
</span><span class="line">    }
</span><span class="line">    return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="e-2httpacmswjtueducnjudgeonlineshowproblemproblemid2177">E <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2177">强迫症改变世界2</a></h2>

<p>此题需要先会容斥定理， <code>n</code>以内<code>a,b</code>的倍数的个数有， <code>sum=n/a+n/b-n/lcm(a,b)</code>;
然后我们枚举出所有的只含有<code>4</code>或者<code>7</code>的数字（大概<code>1000</code>个），然后去掉是前面出现过得数的倍数的数（如<code>44</code>是<code>4</code>的倍数） 大概还剩下不到<code>600</code>个，看起来很大，因为容斥定理的复杂度是<code>2^n</code>次方，但是，此题<code>r</code>的范围不是小，我们在做<code>lcm</code>的时候，很快就会超过范围，就不需要继续向下了，然后我们从大往小做，大概只需要递归<code>10</code>万次左右。</p>

<p>剩下的可以参考代码。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include &lt;cstdlib&gt;
</span><span class="line">#include &lt;cstring&gt;
</span><span class="line">#include &lt;cmath&gt;
</span><span class="line">#include &lt;climits&gt;
</span><span class="line">#include &lt;cctype&gt;
</span><span class="line">#include &lt;ctime&gt;
</span><span class="line">#include &lt;algorithm&gt;
</span><span class="line">#include &lt;iostream&gt;
</span><span class="line">#include &lt;queue&gt;
</span><span class="line">#include &lt;vector&gt;
</span><span class="line">#include &lt;set&gt;
</span><span class="line">#include &lt;map&gt;
</span><span class="line">#include &lt;stack&gt;
</span><span class="line">#define SQR(x) ((x)*(x))
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">#define PB push_back
</span><span class="line">#define MP(A, B) make_pair(A, B)
</span><span class="line">#define pow2(n) (1&lt;&lt;(n))
</span><span class="line">#define pi acos(-1)
</span><span class="line">#define eps 0.00000001
</span><span class="line">#define lg(n) log10((n)*1.0)
</span><span class="line">#define MaxN  1000000000
</span><span class="line">#define mod 1000000007
</span><span class="line">#define md(x) (((x)%mod+mod)%mod)
</span><span class="line">#define ll long long
</span><span class="line">using namespace std;
</span><span class="line">void data(){
</span><span class="line">   freopen("sample.in","r",stdin);
</span><span class="line">   freopen("sample.out","w",stdout);
</span><span class="line">}
</span><span class="line">ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
</span><span class="line">int t,n,m;
</span><span class="line">ll l,r,ans,a[3000],b[3000];
</span><span class="line">bool vis[3000];
</span><span class="line">void pre(int x,ll y)
</span><span class="line">{
</span><span class="line">  if(y&gt;MaxN)return;
</span><span class="line">  if(x&gt;0)a[++m]=y;
</span><span class="line">  pre(x+1,y*10+4);
</span><span class="line">  pre(x+1,y*10+7);
</span><span class="line">}
</span><span class="line">void gao(){
</span><span class="line">  sort(a+1,a+m+1);
</span><span class="line">  repd(i,m)
</span><span class="line">     if(!vis[i])
</span><span class="line">     {
</span><span class="line">         b[++n]=a[i];
</span><span class="line">         for(int j=i+1;j&lt;=m;j++)
</span><span class="line">             if(!(a[j]%a[i]))
</span><span class="line">                 vis[j]=1;
</span><span class="line">     }
</span><span class="line">  repd(i,n) a[n-i+1]=b[i];
</span><span class="line">}
</span><span class="line">void dfs(int x,int y,ll z)
</span><span class="line">{
</span><span class="line">  if(x&gt;n)
</span><span class="line">  {
</span><span class="line">    if(y&amp;1)ans+=r/z-(l-1)/z;
</span><span class="line">    else if(y)ans-=r/z-(l-1)/z;
</span><span class="line">    return;
</span><span class="line">  }
</span><span class="line">  dfs(x+1,y,z);
</span><span class="line">  ll tmp=z/gcd(a[x],z);
</span><span class="line">  if((a[x]*tmp)&lt;=r) dfs(x+1,y+1,a[x]*tmp);
</span><span class="line">}
</span><span class="line">int main()
</span><span class="line">{
</span><span class="line">    //data();
</span><span class="line">    pre(0,0);
</span><span class="line">    gao();
</span><span class="line">    while(~scanf("%lld%lld",&amp;l,&amp;r)){
</span><span class="line">      ans=0;
</span><span class="line">      dfs(1,0,1);
</span><span class="line">      printf("%lld\n",ans);
</span><span class="line">    }
</span><span class="line">    return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="f-iihttpacmswjtueducnjudgeonlineshowproblemproblemid2178">F <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2178">不幸的程序员II</a></h2>
<p>矩阵快速幂，如果你还不会这个，那么该先去学习矩阵快速幂。</p>

<p>简单公式推导如下:
<img src="http://unkeltao.qiniudn.com/wailian/10_F_1.png" alt="" />
<img src="http://unkeltao.qiniudn.com/wailian/10_F_2.png" alt="" /></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include&lt;iostream&gt;
</span><span class="line">#include&lt;cstdlib&gt;
</span><span class="line">#include&lt;stdio.h&gt;
</span><span class="line">#include&lt;math.h&gt;
</span><span class="line">using namespace std;
</span><span class="line">const int MAX = 3;
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">#define mod 1000000007
</span><span class="line">#define ll long long
</span><span class="line">typedef struct
</span><span class="line">{
</span><span class="line">   ll m[MAX][MAX];
</span><span class="line">} Matrix;
</span><span class="line">Matrix P;
</span><span class="line">Matrix I ={1,0,0,0,1,0,0,0,1};
</span><span class="line">Matrix matrixmul(Matrix a,Matrix b) 
</span><span class="line">{
</span><span class="line">   int i,j,k;
</span><span class="line">   Matrix c;
</span><span class="line">   rep(i,MAX)
</span><span class="line">   rep(j,MAX)
</span><span class="line">   {
</span><span class="line">     c.m[i][j] = 0;
</span><span class="line">     rep(k,MAX) c.m[i][j] += (a.m[i][k] * b.m[k][j])%(mod);
</span><span class="line">     c.m[i][j] %= (mod);
</span><span class="line">   }
</span><span class="line">   return c;
</span><span class="line">}
</span><span class="line">Matrix quickpow(ll n, Matrix P)
</span><span class="line">{
</span><span class="line">    Matrix m = P, b = I;
</span><span class="line">    while (n &gt;= 1)
</span><span class="line">    {
</span><span class="line">        if (n &amp; 1)
</span><span class="line">        b = matrixmul(b,m);
</span><span class="line">        n = n &gt;&gt; 1;
</span><span class="line">        m = matrixmul(m,m);
</span><span class="line">    }
</span><span class="line">    return b;
</span><span class="line">}
</span><span class="line">void data(){
</span><span class="line">   freopen("data.in","r",stdin);
</span><span class="line">   freopen("data.out","w",stdout);
</span><span class="line">}
</span><span class="line">int main()
</span><span class="line">{
</span><span class="line">    ll a,b,n,m;
</span><span class="line">    //data();
</span><span class="line">    while(~scanf("%lld%lld%lld%lld",&amp;n,&amp;m,&amp;a,&amp;b))
</span><span class="line">    {   
</span><span class="line">        Matrix T1,T2,T;
</span><span class="line">        Matrix P1 = {2,1,3,1,0,0,0,0,1};
</span><span class="line">        Matrix P2 = {5*8,4*8+7,6*8+9,5,4,6,0,0,1};
</span><span class="line">        T1=quickpow((m-2),P1);
</span><span class="line">        T2=quickpow(1LL*n-1,matrixmul(T1,P2));
</span><span class="line">        T=matrixmul(T2,T1);
</span><span class="line">        Matrix tmp={b%mod,0,0,a%mod,0,0,1,0,0};
</span><span class="line">        T=matrixmul(T,tmp);
</span><span class="line">        printf("%lld\n",T.m[0][0]%mod); 
</span><span class="line">    }
</span><span class="line">    return 0; 
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="g-httpacmswjtueducnjudgeonlineshowproblemproblemid2179">G <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2179">你是一个好人</a></h2>

<p>概率DP，我们假设<code>dp[i][j]</code>表示前i次表白收集了j张不同卡的概率，那么很明显:
<code>i==1,j==1</code>时 <code>dp[1][1] = 1</code>;<br />
<code>i&lt;j </code>,  <code>dp[i][j] = 0;</code>(一共都不到j张，怎么收集) <br />
那么<code>dp[i+1][j] = dp[i][j]*(j/n)+dp[i][j-1]*(n-(j-1))/n</code>;
第一个表示第<code>i+1</code>收集的与之前的<code>j</code>张是一样的，第二个表示第<code>i+1</code>次收集的与前<code>j-1</code>个不同，那么就就多收集了一个，变成<code>j</code>个。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include &lt;cstdlib&gt;
</span><span class="line">#include &lt;cstring&gt;
</span><span class="line">#include &lt;cmath&gt;
</span><span class="line">#include &lt;climits&gt;
</span><span class="line">#include &lt;cctype&gt;
</span><span class="line">#include &lt;ctime&gt;
</span><span class="line">#include &lt;algorithm&gt;
</span><span class="line">#include &lt;iostream&gt;
</span><span class="line">#include &lt;queue&gt;
</span><span class="line">#include &lt;vector&gt;
</span><span class="line">#include &lt;set&gt;
</span><span class="line">#include &lt;map&gt;
</span><span class="line">#include &lt;stack&gt;
</span><span class="line">#define SQR(x) ((x)*(x))
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">#define PB push_back
</span><span class="line">#define MP(A, B) make_pair(A, B)
</span><span class="line">#define pow2(n) (1&lt;&lt;(n))
</span><span class="line">#define pi acos(-1)
</span><span class="line">#define eps 0.00000001
</span><span class="line">#define lg(n) log10((n)*1.0)
</span><span class="line">#define MaxN  1000000
</span><span class="line">#define mod 1000000007
</span><span class="line">#define ll long long
</span><span class="line">#define typed int
</span><span class="line">using namespace std;
</span><span class="line">void data(){
</span><span class="line">   freopen("data.in","r",stdin);
</span><span class="line">   freopen("data.out","w",stdout);
</span><span class="line">}
</span><span class="line">//fast read
</span><span class="line">void RD(int &amp;a) {
</span><span class="line">    int value = 0, s = 1;
</span><span class="line">    char c;
</span><span class="line">    while ((c = getchar()) == ' ' || c == '\n');
</span><span class="line">    if (c == '-') s = -s; else value = c-48;
</span><span class="line">    while ((c = getchar()) &gt;= '0' &amp;&amp; c &lt;= '9')
</span><span class="line">        value = value * 10 + c - 48;
</span><span class="line">    a = s * value;
</span><span class="line">}
</span><span class="line">void RD(int &amp;a,int &amp;b){
</span><span class="line">    RD(a),RD(b);
</span><span class="line">}
</span><span class="line">void RD(int &amp;a,int &amp;b,int &amp;c){
</span><span class="line">    RD(a),RD(b),RD(c);
</span><span class="line">}
</span><span class="line">double dp[101][2002];
</span><span class="line">double gao(int n,int m){
</span><span class="line">     memset(dp,0,sizeof(0));
</span><span class="line">     dp[0][0]=1.0;
</span><span class="line">     repd(i,n)repf(j,i,m) dp[i][j]=dp[i-1][j-1]*(n-i+1)/n+dp[i][j-1]*i/n; 
</span><span class="line">     return dp[n][m];
</span><span class="line">}
</span><span class="line">int main(){
</span><span class="line">   //data();
</span><span class="line">   int t,n,m;
</span><span class="line">   RD(t);
</span><span class="line">   rep(i,t){
</span><span class="line">      RD(n,m);
</span><span class="line">      if(m&lt;n)printf("%.6lf\n",0);
</span><span class="line">      else printf("%.6lf\n",gao(n,m));
</span><span class="line">   }
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="h-httpacmswjtueducnjudgeonlineshowproblemproblemid2180">H <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2180">最萌身高差</a></h2>

<p>此题为树状数组的 YY 题。。。<br />
首先我们考虑若 <code>&beta;</code> 固定的情况，那么根据同模的性质。。如果 <code>a%p == b%p</code> 那么 <code>|a-b| = k * p</code><br />
这样预处理一下，只要找到模相同的个数，就能知道有多少组了。。此题 <code>&beta;</code>很小，那么我们维护各个余数的前缀和就可以求个分别余数的区间和了。。。，因为此题要求支持修改，那么我们就使
用树状数组（如果你还不会，那么赶紧学起吧）就可以满足要求了。。、、 <br />
关键是怎么去修改更新；修改了一个数，我们需要一增一减，余数为 <code>a% &beta;</code> 的减一， <code>(a + p)% &beta;</code> 的加 1.. 这样就可以很好的查找和维护了。。 </p>

<p><code>&beta;</code>不一样？ 但是<code>&beta;</code>很小啊，我们再增加一维？这么做会MLE，那么我们离线处理每个<code>&beta;</code>跑一次就好了。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include &lt;cstdlib&gt;
</span><span class="line">#include &lt;cstring&gt;
</span><span class="line">#include &lt;cmath&gt;
</span><span class="line">#include &lt;climits&gt;
</span><span class="line">#include &lt;cctype&gt;
</span><span class="line">#include &lt;ctime&gt;
</span><span class="line">#include &lt;algorithm&gt;
</span><span class="line">#include &lt;iostream&gt;
</span><span class="line">#include &lt;queue&gt;
</span><span class="line">#include &lt;vector&gt;
</span><span class="line">#include &lt;set&gt;
</span><span class="line">#include &lt;map&gt;
</span><span class="line">#include &lt;stack&gt;
</span><span class="line">#define SQR(x) ((x)*(x))
</span><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class="line">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class="line">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class="line">#define PB push_back
</span><span class="line">#define MP(A, B) make_pair(A, B)
</span><span class="line">#define pow2(n) (1&lt;&lt;(n))
</span><span class="line">#define pi acos(-1)
</span><span class="line">#define eps 0.00000001
</span><span class="line">#define lg(n) log10((n)*1.0)
</span><span class="line">#define MaxN  200000
</span><span class="line">#define mod 13041290
</span><span class="line">#define mod2 1000000009
</span><span class="line">#define mod3 1000007
</span><span class="line">#define md(x) (((x)%mod+mod)%mod)
</span><span class="line">#define inf 2147483647
</span><span class="line">#define inf2 0x7fffffffffffffff
</span><span class="line">#define ll long long
</span><span class="line">#define typed int
</span><span class="line">using namespace std;
</span><span class="line">void data(){
</span><span class="line">   freopen("data.in","r",stdin);
</span><span class="line">   freopen("data2.out","w",stdout);
</span><span class="line">}
</span><span class="line">int C[10][MaxN]={0};
</span><span class="line">int n,m;
</span><span class="line">int read(int k,int i){
</span><span class="line">  int sum=0;
</span><span class="line">  for(;k;k-=(k&amp;-k)) sum += C[i][k];
</span><span class="line">  return sum;
</span><span class="line">}
</span><span class="line">void update(int k,int p,int i){
</span><span class="line">    for(;k&lt;=n;k+=(k&amp;-k)) C[i][k] += p;
</span><span class="line">}
</span><span class="line">//fast read
</span><span class="line">void RD(int &amp;a) { 
</span><span class="line">    int value = 0, s = 1; 
</span><span class="line">    char c;
</span><span class="line">    while ((c = getchar()) == ' ' || c == '\n');
</span><span class="line">    if (c == '-') s = -s; else value = c-48;
</span><span class="line">    while ((c = getchar()) &gt;= '0' &amp;&amp; c &lt;= '9')
</span><span class="line">        value = value * 10 + c - 48;
</span><span class="line">    a = s * value;
</span><span class="line">}
</span><span class="line">int B[MaxN],A[MaxN];
</span><span class="line">int l[MaxN],r[MaxN],beta[MaxN];
</span><span class="line">int q[MaxN];
</span><span class="line">ll ans[MaxN];
</span><span class="line">int used[11];
</span><span class="line">int Q,a,p,m,l1,r1,beta1;
</span><span class="line">void gao(){
</span><span class="line">  memset(used,0,sizeof(used));
</span><span class="line">  rep(i,n) RD(A[i]);
</span><span class="line">  int len=0,t=0;
</span><span class="line">  rep(i,m){
</span><span class="line">      RD(Q);
</span><span class="line">    if(Q==1)RD(a),RD(p),l[len]=a,r[len]=p,q[len++]=-1;
</span><span class="line">    else{
</span><span class="line">         RD(l1),RD(r1),RD(beta1);
</span><span class="line">         l[len]=l1,r[len]=r1,beta[len]=beta1;
</span><span class="line">         used[beta1]=1,q[len++]=t++;
</span><span class="line">       if(beta1==1){ 
</span><span class="line">        ll ttt=r1-l1+1; 
</span><span class="line">        ans[q[len-1]]=ttt*(ttt-1)/2%mod;
</span><span class="line">       }
</span><span class="line">     }
</span><span class="line">  }
</span><span class="line">}
</span><span class="line">int main(){
</span><span class="line">  //data();
</span><span class="line">  while(~scanf("%d%d",&amp;n,&amp;m)){  
</span><span class="line">     gao();
</span><span class="line">     repf(k,2,10){
</span><span class="line">        if(!used[k])continue;
</span><span class="line">        memset(C,0,sizeof(C));
</span><span class="line">        rep(i,n) B[i]=A[i],update(i+1,1,A[i]%k);
</span><span class="line">        rep(i,m){
</span><span class="line">           if(q[i]==-1){
</span><span class="line">              update(l[i],-1,B[l[i]-1]%k);
</span><span class="line">              update(l[i],1,(B[l[i]-1]+r[i])%k);
</span><span class="line">              B[l[i]-1]+=r[i];
</span><span class="line">              continue;
</span><span class="line">           }
</span><span class="line">           if(beta[i]!=k)continue;
</span><span class="line">           ll sum=0;
</span><span class="line">           rep(j,beta[i]){
</span><span class="line">               ll tp = read(r[i],j) - read(l[i]-1,j);
</span><span class="line">               sum += tp*(tp-1)/2;
</span><span class="line">               sum %=mod;
</span><span class="line">           }
</span><span class="line">           ans[q[i]]=sum%mod;
</span><span class="line">        } 
</span><span class="line">     }
</span><span class="line">     rep(i,t) printf("%lld\n",ans[i]%mod);
</span><span class="line">  }
</span><span class="line">  return 0;
</span><span class="line">}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="i-missinghttpacmswjtueducnjudgeonlineshowproblemproblemid2181">I <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=2181">Missing教大家画矩形</a></h2>

<p>模拟题目，确定一个矩形只需要对角线确定，
所以找出最小，最大的x值和y值就行了
题目虽然简单，但是如果写法不好，也会被坑~
(此题来自于Missing)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
</pre></td><td class="code"><pre><code class=""><span class="line">//Draw A Rectangle
</span><span class="line">//Author: _missing
</span><span class="line">// 模拟题，确定一个矩形只需要对角线确定，
</span><span class="line">// 所以找出最小，最大的x值和y值就行了
</span><span class="line">// 题目虽然简单，但是如果写法不好，也会被坑~
</span><span class="line">#include &lt;iostream&gt;
</span><span class="line">#include &lt;cstdio&gt;
</span><span class="line">#include &lt;cstring&gt;
</span><span class="line">#include &lt;algorithm&gt;
</span><span class="line">using namespace std;
</span><span class="line">void draw(int x1, int y1, int x2, int y2) {
</span><span class="line">    for (int i = 0; i &lt; x1; ++i) puts("");
</span><span class="line">    for (int i = x1; i &lt;= x2; ++i) {
</span><span class="line">        for (int j = 0; j &lt; y1; ++j) putchar(' ');
</span><span class="line">        for (int j = y1; j &lt;= y2; ++j)
</span><span class="line">            if (i == x1 || i == x2) putchar('*');
</span><span class="line">            else if (j == y1 || j == y2) putchar('*');
</span><span class="line">            else putchar(' ');
</span><span class="line">        putchar('\n');
</span><span class="line">    }
</span><span class="line">}
</span><span class="line">int main() {
</span><span class="line">    //freopen("data2.in", "r", stdin);
</span><span class="line">    //freopen("data2.out", "w", stdout);
</span><span class="line">    int T, ncase = 0, N;
</span><span class="line">    while (~scanf("%d", &amp;T)) {
</span><span class="line">        while (T--) {
</span><span class="line">            int x[4], y[4], minx = 100, maxx = -1, miny = 100, maxy = -1;
</span><span class="line">            int ok = 1;
</span><span class="line">
</span><span class="line">            scanf("%d", &amp;N);
</span><span class="line">            for (int i = 0; i &lt; N; ++i) scanf("%d %d", x+i, y+i);
</span><span class="line">            for (int i = 0; i &lt; N; ++i) {
</span><span class="line">                minx = min(minx, x[i]);
</span><span class="line">                maxx = max(maxx, x[i]);
</span><span class="line">                miny = min(miny, y[i]);
</span><span class="line">                maxy = max(maxy, y[i]);
</span><span class="line">            }
</span><span class="line">            if (minx == maxx || miny == maxy) ok = 0;
</span><span class="line">            for (int i = 0; ok &amp;&amp; i &lt; N; ++i) {
</span><span class="line">                if ((x[i] == minx || x[i] == maxx) &amp;&amp;
</span><span class="line">                    (y[i] == miny || y[i] == maxy)) continue;
</span><span class="line">                ok = 0;
</span><span class="line">            }
</span><span class="line">
</span><span class="line">            printf("Case #%d:\n", ++ncase);
</span><span class="line">            if (!ok) { puts("None"); continue; }
</span><span class="line">            draw(minx, miny, maxx, maxy);
</span><span class="line">        }
</span><span class="line">    }
</span><span class="line">    return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>以上题目均为过测试数据的程序，不保证程序完全正确无误.
Thanks for reading…<br />
&lt;p class=&#8217;post-footer&#8217;&gt;原文地址: <a href="http://www.UnkelTao.com/blog/2014/11/16/2014-swjtu-acm-onsite-programming-contest/">http://www.UnkelTao.com/blog/2014/11/16/2014-swjtu-acm-onsite-programming-contest/</a><br /><br /> 由 <a href="http://www.UnkelTao.com">UnkelTao</a> 撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a>&lt;/p&gt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bestcode #11 div2]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/09/29/bestcode-number-11-div2/"/>
    <updated>2014-09-29T04:54:35+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/09/29/bestcode-number-11-div2</id>
    <content type="html"><![CDATA[<p>博客还是要不定期更新下才行，表示存活。<br />
~~昨天晚上做了杭电的best coder,div2果然还是比较适合我这种弱渣的，都可以做。最后1004出题人实在太恶意了，故意卡内存，MLE到死，1002坑死了一堆人，最后hack了6个（悲催的是自己想到数据了写错了一个字母，自己最后也挂掉了）。  </p>

<p><strong>题解在下面:</strong><br />
<!-- more -->  </p>

<h3 id="httpacmhdueducnshowproblemphppid5054"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5054">1001</a></h3>
<p>签到题，没什么可说的，判断<code>2*x==n&amp;&amp;2*y==m</code>就行了  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class=""><span class="line">int main(){
</span><span class="line">   //data();
</span><span class="line">         
</span><span class="line">   int m,n,x,y;
</span><span class="line">   
</span><span class="line">   while(~scanf("%d%d%d%d",&amp;n,&amp;m,&amp;x,&amp;y)){
</span><span class="line">      if(x*2==n&amp;&amp;y*2==m) cout&lt;&lt;"YES"&lt;&lt;endl;
</span><span class="line">      else cout&lt;&lt;"NO"&lt;&lt;endl;
</span><span class="line">   }
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="httpacmhdueducnshowproblemphppid5055"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5055">1002</a></h3>

<p><strong>题意:</strong> 给你一堆0~9的数字，让你把他们组合成一个满足条件的最大的数:  </p>

<ul>
  <li>木有前导0  </li>
  <li>最后一个必须是奇数  </li>
</ul>

<p>如果没有满足条件的，输出-1。
**解法:  ** 贪心，选一个最小的奇数放最后，然后从大到小输出剩余的数就行了，注意判断无解的情况。<br />
一些特殊数据  </p>

<blockquote>
  <p>5<br />
1 0 0 0 0<br />
out:-1<br />
1<br />
1<br />
out:1<br />
1<br />
0<br />
out:0  </p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class="line">void RD(int &amp;a) { 
</span><span class="line">    int value = 0, s = 1; 
</span><span class="line">    char c;
</span><span class="line">    while ((c = getchar()) == ' ' || c == '\n');
</span><span class="line">    if (c == '-') s = -s; else value = c-48;
</span><span class="line">    while ((c = getchar()) &gt;= '0' &amp;&amp; c &lt;= '9')
</span><span class="line">        value = value * 10 + c - 48;
</span><span class="line">    a = s * value;
</span><span class="line">}
</span><span class="line">int res[10];
</span><span class="line">int main(){
</span><span class="line">   //data();
</span><span class="line">         
</span><span class="line">   int n,a;
</span><span class="line">   while(~scanf("%d",&amp;n)){
</span><span class="line">      int fg=0,fg2=0,mi=11;
</span><span class="line">      memset(res,0,sizeof(res));
</span><span class="line">      rep(i,n){ 
</span><span class="line">         RD(a);
</span><span class="line">         if(a&amp;1){ fg++;if(mi&gt;a)mi=a;} 
</span><span class="line">         res[a]++; 
</span><span class="line">      }  
</span><span class="line">      if(fg==0||(n&gt;1&amp;&amp;res[0]==n-1)){printf("-1\n");}
</span><span class="line">      else{
</span><span class="line">             
</span><span class="line">         
</span><span class="line">         for(int i=9;i&gt;=0;i--){
</span><span class="line">            if(i==mi) rep(j,res[i]-1)printf("%d",i);
</span><span class="line">            else rep(j,res[i]) printf("%d",i);
</span><span class="line">            
</span><span class="line">         }
</span><span class="line">         printf("%d\n",mi);
</span><span class="line">      }
</span><span class="line">   }
</span><span class="line">   
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="httpacmhdueducnshowproblemphppid5056"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5056">1003</a></h3>

<p>**题意： ** 给你一个只包含小写字母的字符串，问你相同字母不超过k个的子串有多少种。<br />
**解法:  ** 简单的dp吧对于某个i位置，找到该字母的第前k个相同字母的位置(不足k,就在起始位置)，同时维护前i-1的位置最远可以向前的位置。  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class=""><span class="line">void RD(int &amp;a) { 
</span><span class="line">    int value = 0, s = 1; 
</span><span class="line">    char c;
</span><span class="line">    while ((c = getchar()) == ' ' || c == '\n');
</span><span class="line">    if (c == '-') s = -s; else value = c-48;
</span><span class="line">    while ((c = getchar()) &gt;= '0' &amp;&amp; c &lt;= '9')
</span><span class="line">        value = value * 10 + c - 48;
</span><span class="line">    a = s * value;
</span><span class="line">}
</span><span class="line">
</span><span class="line">int cnt[27];
</span><span class="line">vector&lt;int&gt; mark[26];
</span><span class="line">char str[100100];
</span><span class="line">int main(){
</span><span class="line">   //data();
</span><span class="line">          
</span><span class="line">   int T,n,a,k;
</span><span class="line">   RD(T);
</span><span class="line">   
</span><span class="line">   while(T--){
</span><span class="line">        for(int i=0;i&lt;26;i++){ mark[i].clear();cnt[i]=0;}          
</span><span class="line">     scanf("%s",str);
</span><span class="line">     RD(k);
</span><span class="line">     int len=strlen(str);
</span><span class="line">     ll res=1LL;
</span><span class="line">     mark[str[0]-'a'].push_back(0);
</span><span class="line">     cnt[str[0]-'a']++;
</span><span class="line">     int cur=-1;
</span><span class="line">     for(int i=1;i&lt;len;i++)
</span><span class="line">     {   int tp=str[i]-'a';
</span><span class="line">         
</span><span class="line">         if(cnt[tp]&lt;k) res+=(i-cur);
</span><span class="line">         else{cur=max(cur,mark[tp][cnt[tp]-k]); res +=(i-cur);}
</span><span class="line">         //cout&lt;&lt;tp&lt;&lt;"  "&lt;&lt;cnt[tp]&lt;&lt;"  "&lt;&lt;k&lt;&lt;"   "&lt;&lt;res&lt;&lt;endl;
</span><span class="line">         cnt[tp]++;
</span><span class="line">         mark[tp].push_back(i);
</span><span class="line">     }
</span><span class="line">     cout&lt;&lt;res&lt;&lt;endl;
</span><span class="line">   }
</span><span class="line">   
</span><span class="line">   return 0;
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="httpacmhdueducnshowproblemphppid5057"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5057">1004</a></h3>

<p><strong>题意:</strong> 给你一串数字，两种操作  </p>

<ul>
  <li>S x y: 将第x个数变为y  </li>
  <li>Q l r d p: 查询[l,r]区间内，第d位数字为p的数有多少个。  </li>
</ul>

<p>**解法: **一开始利用树状数组开了一个C[d][p][MaxN]的数组来维护第d位为p的一个区间和，结果出题人恶意的卡内存，不断的MLE，姿势不够，怎么优化内存都不行，有人说用无符号short型，但是n最大10^6，会溢出。最后改成离线算法，只开C[p][MaxN]的数组来维护某一位为p的区间和，然后预存所有操作，跑10遍，每一遍对应一位。这样内存就很随意了。 <br />
<img src="http://unkeltao.qiniudn.com/wailian%2Fhdudiv211.png" alt="" /><br />
都是泪~</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#define MaxN 110000
</span><span class="line">int  C[11][MaxN]={0};
</span><span class="line">int n,n2,m;
</span><span class="line">int read(int k,int i){
</span><span class="line">    int sum=0;
</span><span class="line">    if(k&lt;=0) return 0;
</span><span class="line">    for(;k;k-=(k&amp;-k)) sum += C[i][k];
</span><span class="line">    return sum;
</span><span class="line">}
</span><span class="line">
</span><span class="line">void update(int k,int p,int i){
</span><span class="line">    for(;k&lt;=n;k+=(k&amp;-k)) C[i][k] += p;
</span><span class="line">}
</span><span class="line">void RD(int &amp;a) { 
</span><span class="line">    int value = 0, s = 1; 
</span><span class="line">    char c;
</span><span class="line">    while ((c = getchar()) == ' ' || c == '\n');
</span><span class="line">    if (c == '-') s = -s; else value = c-48;
</span><span class="line">    while ((c = getchar()) &gt;= '0' &amp;&amp; c &lt;= '9')
</span><span class="line">        value = value * 10 + c - 48;
</span><span class="line">    a = s * value;
</span><span class="line">}
</span><span class="line">int CC[MaxN],A[MaxN];
</span><span class="line">int p[11];
</span><span class="line">int T,i,j,a[MaxN],b[MaxN],l[MaxN],r[MaxN],cnt[MaxN],tp1,tp2;
</span><span class="line">int ans[MaxN];
</span><span class="line">int mx[11];
</span><span class="line">char Q[3];
</span><span class="line">int main(){
</span><span class="line">   // data();
</span><span class="line">
</span><span class="line">    RD(T);
</span><span class="line">    p[1]=1;
</span><span class="line">    for(i=2;i&lt;=10;i++) p[i]=p[i-1]*10;
</span><span class="line">    while(T--){
</span><span class="line">       RD(n);
</span><span class="line">       RD(m);        
</span><span class="line">
</span><span class="line">       for(i=0;i&lt;n;i++){ 
</span><span class="line">            RD(A[i]);
</span><span class="line">            //cout&lt;&lt;A[i]&lt;&lt;endl;
</span><span class="line">       }
</span><span class="line">       for(int i=0;i&lt;11;i++)mx[i]=n;
</span><span class="line">       for(i=0;i&lt;m;i++){
</span><span class="line">          scanf("%s",Q);
</span><span class="line">             if(Q[0]=='S'){
</span><span class="line">             cnt[i]=0;
</span><span class="line">               RD(a[i]);RD(b[i]);
</span><span class="line">          }else{
</span><span class="line">               RD(l[i]);RD(r[i]);RD(a[i]);RD(b[i]);cnt[i]=1;
</span><span class="line">               mx[a[i]]=i;
</span><span class="line">          }
</span><span class="line">          
</span><span class="line">       }
</span><span class="line">       
</span><span class="line">       for(int i=1;i&lt;=10;i++)
</span><span class="line">       {
</span><span class="line">             memset(C,0,sizeof(C));
</span><span class="line">             for(j=0;j&lt;n;j++){
</span><span class="line">                n2 = (A[j]/p[i])%10;
</span><span class="line">                update(j+1,1,n2);
</span><span class="line">                CC[j]=A[j];
</span><span class="line">             }   
</span><span class="line">            for(int j=0;j&lt;m;j++){
</span><span class="line">               // if(j&gt;mx[i]) break;
</span><span class="line">                if(!cnt[j]) {
</span><span class="line">                    tp1=(CC[a[j]-1]/p[i])%10;
</span><span class="line">                    tp2=(b[j]/p[i])%10;
</span><span class="line">                    if(tp1==tp2) continue;
</span><span class="line">                   {update(a[j],-1,tp1); update(a[j],1,tp2);}
</span><span class="line">                   CC[a[j]-1]=b[j];
</span><span class="line">                }else if(a[j]==i){
</span><span class="line">                    ans[j] = read(r[j],b[j])-read(l[j]-1,b[j]);
</span><span class="line">                }
</span><span class="line">            }
</span><span class="line">       }
</span><span class="line">       
</span><span class="line">       for(i=0;i&lt;m;i++){
</span><span class="line">          if(cnt[i])  printf("%d\n",ans[i]);
</span><span class="line">       }                            
</span><span class="line">    }
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>
<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/09/29/bestcode-number-11-div2/">http://www.UnkelTao.com/blog/2014/09/29/bestcode-number-11-div2/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring+SpringMVC+Mybatis  利用AOP自定义注解实现可配置日志快照记录]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/07/22/spring-plus-springmvc-plus-mybatis-aop/"/>
    <updated>2014-07-22T10:05:38+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/07/22/spring-plus-springmvc-plus-mybatis-aop</id>
    <content type="html"><![CDATA[<h2 id="section">目的：</h2>
<p>需要对一些事物的操作进行日志记录，如果在service内进行记录，大量的代码重复，并且维护比较麻烦。所以采用AOP的方式对service进行拦截。使用自定义注解的目的则是判断是否需要记录日志和传递额外的信息。</p>

<h2 id="section-1">方式</h2>
<p>本次解决方案十分感谢<a href="http://www.cnblogs.com/shipengzhi/articles/2716004.html">博主-跳刀的兔子的博文</a> 本文绝大部分参考与本文，略有不同，所以做一些整理，<a href="http://www.cnblogs.com/shipengzhi/articles/2716004.html">博主</a>的文章更详细一些。</p>

<!-- more -->

<h3 id="section-2">1.首先新建自定义注解</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">@Target({ElementType.METHOD})
</span><span class="line">@Retention(RetentionPolicy.RUNTIME)
</span><span class="line">@Documented  
</span><span class="line">@Inherited
</span><span class="line">public @interface LogWrite {
</span><span class="line">    /**
</span><span class="line">     *@param 模块名字 
</span><span class="line">     */
</span><span class="line">    String modelName() default "";
</span><span class="line">    
</span><span class="line">    /**
</span><span class="line">     *@param 操作类型 
</span><span class="line">     */
</span><span class="line">    String option();
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>其中@Target注解用于描述该注解的范围，我们需要注解的方法，所以值为METHOD，相关含义如下表：  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>取值</th>
      <th>含义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>CONSTRUCTOR</td>
      <td>描述构造器</td>
    </tr>
    <tr>
      <td>FIELD</td>
      <td>描述域</td>
    </tr>
    <tr>
      <td>LOCAL_VARIABLE</td>
      <td>用于描述局部变量</td>
    </tr>
    <tr>
      <td>METHOD</td>
      <td>用于描述方法</td>
    </tr>
    <tr>
      <td>PACKAGE</td>
      <td>用于描述包</td>
    </tr>
    <tr>
      <td>PARAMETER</td>
      <td>用于描述参数</td>
    </tr>
    <tr>
      <td>TYPE</td>
      <td>用于描述类或接口</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>@Retention 用于描述注解的生命周期（即：被描述的注解在什么范围内有效），其取值有：  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>取值</th>
      <th>含义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>SOURCE</td>
      <td>在源文件中有效（即源文件保留）</td>
    </tr>
    <tr>
      <td>CLASS</td>
      <td>在 class 文件中有效（即 class 保留）</td>
    </tr>
    <tr>
      <td>RUNTIME</td>
      <td>在运行时有效(即运行时保留)</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>@Documented 在默认的情况下javadoc命令不会将我们的annotation生成再doc中去的，所以使用该标记就是告诉jdk让它也将annotation生成到doc中去  </p>
  </li>
  <li>
    <p>@Inherited 比如有一个类A，在他上面有一个标记annotation，那么A的子类B是否不用再次标记annotation就可以继承得到呢，答案是肯定的  </p>
  </li>
</ul>

<h3 id="aop">2.利用AOP方式拦截</h3>
<ul>
  <li>配置AOP，我使用的是利用注解的方式来配置AOP，方法有很多，就不详细说了。</li>
  <li>使用的是@Around 环绕通知，因为需要记录该方法是否被执行成功了。</li>
  <li>实现@Around方法中，记录日志：  获取拦截的方法，判断该方法是否含有自定义注解，如果没有的则不进行记录，否则，按照自己的方式进行记录。 我主要记录的是操作的方法，所属模块，以及所有参数所构成的Json字符串。  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
</pre></td><td class="code"><pre><code class=""><span class="line">@Aspect
</span><span class="line">@Component
</span><span class="line">public class SnapshotLogWriteService {
</span><span class="line">	private LogService logService;
</span><span class="line">	public LogService getLogService() {
</span><span class="line">		return logService;
</span><span class="line">	}
</span><span class="line">
</span><span class="line">	//自动注入日志记录service
</span><span class="line">	@Autowired
</span><span class="line">	public void setLogService(LogService logService) {
</span><span class="line">		this.logService = logService;
</span><span class="line">	}
</span><span class="line">	//环绕通知方法
</span><span class="line">	@Around("execution(* unkeltao.service.*.*(..))")
</span><span class="line">	public Object doWriteLog(ProceedingJoinPoint pjp) throws Throwable {
</span><span class="line">		System.err.println("拦截方法,进入日志记录");
</span><span class="line">		// 拦截的实体类
</span><span class="line">		Object target = pjp.getTarget();
</span><span class="line">		// 拦截的方法名称
</span><span class="line">		String methodName = pjp.getSignature().getName();
</span><span class="line">		// 拦截的方法参数
</span><span class="line">		Object[] args = pjp.getArgs();
</span><span class="line">		
</span><span class="line">		// 拦截的放参数类型
</span><span class="line">		Class[] parameterTypes = ((MethodSignature) pjp.getSignature())
</span><span class="line">				.getMethod().getParameterTypes();
</span><span class="line">
</span><span class="line">		Object object = null;
</span><span class="line">		
</span><span class="line">		//需要转换成Json的HashMap
</span><span class="line">		Map&lt;String, Object&gt; maps = new HashMap&lt;String, Object&gt;();
</span><span class="line">		Map&lt;String, Object&gt; parammaps = new HashMap&lt;String, Object&gt;();
</span><span class="line">		// 获得被拦截的方法
</span><span class="line">		Method method = target.getClass().getMethod(methodName, parameterTypes);
</span><span class="line">		if (null != method) {
</span><span class="line">			// 判断是否包含自定义的注解
</span><span class="line">			if (method.isAnnotationPresent(MyAnnotation.class)) {
</span><span class="line">				// 获取自定义注解实体
</span><span class="line">				MyAnnotation myAnnotation = method
</span><span class="line">						.getAnnotation(MyAnnotation.class);
</span><span class="line">				//日志类实体类
</span><span class="line">				OptionLog log = new OptionLog();
</span><span class="line">				
</span><span class="line">				log.setUserid(myAnnotation.userid());
</span><span class="line">				log.setModelname(myAnnotation.modelName());
</span><span class="line">				log.setOp(myAnnotation.option());
</span><span class="line">				maps.put("方法名", method.getName());
</span><span class="line">				parammaps.put("方法名", method.getName());
</span><span class="line">                //循环获得所有参数对象
</span><span class="line">				for(int i=0; i&lt;args.length; i++){
</span><span class="line">					if (null != args[i]) {
</span><span class="line">						parammaps.put("args["+i+"]", args[i]);
</span><span class="line">					}
</span><span class="line">					else {
</span><span class="line">						parammaps.put("args["+i+"]", "空参数");
</span><span class="line">					}
</span><span class="line">				}
</span><span class="line">				maps.put("参数", parammaps);
</span><span class="line">				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
</span><span class="line">				maps.put("操作时间", sdf.format(new Date()));
</span><span class="line">				// 获取服务运行结果
</span><span class="line">				try {
</span><span class="line">					object = pjp.proceed();// 执行该方法
</span><span class="line">					maps.put("状态", "成功");
</span><span class="line">					log.setStatus(1);
</span><span class="line">				} catch (Exception e) {
</span><span class="line">					System.err.println(e.getMessage());
</span><span class="line">					maps.put("状态", "失败");
</span><span class="line">					log.setStatus(0);
</span><span class="line">					log.setComments(e.getMessage());
</span><span class="line">				}
</span><span class="line">				//将参数转化为Json字符串
</span><span class="line">				log.setJs(new JSONObject(maps).toJSONString());
</span><span class="line">				log.setOptime(new Date());
</span><span class="line">				System.err.println(new JSONObject(maps).toJSONString());  
</span><span class="line">				
</span><span class="line">				//记录相关日志
</span><span class="line">				if (null != logService) {
</span><span class="line">					try {
</span><span class="line">						if(1 == logService.Save(log)){
</span><span class="line">							System.err.println("日志记录成功");
</span><span class="line">						}
</span><span class="line">						else{
</span><span class="line">							System.err.println("日志记录失败");
</span><span class="line">						}
</span><span class="line">						
</span><span class="line">					} catch (Exception e) {
</span><span class="line">						e.printStackTrace();
</span><span class="line">					}
</span><span class="line">				}
</span><span class="line">				else{
</span><span class="line">					System.err.println("自动注入失败，日志未记录");
</span><span class="line">				}
</span><span class="line">
</span><span class="line">			} else { // 没有包含该注解则不进行其他处理
</span><span class="line">				object = pjp.proceed();// 执行该方法
</span><span class="line">			}
</span><span class="line">
</span><span class="line">		} else { // 不需要拦截，直接运行
</span><span class="line">			object = pjp.proceed(); // 执行该方法
</span><span class="line">		}
</span><span class="line">		return object;
</span><span class="line">	}
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">记录结果</h3>
<p><img src="http://unkeltao.qiniudn.com/wailian/TestLog2.png" alt="记录结果" />  </p>

<h3 id="json">最终的Json效果图</h3>
<p><img src="http://unkeltao.qiniudn.com/wailian/LogTest.png" alt="效果图" /></p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/07/22/spring-plus-springmvc-plus-mybatis-aop/">http://www.UnkelTao.com/blog/2014/07/22/spring-plus-springmvc-plus-mybatis-aop/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[spring+springmvc+mybatis环境搭建]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/07/17/spring-plus-springmvc-plus-mybatis/"/>
    <updated>2014-07-17T14:46:31+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/07/17/spring-plus-springmvc-plus-mybatis</id>
    <content type="html"><![CDATA[<p>学习了一下这个框架的整合，跟SSH还是有区别的，将Struts2换成了springmvc，hibernate换成了mybatis。</p>

<p>当然管理包什么的，还是Maven靠谱，IDE从MyEclipse换到了Eclipse，快了不少。不过Maven插件需要自己安装了。
<!-- more --></p>

<h2 id="section">环境搭建</h2>

<h3 id="maven">Maven</h3>

<ul>
  <li>配置: 下载Maven包配置环境变量即可，配置文件中修改库的位置等相关信息  </li>
  <li>使用： 安装Eclipse插件，将Maven安装路径配置进去  </li>
  <li>在<strong>pom.xml</strong>中加入包的配置即可。  </li>
</ul>

<blockquote>
  <pre><code>&lt;dependency&gt;  
	&lt;groupId&gt;org.springframework&lt;/groupId&gt;  
	&lt;artifactId&gt;spring-test&lt;/artifactId&gt;  
  	&lt;version&gt;3.2.0.RELEASE&lt;/version&gt;  
&lt;/dependency&gt;  
</code></pre>
</blockquote>

<ul>
  <li>其中版本号可以在<a href="http://search.maven.org/">http://search.maven.org</a> 中查询.<br />
下面是我搭建环境中所使用到的jar包  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
</span><span class="line">	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;
</span><span class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
</span><span class="line">	&lt;groupId&gt;unkeltao.testmybatis&lt;/groupId&gt;
</span><span class="line">	&lt;artifactId&gt;testmybatis&lt;/artifactId&gt;
</span><span class="line">	&lt;packaging&gt;war&lt;/packaging&gt;
</span><span class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
</span><span class="line">	&lt;name&gt;testmybatis Maven Webapp&lt;/name&gt;
</span><span class="line">	&lt;url&gt;http://maven.apache.org&lt;/url&gt;
</span><span class="line">
</span><span class="line">	&lt;dependencies&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;spring-test&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.2.0.RELEASE&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.2.0.RELEASE&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;spring-core&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.2.0.RELEASE&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;mybatis&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.1.1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.1.1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;mysql&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;5.1.21&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;junit&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;junit&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;4.11&lt;/version&gt;
</span><span class="line">			&lt;scope&gt;test&lt;/scope&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;com.alibaba&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;druid&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;0.2.9&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.aspectj&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.7.1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.aspectj&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.7.1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.9.11&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;jackson-core-asl&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.9.11&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;commons-fileupload&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.2.2&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;javax.servlet&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.0-alpha-1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;log4j&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;log4j&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.2.17&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;com.alibaba&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;fastjson&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.1.26&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;jstl&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;jstl&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.2&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;taglibs&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;standard&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;1.1.2&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">		&lt;dependency&gt;
</span><span class="line">			&lt;groupId&gt;cglib&lt;/groupId&gt;
</span><span class="line">			&lt;artifactId&gt;cglib-nodep&lt;/artifactId&gt;
</span><span class="line">			&lt;version&gt;3.1&lt;/version&gt;
</span><span class="line">		&lt;/dependency&gt;
</span><span class="line">	&lt;/dependencies&gt;
</span><span class="line">	&lt;build&gt;
</span><span class="line">	&lt;/build&gt;
</span><span class="line">&lt;/project&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="xml">相关xml配置</h3>

<h4 id="springxml-spring">spring.xml 用来配置spring</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class="line">		&lt;beans xmlns="http://www.springframework.org/schema/beans" 
</span><span class="line">		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
</span><span class="line">		xmlns:aop="http://www.springframework.org/schema/aop"      
</span><span class="line">		xmlns:context="http://www.springframework.org/schema/context" 
</span><span class="line">		xsi:schemaLocation="
</span><span class="line">		http://www.springframework.org/schema/beans
</span><span class="line">		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
</span><span class="line">		http://www.springframework.org/schema/context
</span><span class="line">		http://www.springframework.org/schema/context/spring-context-3.0.xsd
</span><span class="line">		http://www.springframework.org/schema/aop
</span><span class="line">		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
</span><span class="line">&gt;
</span><span class="line">	&lt;!-- 启动对@AspectJ注解的支持 --&gt;
</span><span class="line">    &lt;aop:aspectj-autoproxy/&gt;
</span><span class="line">	&lt;!-- 引入属性文件 --&gt;
</span><span class="line">	&lt;context:property-placeholder location="classpath:config.properties" /&gt;
</span><span class="line">	&lt;!-- 自动扫描(自动注入) --&gt;
</span><span class="line">	&lt;context:component-scan base-package="unkeltao.service" /&gt;
</span><span class="line">&lt;/beans&gt;  </span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="spring-mvcxml-springmvc">spring-mvc.xml 配置springmvc,用不到的可以删掉</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class="line">&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans 
</span><span class="line">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
</span><span class="line">http://www.springframework.org/schema/context 
</span><span class="line">http://www.springframework.org/schema/context/spring-context-3.0.xsd 
</span><span class="line">http://www.springframework.org/schema/mvc 
</span><span class="line">http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"&gt;
</span><span class="line">	&lt;!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 --&gt;
</span><span class="line">	&lt;context:component-scan base-package="unkeltao.controller" /&gt;
</span><span class="line">	&lt;!-- 避免IE执行AJAX时,返回JSON出现下载文件 --&gt;
</span><span class="line">	&lt;bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"&gt;
</span><span class="line">		&lt;property name="supportedMediaTypes"&gt;
</span><span class="line">			&lt;list&gt;
</span><span class="line">				&lt;value&gt;application/json;charset=UTF-8&lt;/value&gt;
</span><span class="line">			&lt;/list&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 --&gt;
</span><span class="line">	&lt;bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"&gt;
</span><span class="line">		&lt;property name="messageConverters"&gt;
</span><span class="line">			&lt;list&gt;
</span><span class="line">				&lt;ref bean="mappingJacksonHttpMessageConverter" /&gt;&lt;!-- json转换器 --&gt;
</span><span class="line">			&lt;/list&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 --&gt;
</span><span class="line">	&lt;bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" /&gt;
</span><span class="line">	&lt;bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"&gt;
</span><span class="line">		&lt;property name="defaultEncoding"&gt;
</span><span class="line">			&lt;value&gt;UTF-8&lt;/value&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">		&lt;property name="maxUploadSize"&gt;
</span><span class="line">			&lt;value&gt;32505856&lt;/value&gt;&lt;!-- 上传文件大小限制为31M，31*1024*1024 --&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">		&lt;property name="maxInMemorySize"&gt;
</span><span class="line">			&lt;value&gt;4096&lt;/value&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">&lt;/beans&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="spring-mybatisxmlmybatis">spring-mybatis.xml,里面为mybatis的一些配置</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class="line">&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
</span><span class="line">http://www.springframework.org/schema/beans 
</span><span class="line">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
</span><span class="line">http://www.springframework.org/schema/tx 
</span><span class="line">http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
</span><span class="line">http://www.springframework.org/schema/aop 
</span><span class="line">http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
</span><span class="line">&gt;
</span><span class="line">	&lt;!-- JNDI方式配置数据源 --&gt;
</span><span class="line">	&lt;!-- &lt;bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"&gt; &lt;property name="jndiName" value="${jndiName}"&gt;&lt;/property&gt; &lt;/bean&gt; --&gt;
</span><span class="line">	&lt;!-- 配置数据源 --&gt;
</span><span class="line">	&lt;bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"&gt;
</span><span class="line">		&lt;property name="url" value="${jdbc_url}" /&gt;
</span><span class="line">		&lt;property name="username" value="${jdbc_username}" /&gt;
</span><span class="line">		&lt;property name="password" value="${jdbc_password}" /&gt;
</span><span class="line">		&lt;!-- 初始化连接大小 --&gt;
</span><span class="line">		&lt;property name="initialSize" value="0" /&gt;
</span><span class="line">		&lt;!-- 连接池最大使用连接数量 --&gt;
</span><span class="line">		&lt;property name="maxActive" value="20" /&gt;
</span><span class="line">		&lt;!-- 连接池最大空闲 --&gt;
</span><span class="line">		&lt;property name="maxIdle" value="20" /&gt;
</span><span class="line">		&lt;!-- 连接池最小空闲 --&gt;
</span><span class="line">		&lt;property name="minIdle" value="0" /&gt;
</span><span class="line">		&lt;!-- 获取连接最大等待时间 --&gt;
</span><span class="line">		&lt;property name="maxWait" value="60000" /&gt;
</span><span class="line">		&lt;!-- &lt;property name="poolPreparedStatements" value="true" /&gt; &lt;property name="maxPoolPreparedStatementPerConnectionSize" value="33" /&gt; --&gt;
</span><span class="line">		&lt;property name="validationQuery" value="${validationQuery}" /&gt;
</span><span class="line">		&lt;property name="testOnBorrow" value="false" /&gt;
</span><span class="line">		&lt;property name="testOnReturn" value="false" /&gt;
</span><span class="line">		&lt;property name="testWhileIdle" value="true" /&gt;
</span><span class="line">		&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;
</span><span class="line">		&lt;property name="timeBetweenEvictionRunsMillis" value="60000" /&gt;
</span><span class="line">		&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;
</span><span class="line">		&lt;property name="minEvictableIdleTimeMillis" value="25200000" /&gt;
</span><span class="line">		&lt;!-- 打开removeAbandoned功能 --&gt;
</span><span class="line">		&lt;property name="removeAbandoned" value="true" /&gt;
</span><span class="line">		&lt;!-- 1800秒，也就是30分钟 --&gt;
</span><span class="line">		&lt;property name="removeAbandonedTimeout" value="1800" /&gt;
</span><span class="line">		&lt;!-- 关闭abanded连接时输出错误日志 --&gt;
</span><span class="line">		&lt;property name="logAbandoned" value="true" /&gt;
</span><span class="line">		&lt;!-- 监控数据库 --&gt;
</span><span class="line">		&lt;!-- &lt;property name="filters" value="stat" /&gt; --&gt;
</span><span class="line">		&lt;property name="filters" value="mergeStat" /&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;!-- myBatis文件 --&gt;
</span><span class="line">	&lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;
</span><span class="line">		&lt;property name="dataSource" ref="dataSource" /&gt;
</span><span class="line">		&lt;!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 --&gt;
</span><span class="line">		&lt;property name="mapperLocations" value="classpath:unkeltao/mapping/*.xml" /&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;
</span><span class="line">		&lt;property name="basePackage" value="unkeltao.dao" /&gt;
</span><span class="line">		&lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;!-- 配置事务管理器 --&gt;
</span><span class="line">	&lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;
</span><span class="line">		&lt;property name="dataSource" ref="dataSource" /&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;!-- 注解方式配置事物 --&gt;
</span><span class="line">	&lt;!-- &lt;tx:annotation-driven transaction-manager="transactionManager" /&gt; --&gt;
</span><span class="line">	&lt;!-- 拦截器方式配置事物 --&gt;
</span><span class="line">	&lt;tx:advice id="transactionAdvice" transaction-manager="transactionManager"&gt;
</span><span class="line">		&lt;tx:attributes&gt;
</span><span class="line">			&lt;tx:method name="add*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="append*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="insert*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="save*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="update*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="modify*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="edit*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="delete*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="remove*" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="repair" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="delAndRepair" propagation="REQUIRED" /&gt;
</span><span class="line">			&lt;tx:method name="get*" propagation="SUPPORTS" /&gt;
</span><span class="line">			&lt;tx:method name="find*" propagation="SUPPORTS" /&gt;
</span><span class="line">			&lt;tx:method name="load*" propagation="SUPPORTS" /&gt;
</span><span class="line">			&lt;tx:method name="search*" propagation="SUPPORTS" /&gt;
</span><span class="line">			&lt;tx:method name="datagrid*" propagation="SUPPORTS" /&gt;
</span><span class="line">			&lt;tx:method name="*" propagation="SUPPORTS" /&gt;
</span><span class="line">		&lt;/tx:attributes&gt;
</span><span class="line">	&lt;/tx:advice&gt;
</span><span class="line">	&lt;aop:config&gt;
</span><span class="line">		&lt;aop:pointcut id="transactionPointcut" expression="execution(* unkeltao.service..*Impl.*(..))" /&gt;
</span><span class="line">		&lt;aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" /&gt;
</span><span class="line">	&lt;/aop:config&gt;
</span><span class="line">	&lt;!-- 配置druid监控spring jdbc --&gt;
</span><span class="line">	&lt;bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype"&gt;
</span><span class="line">		&lt;property name="patterns"&gt;
</span><span class="line">			&lt;list&gt;
</span><span class="line">				&lt;value&gt;unkeltao.service.*&lt;/value&gt;
</span><span class="line">			&lt;/list&gt;
</span><span class="line">		&lt;/property&gt;
</span><span class="line">	&lt;/bean&gt;
</span><span class="line">	&lt;aop:config&gt;
</span><span class="line">		&lt;aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" /&gt;
</span><span class="line">	&lt;/aop:config&gt;
</span><span class="line">&lt;/beans&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>其中使用到了数据库的一些配置信息，可以直接写进去，但也可以从配置中读取，配置文件config.propertiew,里面写着一些相关的配置，在xml中就可以导入就可以了.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#hibernate.dialect=org.hibernate.dialect.OracleDialect
</span><span class="line">#driverClassName=oracle.jdbc.driver.OracleDriver
</span><span class="line">#validationQuery=SELECT 1 FROM DUAL
</span><span class="line">#jdbc_url=jdbc:oracle:thin:@localhost:1521:orcl
</span><span class="line">#jdbc_username=sypro
</span><span class="line">#jdbc_password=sypro
</span><span class="line">hibernate.dialect=org.hibernate.dialect.MySQLDialect
</span><span class="line">driverClassName=com.mysql.jdbc.Driver
</span><span class="line">validationQuery=SELECT 1
</span><span class="line">jdbc_url=jdbc:mysql://localhost:3306/demo?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull
</span><span class="line">jdbc_username=root
</span><span class="line">jdbc_password=1qazwsx
</span><span class="line">#hibernate.dialect=org.hibernate.dialect.SQLServerDialect
</span><span class="line">#driverClassName=net.sourceforge.jtds.jdbc.Driver
</span><span class="line">#validationQuery=SELECT 1
</span><span class="line">#jdbc_url=jdbc:jtds:sqlserver://127.0.0.1:1433/sy
</span><span class="line">#jdbc_username=sa
</span><span class="line">#jdbc_password=123456
</span><span class="line">#hibernate.dialect=org.hibernate.dialect.DerbyDialect
</span><span class="line">#driverClassName=org.apache.derby.jdbc.EmbeddedDriver
</span><span class="line">#validationQuery=SELECT 1
</span><span class="line">#jdbc_url=jdbc:derby:sy;create=true
</span><span class="line">#jdbc_username=sypro
</span><span class="line">#jdbc_password=sypro
</span><span class="line">#jndiName=java:comp/env/dataSourceName
</span><span class="line">hibernate.hbm2ddl.auto=update
</span><span class="line">hibernate.show_sql=false
</span><span class="line">hibernate.format_sql=true
</span><span class="line">sessionInfoName=sessionInfo
</span><span class="line">uploadFieldName=filedata
</span><span class="line">uploadFileMaxSize=20971520
</span><span class="line">uploadFileExts=txt,rar,zip,doc,docx,xls,xlsx,jpg,jpeg,gif,png,swf,wmv,avi,wma,mp3,mid
</span><span class="line">uploadDirectory=attached</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样配置就算完成了。。。可以做做简单的测试</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/07/17/spring-plus-springmvc-plus-mybatis/">http://www.UnkelTao.com/blog/2014/07/17/spring-plus-springmvc-plus-mybatis/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 支持Latex]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/05/28/latex-test/"/>
    <updated>2014-05-28T09:39:57+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/05/28/latex-test</id>
    <content type="html"><![CDATA[<p>将MarkDown解析器切换成kramdown后加上简单的配置。 <br />
<a href="http://blog.csdn.net/hankai1024/article/details/18048999">octopress添加LaTeX公式支持参考</a></p>

<p>这样便可以使用$\Latex$公式了。<br />
下面便是用Latex书写的公式</p>

<!-- more -->

<script type="math/tex; mode=display">% &lt;![CDATA[

\left\{
	\begin{array}{l@{}r}
	F[1][1] = a & \\
	F[1][2] = b & \\
	F[i][j] = 1 * F[i][j-2] + 2 * F[i][j-1] + 3 & 2 < j \leq m \\
	F[i][1] = 4 * F[i-1][m-1] + 5 * F[i-1][m] + 6 &  i \neq 1 \\
	F[i][2] = 7 * F[i-1][m-1] + 8 * F[i][1] + 9 & i \neq 1
	\end{array}
	\right.
 %]]&gt;</script>

<p>公式代码:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$$
</span><span class="line">\left\{
</span><span class="line">	\begin{array}{l@{}r}
</span><span class="line">	F[1][1] = a &amp; \\
</span><span class="line">	F[1][2] = b &amp; \\
</span><span class="line">	F[i][j] = 1 * F[i][j-2] + 2 * F[i][j-1] + 3 &amp; 2 &lt; j \leq m \\
</span><span class="line">	F[i][1] = 4 * F[i-1][m-1] + 5 * F[i-1][m] + 6 &amp;  i \neq 1 \\
</span><span class="line">	F[i][2] = 7 * F[i-1][m-1] + 8 * F[i][1] + 9 &amp; i \neq 1
</span><span class="line">	\end{array}
</span><span class="line">	\right.
</span><span class="line">$$</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>kramdown不仅能够支持Latex公式，而且可以画表格</strong></p>

<table>
  <tbody>
    <tr>
      <td>First cell</td>
      <td>Second cell</td>
      <td>Third cell</td>
    </tr>
    <tr>
      <td>First</td>
      <td>Second</td>
      <td>Third</td>
    </tr>
    <tr>
      <td>First</td>
      <td>Second</td>
      <td>Fourth</td>
    </tr>
  </tbody>
</table>

<p>表格代码:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">| First cell|Second cell|Third cell
</span><span class="line">| First | Second | Third |
</span><span class="line">| First | Second | Fourth |</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="kramdown">kramdown的拓展功能还有许多</h2>
<p><a href="http://kramdown.gettalong.org/syntax.html">拓展阅读</a></p>

<p>需要注意的是kramdown解析方式跟原来的rdiscount相比更为严格，比如代码段前必须一个空行，所以需要检查之前的Markdown</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/05/28/latex-test/">http://www.UnkelTao.com/blog/2014/05/28/latex-test/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 下安装 Tmux]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/04/29/intsall-tmux/"/>
    <updated>2014-04-29T16:29:54+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/04/29/intsall-tmux</id>
    <content type="html"><![CDATA[<p>Tmux(terminal multiplexer), 远程必备的终端复用软件。  </p>

<h2 id="section">安装</h2>

<h3 id="ubuntu">ubuntu</h3>
<p>用了很长一段时间的Ubuntu,绝大部分原因是其强大的软件源。  </p>

<blockquote>
  <p>安装命令<br />
sudo apt-get install tmux<br />
d  </p>
</blockquote>

<h3 id="archlinux">Archlinux</h3>
<p>前一段时间切换到了archlinux下面。 arch里面也有类似于apt-get的。它就是pacman,所以安装仍然很简单。  </p>

<blockquote>
  <p>#安装命令  <br />
pacman -S tmux  </p>
</blockquote>

<h3 id="redhat">RedHat</h3>
<p>实验室服务器使用的是Redhat,最近需要在服务器做实验，而服务器上是没有图形界面的，为了保护我的终端现场，这就更得使用Tmux了。 服务器没有外网(似乎有(O.O))。所以采用源码安装的形式。<br />
<!-- more --></p>

<ul>
  <li>首先从<strong><a href="http://tmux.sourceforge.net/">官网</a></strong>上下载tmux和libevent(因为tmux源码安装依赖于libevent,不安装make会报错)  </li>
  <li>安装libevent.    </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">tar zxvf libevent-2.0.21-stable.tar.gz  #解压  
</span><span class="line">cd libevent-2.0.21-stable  
</span><span class="line">./configure --prefix=你的安装目录  #如 /etc/pro/libevent2  
</span><span class="line">make  
</span><span class="line">make install</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>安装tmux.   </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">tar zxvf tmux-1.9a.tar.gz
</span><span class="line">cd tmux-1.9a.tar.gz
</span><span class="line">CFLAGS="-I libevent安装目录/include" LDFLAGS="-L/usr/local/libevent安装目录/lib" ./configure --prefix=tmux安装目录
</span><span class="line">#eg:  CFLAGS="-I/usr/pro/libevent2/include" LDFLAGS="-L/usr/pro/libevent2/lib" ./configure --prefix=/usr/pro/tmux
</span><span class="line">make
</span><span class="line">make install</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>链接.so  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#32位
</span><span class="line">sudo cp /usr/pro/libevent2/lib/libevent-2.0.so.5 /usr/lib
</span><span class="line">#64位
</span><span class="line">sudo cp /usr/pro/libevent2/lib/libevent-2.0.so.5 /usr/lib64</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>将tmux安装目录加入到环境变量PATH中  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">vim /etc/profile</span></code></pre></td></tr></table></div></figure></notextile></div>

<blockquote>
  <p>export TMUX_HOME=/usr/pro/tmux<br />
export PATH=$TMUX_HOME/bin:$PATH  </p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">source /etc/profile</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样便可以使用了。</p>

<h2 id="section-1">简单配置</h2>
<p>配置文件在 ~/.tmux.conf 下，没有可以新建一个。<br />
因为tmux的prefix键默认为”Ctrl+b”,但是他们隔得有点远，所以修改为”Ctrl+a”。  </p>

<blockquote>
  <p># remap prefix to Control + a <br />
set -g prefix C-a<br />
unbind C-b<br />
bind C-a send-prefix  </p>
</blockquote>

<h2 id="section-2">使用</h2>
<p><a href="https://wiki.freebsdchina.org/software/t/tmux">使用tmux——freebsdchina</a>  </p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/04/29/intsall-tmux/">http://www.UnkelTao.com/blog/2014/04/29/intsall-tmux/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[<老人与海 (海明威)> 读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/"/>
    <updated>2014-03-25T03:59:52+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<p>语文书的内容，重温了下下。  </p>

<blockquote>
  <p>人並不比鳥獸強多少，我還是情願做那隻待在黑暗深水裡的動物。 </p>
</blockquote>

<p>-At Kindle page:20-21 	 time: 2014-3-24 0:33:04 </p>

<hr />

<!-- more -->
<blockquote>
  <p>根本不懂這個，也不知道自己是不是相信。也許殺死這條魚是一個罪過，我想這應該算是罪過吧，儘管我是為了養活自己並且給許多人食用才這樣做的。不過話說回來，什麼事都是罪過啊。還是別想罪過了吧。現在想它也實在太遲了，而且有些人是專門拿錢出來給人家研究罪過的，所以這些惱人的問題就留給專家們去考慮吧。你天生是個漁夫，正如那魚天生就是一條魚一樣。 </p>
</blockquote>

<p>-At Kindle page:366-369 	 time: 2014-3-24 23:50:07 </p>

<hr />

<blockquote>
  <p>「我想人一旦被打敗了，感覺也就舒坦些了。」他想。「我從來不知道失敗後竟還會這麼舒坦。那麼，到底是什麼把你打垮的呢？」他想。 </p>
</blockquote>

<p>-At Kindle page:514-516 	 time: 2014-3-24 23:56:53 </p>

<hr />

<blockquote>
  <p>「海洋非常大。小船很小。不容易看見。」老人說，此刻他感到非常的愉快。因為現在他終於可以對一個活生生的人說話，而不再只是自言自語。或是對著海說話了。 </p>
</blockquote>

<p>-At Kindle page:553-555 	 time: 2014-3-25 0:01:11 </p>

<hr />

<blockquote>
  <p>在馬路上另一頭老人的茅棚裡，他又睡著了。他依舊將臉朝下地躺著，孩子坐在他的身邊，守著他。老人正夢見獅子。 </p>
</blockquote>

<p>-At Kindle page:578-579 	 time: 2014-3-25 0:01:26 </p>

<hr />

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/">http://www.UnkelTao.com/blog/2014/03/25/lao-ren-yu-hai-hai-ming-wei-du-shu-bi-ji/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces #238 (Div.1 AB)]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/"/>
    <updated>2014-03-23T12:51:37+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a</id>
    <content type="html"><![CDATA[<p>rating 居然涨了，简直不科学。 <br />
<a href="http://codeforces.com/profile/UnkelTao">弱弱的求个关注:http://codeforces.com/profile/UnkelTao</a>  </p>

<h2 id="a-unusual-producthttpcodeforcescomcontest406problema"><a href="http://codeforces.com/contest/406/problem/A">A. Unusual Product</a></h2>
<p><strong>题意</strong>: 给你一个矩阵，定义了unusual值，类似与矩阵乘法，但是做的与，对应所有Aij&amp;Aji的值再异或，然后你可以对矩阵的一行或者一列进行反转（0变1，1变0）查询则输出Unusual值。<br />
<strong>key</strong>: 我们可以发现，Unusual值其实就是主对角线的值进行异或，跟周围的元素完全没有关系，因为： Aij&amp;Aji,但是Aji又会与Aij，这样等于 <code>（Aij&amp;Aji）^（Aji&amp;Aij）=0 (i!=j)</code>,那么操作一次，结果便会由0变1或者由1变0，不管怎么操作。</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">1002</span><span class="p">][</span><span class="mi">1002</span><span class="p">],</span><span class="n">n</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line">    <span class="c1">//data();</span>
</span><span class="line">   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
</span><span class="line">   <span class="kt">int</span> <span class="n">ans</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">   <span class="n">ans</span><span class="o">+=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">*</span><span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">   <span class="n">ans</span><span class="o">%=</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">   <span class="kt">int</span> <span class="n">m</span><span class="p">;</span>
</span><span class="line">   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">m</span><span class="p">){</span>
</span><span class="line">      <span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">;</span>
</span><span class="line">         <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
</span><span class="line">         <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">3</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>
</span><span class="line">         <span class="k">else</span> <span class="p">{</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">);</span> <span class="n">ans</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="n">ans</span><span class="p">;}</span>
</span><span class="line">   <span class="p">}</span>
</span><span class="line">   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="b-toy-sumhttpcodeforcescomcontest406problemb"><a href="http://codeforces.com/contest/406/problem/B">B. Toy Sum</a></h2>
<p><strong>题意</strong>: 给你1，2…10^6个数，从中已经选出了其中的n个作为X，让你再挑选出m个作为另外一组Y，要求满足题目给出的公式。<br />
<strong>key</strong>:  我们稍微观察一下公式就会发现，  <code>a- 1 == s-(s+1-a)</code> ; 这样，我们就可以贪心了，如果X中选了a,那么看(s+1-a)被选没，没北选，那么我们便把(s+1-a)选入Y，如果选了，那么我们相当于X得了个s,我们便寻找一组都没被选入X的b和（s+1-b）,肯定可以找到的，因为<code>n&lt;=10^5&lt;=s/2</code>; 这样便可以得出一个可行解。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cmath&gt;</span>
</span><span class="line"><span class="cp">#include &lt;climits&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cctype&gt;</span>
</span><span class="line"><span class="cp">#include &lt;ctime&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include &lt;queue&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="cp">#include &lt;set&gt;</span>
</span><span class="line"><span class="cp">#include &lt;map&gt;</span>
</span><span class="line"><span class="cp">#include &lt;stack&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class="line"><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class="line"><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class="line"><span class="cp">#define PB push_back</span>
</span><span class="line"><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class="line"><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class="line"><span class="cp">#define pi acos(-1)</span>
</span><span class="line"><span class="cp">#define eps 0.00000001</span>
</span><span class="line"><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class="line"><span class="cp">#define MaxN  1000000</span>
</span><span class="line"><span class="cp">#define mod 1000000007</span>
</span><span class="line"><span class="cp">#define mod2 1000000009</span>
</span><span class="line"><span class="cp">#define mod3 1000007</span>
</span><span class="line"><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class="line"><span class="cp">#define inf 2147483647</span>
</span><span class="line"><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define typed int</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">kk</span><span class="o">=</span><span class="mi">1000001</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">n</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">t</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">t2</span><span class="p">[</span><span class="mi">1000002</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">ans</span><span class="p">[</span><span class="mi">1000002</span><span class="p">],</span><span class="n">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line">   <span class="c1">// data();</span>
</span><span class="line">   <span class="n">memset</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">a</span><span class="p">));</span>
</span><span class="line">   <span class="n">memset</span><span class="p">(</span><span class="n">t2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">t2</span><span class="p">));</span>
</span><span class="line">   <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">){</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span><span class="n">a</span><span class="p">[</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span>
</span><span class="line">
</span><span class="line">   <span class="kt">int</span> <span class="n">tp</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">){</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]])</span> <span class="n">tp</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">      <span class="k">else</span><span class="p">{</span>
</span><span class="line">          <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">t2</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]])</span> <span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">          <span class="n">t2</span><span class="p">[</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">          <span class="n">t2</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">t</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">   <span class="p">}</span>
</span><span class="line">   <span class="n">tp</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">kk</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">tp</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="n">a</span><span class="p">[</span><span class="n">kk</span><span class="o">-</span><span class="n">i</span><span class="p">]){</span><span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">;</span><span class="n">ans</span><span class="p">[</span><span class="n">m</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">kk</span><span class="o">-</span><span class="n">i</span><span class="p">;</span><span class="n">tp</span><span class="o">--</span><span class="p">;}</span>
</span><span class="line">   <span class="p">}</span>
</span><span class="line">
</span><span class="line">   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class="line">   <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %d&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class="line">   <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="cde">C,D,E实在做不动了。</h3>

<p>PS，顺带写下今天群内学第们训练的题，我是太闲了么。。。囧   </p>

<h2 id="e-matrixhttpacmhusteducnvjudgecontestviewactioncid42652probleme"><a href="http://acm.hust.edu.cn/vjudge/contest/view.action?cid=42652#problem/E">E Matrix</a></h2>
<p><strong>题意</strong>:  给你一个数字字符串，构造一个2维的矩阵，bij = si*sj; 给你一个范围x,y,z,t,让所有x=&lt;i&lt;=y, z=&lt;j&lt;=t 的bij的和等于a的这样的Group有多少个。 <br />
<strong>key</strong>:  我们不难发现，其实所有区间的和其实可以转化为 <code>(Sx+S(x+1)...Sy)*(Xz+...+St)</code>（展开就能就是b了），那么相当于我们求的是连续的一段的和，和另外连续的一段的和的乘积等于a的个数，那么我们可以用O(n^2)的算法枚举出所有连续子段和,并记录没种可能的个数。    </p>

<ul>
  <li>a=0, 那么判断有多少个连续字段和等于0的，<code> res = cnt[0]\*cnt[0] + 2\*cnt[0]\*cnt[i]\(cnt[i] != 0\)</code>      </li>
  <li>a!=0,那么我们就可以分解a为两个数的乘积， <code>res = cnt[c]\*cnt[d]\*2(c\*d==a) (若c==d不乘以2)</code>    </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cmath&gt;</span>
</span><span class="line"><span class="cp">#include &lt;climits&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cctype&gt;</span>
</span><span class="line"><span class="cp">#include &lt;ctime&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include &lt;queue&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="cp">#include &lt;set&gt;</span>
</span><span class="line"><span class="cp">#include &lt;map&gt;</span>
</span><span class="line"><span class="cp">#include &lt;stack&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class="line"><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class="line"><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class="line"><span class="cp">#define PB push_back</span>
</span><span class="line"><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class="line"><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class="line"><span class="cp">#define pi acos(-1)</span>
</span><span class="line"><span class="cp">#define eps 0.00000001</span>
</span><span class="line"><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class="line"><span class="cp">#define MaxN  1000000</span>
</span><span class="line"><span class="cp">#define mod 1000000007</span>
</span><span class="line"><span class="cp">#define mod2 1000000009</span>
</span><span class="line"><span class="cp">#define mod3 1000007</span>
</span><span class="line"><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class="line"><span class="cp">#define inf 2147483647</span>
</span><span class="line"><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define typed int</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">sum</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">a</span><span class="p">;</span>
</span><span class="line"><span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line">    <span class="c1">//data();</span>
</span><span class="line">	<span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">)){</span>
</span><span class="line">        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">str</span><span class="p">);</span>
</span><span class="line">		<span class="n">memset</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">cnt</span><span class="p">));</span>					
</span><span class="line">		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class="line">		<span class="n">sum</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">		<span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">&#39;0&#39;</span><span class="p">;}</span>
</span><span class="line">		<span class="n">repf</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">len</span><span class="p">)</span><span class="n">repf</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">)</span><span class="n">cnt</span><span class="p">[</span><span class="n">sum</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">-</span><span class="n">sum</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">        <span class="n">ll</span> <span class="n">res</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">		<span class="p">{</span>
</span><span class="line">		 	<span class="n">res</span><span class="o">+=</span><span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class="line">			<span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">sum</span><span class="p">[</span><span class="n">len</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">res</span><span class="o">+=</span><span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span> 	
</span><span class="line">			<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">			<span class="k">continue</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span>					
</span><span class="line">		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">a</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">			<span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">sum</span><span class="p">[</span><span class="n">len</span><span class="p">])</span>
</span><span class="line">				<span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">==</span><span class="n">a</span><span class="p">)</span> <span class="n">res</span> <span class="o">+=</span> <span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">				<span class="k">else</span> <span class="n">res</span> <span class="o">+=</span> <span class="mi">1LL</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">cnt</span><span class="p">[</span><span class="n">a</span><span class="o">/</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span>					  	
</span><span class="line">		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>	
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	
</span><span class="line">   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="f---how-far-away-httpacmhusteducnvjudgecontestviewactioncid42652problemf"><a href="http://acm.hust.edu.cn/vjudge/contest/view.action?cid=42652#problem/F">F - How far away ？</a></h3>
<p><strong>题意</strong>:  给你一颗树，查询两个之间的距离(有且只有一条)。   <br />
<strong>key</strong>： 标准解放应该是LCA（最近公共祖先） ，由于查询数目极少，本题只有200，那么很明显赤裸裸的搜索也能过啊，不知道为啥木有学第写。 广搜深搜应该都可以，n比较大，需要cevtor或者邻接表存储。  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cmath&gt;</span>
</span><span class="line"><span class="cp">#include &lt;climits&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cctype&gt;</span>
</span><span class="line"><span class="cp">#include &lt;ctime&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include &lt;queue&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="cp">#include &lt;set&gt;</span>
</span><span class="line"><span class="cp">#include &lt;map&gt;</span>
</span><span class="line"><span class="cp">#include &lt;stack&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class="line"><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class="line"><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class="line"><span class="cp">#define PB push_back</span>
</span><span class="line"><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class="line"><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class="line"><span class="cp">#define pi acos(-1)</span>
</span><span class="line"><span class="cp">#define eps 0.00000001</span>
</span><span class="line"><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class="line"><span class="cp">#define MaxN  100000</span>
</span><span class="line"><span class="cp">#define mod 1000000007</span>
</span><span class="line"><span class="cp">#define mod2 1000000009</span>
</span><span class="line"><span class="cp">#define mod3 1000007</span>
</span><span class="line"><span class="cp">#define md(x) (((x)%mod+mod)%mod)</span>
</span><span class="line"><span class="cp">#define inf 2147483647</span>
</span><span class="line"><span class="cp">#define inf2 0x7fffffffffffffff</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define typed int</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line">   <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">pnt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">nxt</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">head</span><span class="p">[</span><span class="n">MaxN</span><span class="p">],</span><span class="n">len</span><span class="p">;</span>
</span><span class="line"><span class="kt">bool</span> <span class="n">used</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">w</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">fg</span><span class="p">,</span><span class="n">ans</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="n">e</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">init</span><span class="p">(){</span>
</span><span class="line">   <span class="n">len</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">   <span class="n">memset</span><span class="p">(</span><span class="n">head</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">head</span><span class="p">));</span>
</span><span class="line">   <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="n">addeg</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span><span class="kt">int</span> <span class="n">v</span><span class="p">,</span><span class="kt">int</span> <span class="n">k</span><span class="p">){</span>
</span><span class="line">      <span class="n">pnt</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class="line">      <span class="n">w</span><span class="p">[</span><span class="n">len</span><span class="p">]</span><span class="o">=</span> <span class="n">k</span><span class="p">;</span>
</span><span class="line">      <span class="n">nxt</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">];</span>
</span><span class="line">      <span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">=</span> <span class="n">len</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kt">void</span> <span class="n">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span><span class="kt">int</span> <span class="n">cur</span><span class="p">){</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">v</span><span class="p">;</span>
</span><span class="line">  <span class="n">used</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="k">return</span><span class="p">;</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">head</span><span class="p">[</span><span class="n">u</span><span class="p">];</span><span class="n">i</span><span class="o">!=-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">=</span><span class="n">nxt</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
</span><span class="line">      <span class="n">v</span><span class="o">=</span><span class="n">pnt</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">==</span><span class="n">e</span><span class="p">){</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">ans</span><span class="o">=</span><span class="n">cur</span><span class="o">+</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="k">return</span><span class="p">;}</span>
</span><span class="line">	  <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">used</span><span class="p">[</span><span class="n">v</span><span class="p">]){</span>
</span><span class="line">         <span class="n">used</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">         <span class="n">dfs</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="n">cur</span><span class="o">+</span><span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="c1">//读入外挂 </span>
</span><span class="line"><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class="line">    <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
</span><span class="line">    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">())</span> <span class="o">==</span> <span class="sc">&#39; &#39;</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">&#39;-&#39;</span><span class="p">)</span> <span class="n">s</span> <span class="o">=</span> <span class="o">-</span><span class="n">s</span><span class="p">;</span> <span class="k">else</span> <span class="n">value</span> <span class="o">=</span> <span class="n">c</span><span class="o">-</span><span class="mi">48</span><span class="p">;</span>
</span><span class="line">    <span class="k">while</span> <span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getchar</span><span class="p">())</span> <span class="o">&gt;=</span> <span class="sc">&#39;0&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">&lt;=</span> <span class="sc">&#39;9&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">c</span> <span class="o">-</span> <span class="mi">48</span><span class="p">;</span>
</span><span class="line">    <span class="n">a</span> <span class="o">=</span> <span class="n">s</span> <span class="o">*</span> <span class="n">value</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">){</span>
</span><span class="line">    <span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="n">RD</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">){</span>
</span><span class="line">    <span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">b</span><span class="p">),</span><span class="n">RD</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line">	<span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">;</span>
</span><span class="line">	<span class="n">RD</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>
</span><span class="line">	<span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class="line">	   <span class="n">init</span><span class="p">();</span>		
</span><span class="line">       <span class="n">RD</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">	   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span><span class="n">RD</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">);</span><span class="n">addeg</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">k</span><span class="p">);</span><span class="n">addeg</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">k</span><span class="p">);}</span>
</span><span class="line">	   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">m</span><span class="p">){</span>
</span><span class="line">	   	  <span class="n">RD</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="n">e</span><span class="p">);</span>
</span><span class="line">	   	  <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">	   	  <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class="line">		  <span class="n">dfs</span><span class="p">(</span><span class="n">t</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class="line">		  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>	 		
</span><span class="line">	   <span class="p">}</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h1 id="section">最后祝学第们加油。</h1>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/">http://www.UnkelTao.com/blog/2014/03/23/codeforces-round-number-238-div-dot-1-a/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[<人生若只如初见 (安意如)>读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/"/>
    <updated>2014-03-23T04:54:52+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<p>这样的书略微不太适合我读的样子，不过里面倒是好多不错的诗。   </p>

<blockquote>
  <p>人世如此翻云覆雨，似纳兰说的：“等闲变却故人心，却道故人心易变。”也似刘禹锡的《竹叶词》：“长恨人心不如水，等闲平地起波澜。” </p>
</blockquote>

<p>-At Kindle page:21-23 	 time: 2014-3-19 19:36:10 </p>

<hr />

<!-- more -->
<blockquote>
  <p>烟花不会让人懂得，它化做的尘埃是怎样的温暖。它宁可留下一地冰冷的幻象，一地破碎。如果你哀伤，你可以为它悼念，却无法改变它的坚持。 </p>
</blockquote>

<p>-At Kindle page:258-259 	 time: 2014-3-21 23:26:00 </p>

<hr />

<blockquote>
  <p>爱一个人，倘若没有求的勇气，就像没有翅膀不能飞越沧海。除非，甘心就此放你离开，否则，还是去君子好逑吧。 </p>
</blockquote>

<p>-At Kindle page:324-325 	 time: 2014-3-21 23:30:49 </p>

<hr />

<blockquote>
  <p>有哪一个人，不会以为爱着的时候，自己手中的这点爱，是女娲补天时漏下的精华；有哪一个人，不会以为身边这个人，会伴着自己渡尽浩浩余生。 可惜，我们看不见结果。 </p>
</blockquote>

<p>-At Kindle page:399-401 	 time: 2014-3-21 23:34:50 </p>

<hr />

<blockquote>
  <p>山无棱，江水为竭，冬雷阵阵，夏雨雪，天地合，乃敢与君绝。有时候，爱只是输给了生死、时间，以及欲望。 当我们回归心海深处，那片幽蓝深静中，我是鲛人，依然会为你落泪成珠。 爱是沧海遗珠。 </p>
</blockquote>

<p>-At Kindle page:455-458 	 time: 2014-3-21 23:38:56 </p>

<hr />

<blockquote>
  <p>有时候，爱是坚韧的东西。可是有时候，它只是一池碧水，一榭春花，一陌杨柳，一窗月光，天明了，就要干涸，萎谢，褪色，消失。 </p>
</blockquote>

<p>-At Kindle page:750-751 	 time: 2014-3-21 23:54:45 </p>

<hr />

<blockquote>
  <p>我们，生生世世说相思，犹未厌倦满足。是贪恋也好啊。因着人世无常，众生有情，我尚未为你红豆熬成缠绵的伤口，美景良辰未赏透，怎么能就此放手？ </p>
</blockquote>

<p>-At Kindle page:928-929 	 time: 2014-3-22 0:04:26 </p>

<hr />

<blockquote>
  <p>你也许曾经遇上一个人，你与他相爱，以为他是你全部的需要和存在的意义。你爱他，如生如死如火如荼缠绵如呼吸；然而有一天你们分手了，得已不得已情愿不情愿，伤筋动骨声嘶力竭歇斯底里愤怒悲伤安静压抑，而那个人就那样消失于你的世界了。同时，他静默地关闭了你通向他世界的门。 </p>
</blockquote>

<p>-At Kindle page:1472-1474 	 time: 2014-3-22 16:04:21 </p>

<hr />

<blockquote>
  <p>今我来时，杨柳依依，沈园里，不见宋时明月宋时人。影壁上后人刻的两阕词，遥遥相看，黑的碑，白的字，叫人凄然。心意相通却无缘牵手。山长水阔，梦魂杳杳，再相逢，惟有来生了。这堵墙，被哀重的词剜了筋脉，虽然被修葺得光洁了，仍是“墨痕犹锁壁间尘”。 </p>
</blockquote>

<p>-At Kindle page:2294-2297 	 time: 2014-3-23 0:58:30 </p>

<hr />

<blockquote>
  <p>那些赖以生存的温暖存在，曾经觉得是那么的无足轻重。从没有像现在一样，对悠闲恬静的田园生活有无尽的向往与渴望。步履蹒跚地蹀行在古道上，遥看日影衔山。落日也知道回家，那么人呢？ 为什么总要等失落了，才拾起寻常的好？年轻人，不出去经历一番，又怎么能甘心平淡终老？人心的贪婪，或者说追求，如同空阔的海，无法满足。 </p>
</blockquote>

<p>-At Kindle page:2554-2557 	 time: 2014-3-23 1:14:49 </p>

<hr />

<blockquote>
  <p>问世间、情为何物，值得用生命去等待和交换？这个问题，不要问正在爱的人，他们意乱情迷，给不出清醒的答案；也不要问爱过了的人，他们不见得能给出答案。当爱消逝如飞雪时，剩下的只是白茫茫一片大地真干净。 </p>
</blockquote>

<p>-At Kindle page:2661-2663 	 time: 2014-3-23 1:21:03 </p>

<hr />
<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/">http://www.UnkelTao.com/blog/2014/03/23/ren-sheng-ruo-zhi-ru-chu-jian-an-yi-ru-du-shu-bi-ji/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces Round #237 (Div. 2) ]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/"/>
    <updated>2014-03-21T04:03:13+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2</id>
    <content type="html"><![CDATA[<p>群中看到学第们发的比赛链接，于是又做了一场，结果悲惨。再也不在windows下做比赛了，电脑现在不知道出了啥问题，每次00：16都要自动关机。结果敲完的题没保存，又得重新敲一遍。  </p>

<h3 id="a---valera-and-xhttpcodeforcescomcontest404problema"><a href="http://codeforces.com/contest/404/problem/A">A - Valera and X</a></h3>
<p><strong>题意</strong>： 给你一个矩阵，问你是不是恰好有2种字母，对角线字母一样，非对角线字母一样。<br />
<strong>key</strong>:   模拟  </p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">n</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">a</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">n</span><span class="o">==</span><span class="mi">1</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;YES&quot;</span>
</span><span class="line">    <span class="nb">exit</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">x</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class="line"><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">b</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class="line">    <span class="nb">exit</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class="line">        <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="n">j</span> <span class="o">||</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">            <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="n">x</span>
</span><span class="line">                <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class="line">                <span class="nb">exit</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">        <span class="k">else</span>
</span><span class="line">             <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="n">b</span>
</span><span class="line">                <span class="nb">puts</span> <span class="s2">&quot;NO&quot;</span>
</span><span class="line">                <span class="nb">exit</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;YES&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="b---marathonhttpcodeforcescomcontest404problemb"><a href="http://codeforces.com/contest/404/problem/B">B - Marathon</a></h2>
<p><strong>题意</strong>:  给你一个a*a的正方形，从(0,0)出发，沿边线逆时针行走，走n次，每次走d的距离，输出每次行走后的坐标。</p>

<p><strong>key</strong>:   模拟题，注意精度就好。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">eps</span> <span class="o">=</span> <span class="mi">1</span><span class="n">e</span><span class="o">-</span><span class="mi">5</span>
</span><span class="line"><span class="n">a</span><span class="p">,</span><span class="n">d</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_f</span><span class="p">}</span>
</span><span class="line"><span class="n">n</span> <span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">cur_x</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class="line"><span class="n">cur_y</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class="line"><span class="n">pp</span><span class="o">=</span><span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class="line">
</span><span class="line"><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
</span><span class="line">	<span class="k">if</span> <span class="n">cur_y</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class="line">		<span class="n">pp</span> <span class="o">=</span> <span class="n">cur_x</span>	
</span><span class="line">	<span class="k">elsif</span> <span class="n">a</span><span class="o">-</span><span class="n">cur_x</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class="line">		<span class="n">pp</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">cur_y</span>
</span><span class="line">	<span class="k">elsif</span> <span class="n">a</span><span class="o">-</span><span class="n">cur_y</span> <span class="o">&lt;=</span> <span class="n">eps</span>
</span><span class="line">		<span class="n">pp</span> <span class="o">=</span> <span class="n">a</span><span class="o">*</span><span class="mi">3</span> <span class="o">-</span><span class="n">cur_x</span>	
</span><span class="line">	<span class="k">else</span>
</span><span class="line">		<span class="n">pp</span> <span class="o">=</span> <span class="n">a</span><span class="o">*</span><span class="mi">4</span> <span class="o">-</span><span class="n">cur_y</span>
</span><span class="line">	<span class="k">end</span>	
</span><span class="line">	<span class="n">pp</span> <span class="o">+=</span><span class="n">d</span><span class="p">;</span>
</span><span class="line">	<span class="n">t</span><span class="o">=</span> <span class="p">(</span><span class="n">pp</span><span class="o">/</span><span class="n">a</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class="line">	<span class="n">pp</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">*</span><span class="n">t</span><span class="o">*</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">	<span class="k">case</span> <span class="n">t</span><span class="o">%</span><span class="mi">4</span>
</span><span class="line">	<span class="k">when</span> <span class="mi">0</span>
</span><span class="line">		<span class="n">cur_x</span><span class="o">=</span><span class="n">pp</span>
</span><span class="line">		<span class="n">cur_y</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">	<span class="k">when</span> <span class="mi">1</span>
</span><span class="line">		<span class="n">cur_x</span><span class="o">=</span><span class="n">a</span>
</span><span class="line">		<span class="n">cur_y</span><span class="o">=</span><span class="n">pp</span>
</span><span class="line">	<span class="k">when</span> <span class="mi">2</span>
</span><span class="line">		<span class="n">cur_x</span><span class="o">=</span><span class="n">a</span><span class="o">-</span><span class="n">pp</span>
</span><span class="line">		<span class="n">cur_y</span><span class="o">=</span><span class="n">a</span>
</span><span class="line">	<span class="k">when</span> <span class="mi">3</span>
</span><span class="line">		<span class="n">cur_x</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">		<span class="n">cur_y</span><span class="o">=</span><span class="n">a</span><span class="o">-</span><span class="n">pp</span>
</span><span class="line">	<span class="k">end</span>
</span><span class="line">	<span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;%.8f %.8f</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="n">cur_x</span><span class="p">,</span><span class="n">cur_y</span><span class="p">)</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="c---restore-graphhttpcodeforcescomcontest404problemc"><a href="http://codeforces.com/contest/404/problem/C">C - Restore Graph</a></h2>
<p><strong>题意</strong>:  给你一个无向无子环的图，告诉你所有点到某一个选取的点的距离的矩阵d,问你能不能修复出满足条件的原图，其中一个点最多能够连接k条边。</p>

<p><strong>key</strong>:  首先d中肯定只有一个0，并且该点就是选取的点。否则肯定不存在。 对d进行排序，一条边一条边的修复模拟即可，注意满足每个点连接的边不能超过k个。 </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">n</span><span class="p">,</span><span class="n">k</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">D</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="o">[</span><span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span>
</span><span class="line"><span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line"><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span>
</span><span class="line">    <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class="line">        <span class="n">flag</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">if</span> <span class="n">flag</span> <span class="o">!=</span> <span class="mi">1</span>
</span><span class="line">    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class="line">    <span class="nb">exit</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">D</span><span class="o">.</span><span class="n">sort!</span>
</span><span class="line"><span class="n">b</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">)</span>
</span><span class="line"><span class="n">e</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">)</span>
</span><span class="line"><span class="n">l</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="n">f</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="n">t</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line"><span class="k">while</span> <span class="n">t</span><span class="o">&lt;</span><span class="n">n</span>
</span><span class="line">    <span class="k">if</span> <span class="n">f</span><span class="o">==</span><span class="mi">1</span>
</span><span class="line">        <span class="n">k</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="n">first!</span><span class="o">=</span> <span class="p">(</span><span class="n">D</span><span class="o">[</span><span class="n">f</span><span class="o">].</span><span class="n">first</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">        <span class="nb">puts</span> <span class="s2">&quot;-1&quot;</span>
</span><span class="line">        <span class="nb">exit</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="nb">p</span><span class="o">=</span><span class="n">k</span>
</span><span class="line">    <span class="n">i</span> <span class="o">=</span> <span class="n">t</span>
</span><span class="line">    <span class="k">while</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span>
</span><span class="line">        <span class="k">break</span> <span class="k">if</span> <span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">first!</span><span class="o">=</span><span class="n">D</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="n">first</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="nb">p</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">            <span class="n">f</span> <span class="o">+=</span><span class="mi">1</span>
</span><span class="line">            <span class="nb">p</span><span class="o">=</span><span class="n">k</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="nb">p</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">            <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;-1&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="nb">exit</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">        <span class="nb">p</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="o">==</span><span class="n">t</span><span class="p">)</span>
</span><span class="line">            <span class="nb">puts</span><span class="p">(</span><span class="s2">&quot;-1&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="nb">exit</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">        <span class="n">b</span><span class="o">[</span><span class="n">l</span><span class="o">]=</span><span class="n">D</span><span class="o">[</span><span class="n">f</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class="line">        <span class="n">e</span><span class="o">[</span><span class="n">l</span><span class="o">]=</span><span class="n">D</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class="line">        <span class="n">l</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">f</span><span class="o">=</span><span class="n">t</span><span class="p">;</span>
</span><span class="line">    <span class="n">t</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="nb">p</span> <span class="n">l</span>
</span><span class="line"><span class="n">l</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">e</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="d---minesweeper-1dhttpcodeforcescomcontest404problemd"><a href="http://codeforces.com/contest/404/problem/D">D - Minesweeper 1D</a></h2>
<p><strong>题意</strong>: 给你一个1<em>n的地雷图，0表示左右都没有地雷，1表示左右共有1个雷，2表示左右都是雷，</em>表示该点是雷，？表示该点未知，求有多少种合法的方案。  </p>

<p><strong>key</strong>: DP,<code>dp[i][0]表示i点是0的方案数，dp[i][1]表示i点是1的方案数，dp[i][2]表示该点是雷的方案数</code>，其中1可以转化为0，2可以转化为1。 因为“<em>1”的话后面肯定不会是雷，那么变成0的方案数，如果是”01”或“11”的话，后面肯定是雷，保持1不动，”</em>2”的话后面肯定是雷。<br />
<strong>转移方程见代码</strong>  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">s</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class="line"><span class="n">mods</span> <span class="o">=</span> <span class="mi">1000000007</span>
</span><span class="line"><span class="n">dp</span> <span class="o">=</span> <span class="o">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]]</span>
</span><span class="line">
</span><span class="line"><span class="n">len</span> <span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="n">size</span>
</span><span class="line"><span class="n">cur</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">nxt</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="mi">1</span>
</span><span class="line">
</span><span class="line"><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">len</span>
</span><span class="line">	<span class="k">case</span> <span class="n">s</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class="line">	<span class="k">when</span> <span class="s1">&#39;0&#39;</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class="line">	<span class="k">when</span> <span class="s1">&#39;1&#39;</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span> <span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span> <span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span>
</span><span class="line">	<span class="k">when</span> <span class="s1">&#39;2&#39;</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span>
</span><span class="line">	<span class="k">when</span> <span class="s1">&#39;*&#39;</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class="line">	<span class="k">when</span> <span class="s1">&#39;?&#39;</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class="line">		<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span> <span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">1</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span>
</span><span class="line">	<span class="k">end</span>
</span><span class="line">	<span class="n">cur</span> <span class="o">=</span> <span class="n">nxt</span>
</span><span class="line">	<span class="n">nxt</span> <span class="o">=</span> <span class="n">cur</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span>
</span><span class="line">	<span class="n">dp</span><span class="o">[</span><span class="n">nxt</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="p">(</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">0</span><span class="o">]+</span><span class="n">dp</span><span class="o">[</span><span class="n">cur</span><span class="o">][</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span><span class="o">%</span><span class="n">mods</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="e---maze-1dhttpcodeforcescomcontest404probleme"><a href="http://codeforces.com/contest/404/problem/E">E - Maze 1D</a></h2>
<p><strong>题意</strong>: 题意真是难读,大概就是机器人会左右移动，但是如果前面的点是障碍点的话他就不会向前进忽略这次移动，问在设置最少障碍点的情况下能够使得机器人最后停下的位置是以前没有走过的。 问这样的设置方案数有多少个（在障碍点最少的情况下）。</p>

<p><strong>key</strong>: 二分+枚举。   </p>

<ul>
  <li>首先我们可以确定，如果不加障碍点他最后停留的位置只走过一次的话，那么方案数肯定是1。   </li>
  <li>最多设置一个障碍点，如果一个障碍点不能满足情况，再多的障碍点也没用。  </li>
  <li>如果i点可以是障碍点，那么<code>(0,i]</code>的点都可以是障碍点，同理-i是障碍点，<code>[-1,0)</code>都可以是障碍点。  </li>
</ul>

<p>有了这样的理解，那么遍可以2分来判断最大的i点是不是可以为障碍点了，判断方法模拟就可以了。<br />
<strong>(ruby跑的太慢，TLE了，囧RZ，C++可以AC)</strong>  </p>

<p><strong>ruby代码</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#TLE 代码</span>
</span><span class="line"><span class="vg">$s</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span>
</span><span class="line"><span class="vg">$fg</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class="line"><span class="vg">$len</span> <span class="o">=</span> <span class="vg">$s</span><span class="o">.</span><span class="n">size</span>
</span><span class="line"><span class="vg">$mods</span> <span class="o">=</span> <span class="vg">$len</span><span class="o">+</span><span class="mi">7</span>
</span><span class="line"><span class="vg">$vis</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">((</span><span class="mi">5</span><span class="o">*</span><span class="vg">$mods</span><span class="p">))</span>
</span><span class="line"><span class="k">def</span> <span class="nf">Judge</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class="line">	
</span><span class="line">	<span class="vg">$fg</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">	<span class="n">pos</span> <span class="o">=</span> <span class="vg">$mods</span> <span class="o">+</span> <span class="mi">100</span>
</span><span class="line">	<span class="n">k</span> <span class="o">+=</span> <span class="n">pos</span>
</span><span class="line">	<span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$fg</span>
</span><span class="line">	<span class="vg">$len</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">		<span class="k">if</span> <span class="vg">$s</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">chr</span><span class="o">==</span><span class="s1">&#39;R&#39;</span> <span class="ow">and</span> <span class="n">pos</span><span class="o">+</span><span class="mi">1</span> <span class="o">!=</span><span class="n">k</span>
</span><span class="line">			<span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">			<span class="c1"># p 111111111111</span>
</span><span class="line">		<span class="k">elsif</span> <span class="vg">$s</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">chr</span><span class="o">==</span><span class="s1">&#39;L&#39;</span> <span class="ow">and</span> <span class="n">pos</span><span class="o">-</span><span class="mi">1</span> <span class="o">!=</span> <span class="n">k</span>
</span><span class="line">			<span class="n">pos</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class="line">			<span class="c1"># p 222222222222</span>
</span><span class="line">		<span class="k">end</span>
</span><span class="line">		<span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="vg">$len</span><span class="o">-</span><span class="mi">1</span>
</span><span class="line">			<span class="c1"># puts &quot;b:&quot;</span>
</span><span class="line">			<span class="c1"># p $vis[pos]</span>
</span><span class="line">			<span class="c1"># p pos </span>
</span><span class="line">			<span class="c1"># p $fg</span>
</span><span class="line">			<span class="k">return</span> <span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">!=</span> <span class="vg">$fg</span>
</span><span class="line">		<span class="k">end</span>
</span><span class="line">		<span class="vg">$vis</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$fg</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="vg">$mods</span><span class="o">+</span><span class="mi">300</span><span class="p">)</span>
</span><span class="line">	<span class="nb">p</span> <span class="mi">1</span>
</span><span class="line">	<span class="nb">exit</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">res</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line"><span class="n">l</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line"><span class="n">r</span><span class="o">=</span><span class="vg">$len</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">	<span class="k">while</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">r</span>
</span><span class="line">		<span class="n">mid</span> <span class="o">=</span> <span class="p">((</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span><span class="line">		<span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="n">mid</span><span class="p">)</span>
</span><span class="line">			<span class="n">l</span> <span class="o">=</span> <span class="n">mid</span>
</span><span class="line">		<span class="k">else</span>
</span><span class="line">			<span class="n">r</span> <span class="o">=</span><span class="n">mid</span> <span class="o">-</span><span class="mi">1</span>
</span><span class="line">		<span class="k">end</span>
</span><span class="line">	<span class="k">end</span>
</span><span class="line">	<span class="n">res</span> <span class="o">+=</span> <span class="n">l</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">l</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line"><span class="n">r</span><span class="o">=</span><span class="vg">$len</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">	<span class="k">while</span> <span class="n">l</span><span class="o">&lt;</span><span class="n">r</span>
</span><span class="line">		<span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class="line">		<span class="k">if</span> <span class="no">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">*</span><span class="n">mid</span><span class="p">)</span>
</span><span class="line">			<span class="n">l</span> <span class="o">=</span> <span class="n">mid</span>
</span><span class="line">		<span class="k">else</span>
</span><span class="line">			<span class="n">r</span> <span class="o">=</span><span class="n">mid</span> <span class="o">-</span><span class="mi">1</span>
</span><span class="line">		<span class="k">end</span>
</span><span class="line">	<span class="k">end</span>
</span><span class="line">	<span class="n">res</span> <span class="o">+=</span> <span class="n">l</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="nb">p</span> <span class="n">res</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>c++代码</strong>  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">fg</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">len</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">vis</span><span class="p">[</span><span class="mi">5</span><span class="o">*</span><span class="n">MaxN</span><span class="p">];</span>
</span><span class="line">
</span><span class="line"><span class="kt">bool</span> <span class="n">Judge</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">){</span>
</span><span class="line">   <span class="n">fg</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">   <span class="kt">int</span> <span class="n">pos</span><span class="o">=</span><span class="mf">1e6</span><span class="o">+</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">   <span class="n">k</span><span class="o">+=</span><span class="n">pos</span><span class="p">;</span>
</span><span class="line">   <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class="line">   <span class="c1">// printf(&quot;%d %d %d\n&quot;, fg,pos,k);</span>
</span><span class="line">   <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class="line">   	  <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;R&#39;</span><span class="o">&amp;&amp;</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="o">!=</span><span class="n">k</span><span class="p">)</span> <span class="n">pos</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">   	  <span class="k">if</span><span class="p">(</span><span class="n">str</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;L&#39;</span><span class="o">&amp;&amp;</span><span class="n">pos</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="n">k</span><span class="p">)</span> <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
</span><span class="line">   	  <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span>
</span><span class="line">   	  	<span class="c1">// printf(&quot;ans %d  %d %d\n&quot;, vis[pos],fg,pos);</span>
</span><span class="line">   	  	<span class="k">return</span> <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">!=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class="line">   	  <span class="p">}</span>
</span><span class="line">   	  <span class="n">vis</span><span class="p">[</span><span class="n">pos</span><span class="p">]</span> <span class="o">=</span> <span class="n">fg</span><span class="p">;</span>
</span><span class="line">   <span class="p">}</span>	
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">	<span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">str</span><span class="p">)){</span>
</span><span class="line">		<span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class="line">		<span class="n">memset</span><span class="p">(</span><span class="n">vis</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">vis</span><span class="p">));</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="mf">1e6</span><span class="o">+</span><span class="mi">200</span><span class="p">)){</span>
</span><span class="line">			<span class="n">printf</span><span class="p">(</span><span class="s">&quot;1</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">			<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">		<span class="n">ll</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">		<span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="n">len</span><span class="p">,</span><span class="n">mid</span><span class="p">;</span>
</span><span class="line">		<span class="k">if</span> <span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class="line">		<span class="p">{</span>
</span><span class="line">			<span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class="line">				<span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">				<span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="n">mid</span><span class="p">))</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class="line">				<span class="k">else</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">			<span class="p">}</span>
</span><span class="line">			<span class="n">res</span> <span class="o">+=</span> <span class="n">l</span><span class="p">;</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class="line">		<span class="p">{</span>
</span><span class="line">			<span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="n">len</span><span class="p">,</span><span class="n">mid</span><span class="p">;</span>
</span><span class="line">			<span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class="line">				<span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">				<span class="k">if</span><span class="p">(</span><span class="n">Judge</span><span class="p">(</span><span class="o">-</span><span class="n">mid</span><span class="p">))</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class="line">				<span class="k">else</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">			<span class="p">}</span>
</span><span class="line">			<span class="n">res</span> <span class="o">+=</span> <span class="n">l</span><span class="p">;</span>			
</span><span class="line">		<span class="p">}</span>
</span><span class="line">		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">res</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">	<span class="p">}</span>	
</span><span class="line">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/">http://www.UnkelTao.com/blog/2014/03/21/codeforces-round-number-237-div-2/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2048 改版游戏]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/"/>
    <updated>2014-03-16T06:10:16+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi</id>
    <content type="html"><![CDATA[<p>2048这个游戏简直停不下来，已经玩了各种各样的版本了，群里7K+ 大神说可以做这么一个版本，想了想反正也闲着，就Fork了源代码出来改了这样一个版本。</p>

<h3 id="section">游戏地址</h3>
<p><a href="http://www.unkeltao.com/2048/">点我来一发</a><br />
<a href="http://www.unkeltao.com/jiuzizhenyan/">另外一版本</a></p>

<!--more-->
<p>###操作说明
上下左右，合并分数块（任意两块都能合并），构成指定的分数就行<br />
如果3个数字大于目标数字，则失败。 </p>

<h3 id="section-1">游戏解图</h3>
<p><img src="http://unkeltao.qiniudn.com/2048/IMG_2048.png" alt="" /></p>

<h3 id="section-2">2048源码地址</h3>
<p><a href="https://github.com/UnkelTao/2048/tree/gh-pages">改版</a><br />
<a href="https://github.com/gabrielecirulli/2048">2048原版</a></p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/">http://www.UnkelTao.com/blog/2014/03/16/2048-gai-ban-you-xi/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kindle笔记转换]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/"/>
    <updated>2014-03-14T15:59:13+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan</id>
    <content type="html"><![CDATA[<p>使用kindle-format导出笔记，标注和剪贴文章。</p>

<h2 id="httpsgithubcomunkeltaokindle-note-format"><a href="https://github.com/UnkelTao/kindle-note-format">脚本地址</a></h2>

<h2 id="section">源文件</h2>
<p>源文件是在使用kindle阅读书籍的时候产生的一个记录用户的标注，笔记，剪贴和标签信息的文档，但是源文件在共享的时候格式往往需要修改，于是提供一个脚本，将其格式化。 
脚本参考于<a href="http://minejo.github.io/blog/2014/02/18/shi-yong-kindlebi-ji-lai-zuo-fortuneming-yan/">李超同学</a>的python脚本（没有学过python -_-），重构了ruby脚本，也算是我的的第一个脚本.<br />
源文件共有四种格式:
<!-- more --></p>

<h3 id="section-1">书签</h3>

<p>格式为：</p>

<pre><code>Book Title\r\n
- 我的书签 位置N | 已添加至 sometime\r\n
\r\n
\r\n
</code></pre>

<h3 id="section-2">标注</h3>
<p>格式为：</p>

<pre><code>Book Title\r\n
- 我的标注 位置N-N | 已添加至 sometime\r\n
\r\n
标注内容\r\n
</code></pre>

<h3 id="section-3">笔记</h3>
<p>笔记比较特殊，笔记是与标注连在一起的。表示该笔记是在该标注上完成的。</p>

<pre><code>Book Title\r\n
- 我的笔记 位置N | 已添加至 sometime\r\n
\r\n
笔记内容\r\n
==========\r\n
Book Title\r\n
- 我的标注 位置N-N | 已添加至 sometime\r\n
\r\n
标注内容\r\n
</code></pre>

<h3 id="section-4">剪贴文章</h3>

<pre><code>Book Title\r\n
- 剪贴文章 位置N | 已添加至 sometime\r\n
\r\n
剪贴文章内容\r\n
</code></pre>

<p>每一个摘录都用<code>==========\r\n</code>分割开。</p>

<h2 id="section-5">脚本使用</h2>

<h3 id="section-6">环境</h3>
<p>安装ruby</p>

<h3 id="section-7">运行</h3>
<blockquote>
  <p>ruby kindle-format [-param] [path-to-sourcefile]</p>
</blockquote>

<p>其中 </p>

<ul>
  <li>-param 有 “-h”,”-m” <br />
-h 表示查看帮助 <br />
-m 表示输出为markdown格式<br />
-mo 表示输出支持Octopress的markdown格式 </li>
  <li>path-to-sourcefile 为可选参数，默认为当前路径下的My Clippings.txt   </li>
</ul>

<h3 id="section-8">输出</h3>
<p>-m 会在当前目录下生成“kindle-markdown”目录，并在该目录下创建一个以运行时间为标题的markdown文件. </p>

<h2 id="section-9">待完成</h2>

<h3 id="octopress">支持Octopress的文档(已完成)</h3>

<h3 id="section-10">支持其他格式的文档</h3>

<h3 id="windowslinuxbug">windows与linux下的编码的Bug</h3>

<h2 id="section-11">参考</h2>
<ul>
  <li><a href="https://github.com/minejo/kindle-clips">kindle-clips</a>  </li>
  <li><a href="https://github.com/lxyu/kindle-clippings">lxyu-Kindle Clippings</a></li>
</ul>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/">http://www.UnkelTao.com/blog/2014/03/14/kindlebi-ji-zhuan-huan/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[北岛.失败之书 读书笔记]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/"/>
    <updated>2014-03-14T15:03:25+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<blockquote>
  <p>话说回来了，那时我们有梦，关于文学，关于爱情，关于穿越世界的旅行。如今我们深夜饮酒，杯子碰到一起，都是梦破碎的声音。  </p>
</blockquote>

<p>-At Kindle page:1201-1202 	 time: 2014-3-14 22:00:42 </p>

<hr />

<blockquote>
  <p>熊先生住得远，来去匆匆，难得有时间多聊聊。和他在一起很少喝酒，总是清茶一杯。茶带来的记忆就是和酒不同，清爽明澈，这也恰似熊先生的为人。熊先生很健谈，路数多变，或曲径通幽，或海阔天空。记得有一回他对我的诗委婉提出批评，我和他争了起来，且相当不敬，而他只是宽厚地笑笑。另一回他请我读一首近作，结尾是“如果天空不死”，他感叹说，这句让他想起他的青年时代。我当时不知道这联想是怎么来的，现在终有所悟。这诗句其实有种悖论式的紧张：说来年轻时的天空是不死的，但虚拟语气对此提出了质疑，那正是青春期的困惑。  </p>
</blockquote>

<p>-At Kindle page:1420-1425 	 time: 2014-3-13 0:34:59 </p>

<hr />

<!-- more -->
<blockquote>
  <p>查尔斯(J.B.Chiles)上校为什么决定迁移到加州来？对我来说还是个谜。也许这是天性，有人像家雀儿，不愿意挪窝；有人像候鸟，永远在路上。自一八四一到一八五四年，在老家密苏里和加州的萨克拉门托(Sacramento)河谷之间，上校七次横跨大陆。这么折腾，胃准有毛病。他极瘦，鹰眼勾鼻，像林肯总统。他的祖先瓦尔特(Walter Chiles)也是只候鸟，一六三八年驾多桅帆船从英格兰来到佛吉尼亚。  </p>
</blockquote>

<p>-At Kindle page:1596-1599 	 time: 2014-3-13 0:36:28 </p>

<hr />

<blockquote>
  <p>那天，午觉醒来，大雨撼动屋顶。看表，三点十分，田田正要下课。开车到学校，找不到停车位，开紧急灯，打伞冲进去。学生们正向外涌，一把把伞迎风张开。我到处找田田那件红绒衣。男孩子五大三粗，女孩子叽叽喳喳。我逆流而行。很快，人去楼空。我转身，雨停，天空变得明朗。  </p>
</blockquote>

<p>-At Kindle page:1744-1746 	 time: 2014-3-13 0:37:33 </p>

<hr />

<blockquote>
  <p>Note:<strong>人总会想的太多</strong>
&gt;拦了辆出租车，司机是个土耳其人。他一路大叫大喊：“……这世界就要玩完了。你还没听说？南北极正他妈融化。哈哈，水位上升，俄国、欧洲，就要被淹没了。”他边说边掏出个扁玻璃瓶往嘴里灌。天哪，但愿不是酒。“你从哪儿来？中国？中国跑不了，我们土耳其也跑不了，统统喂鱼。上帝？上帝也没用。别着急，纽约头一个。哈哈，这些大楼就要沉到海底下啦……”  </p>
</blockquote>

<p>-At Kindle page:1845-1849 	 time: 2014-3-13 0:39:11 </p>

<hr />

<blockquote>
  <p>写到这儿，我不禁打了个冷颤。郊区生活真的有那么可怕吗？我想郊区老鼠至少文质彬彬。早上出门散步，一路上人们都招手致意，“哈罗”、“早安”没完没了，这总比城里老鼠横眉冷对甚至拔刀相向好多了。据说一个乡下孩子头一次到纽约，下了长途车跟过往行人挨个打招呼，可没一个人理他，没走多远他只好放弃了。也许在大都市，人们对孤独有更彻底的领悟，用不着装模作样。要不贾克梅蒂的雕塑——那些细得像竹竿一样的人，其背景正是大都市呢。  </p>
</blockquote>

<p>-At Kindle page:1971-1975 	 time: 2014-3-13 19:47:49 </p>

<hr />

<blockquote>
  <p>其实孤独并非与寂静对应，它有自己的声音，这声音在纽约则被无限放大了。首先是那些警车救护车救火车，为引起足够的注意，不断提高音量，高入云霄。而那些单元里快憋疯了的狗，好不容易放到街上，为了向另一只狗致敬，非得用整个腹腔吼叫。轮到纽约人，要想再表达点什么，得多不屈不挠才行——他们扯直嗓门，说到一半被警笛打断，张着嘴，只好把话咽了回去。  </p>
</blockquote>

<p>-At Kindle page:3502-3506 	 time: 2014-3-14 16:49:48 </p>

<hr />

<blockquote>
  <p>选择的余地。F又提到白金尺。他说，人的很多努力是非实用的，但有意义。他的话有道理。但我接着说，这种死亡是被美国媒体无限夸大了，成为民族国家神话的一部分。这样做，起码是不尊重死者应享有的宁静。  </p>
</blockquote>

<p>-At Kindle page:3679-3681 	 time: 2014-3-14 16:58:32 </p>

<hr />

<blockquote>
  <p>戴维斯人民公社成立于若干年前，这和合作开荒发展农业或与推翻资产阶级政权的集体谋反都没关系，而是一些住在戴维斯的中国人为了巩固友谊消磨时光而凑成的松散团体，自认为“人民公社”。主要活动是吃中国饭喝白干嗑瓜子闲聊熬夜打牌钻桌子。X是专家兼美术设计，憨厚正直，助人为乐。他们两口子好客，加上房子大，顺理成章成了公社的据点。每到周末大家先打电话，破门而入。满屋欢声笑语，通宵达旦。  </p>
</blockquote>

<p>-At Kindle page:3684-3688 	 time: 2014-3-14 20:21:14 </p>

<hr />

<h4 id="section">断断续续的还是把这本书读完了</h4>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/">http://www.UnkelTao.com/blog/2014/03/14/bei-dao-shi-bai-zhi-shu-du-shu-bi-ji/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces Round #235 (Div. 2) ]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/"/>
    <updated>2014-03-11T07:02:19+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/11/codeforce-235</id>
    <content type="html"><![CDATA[<p>好久没做CF了，觉得再不做估计以后笔试都过不鸟，于是还得经常做一做。 </p>

<p>CF的回滚对我木有影响阿，我已经好久没做了似乎。 </p>

<p>这次的DIV2似乎比以前的简单一点。 </p>

<h2 id="a-vanya-and-cardshttpcodeforcescomcontest401problema"><a href="http://codeforces.com/contest/401/problem/A">A. Vanya and Cards</a></h2>
<p>送分,大概给你一堆数，问你最少还需要几个绝对值不超过X的数能够让他们的和为0.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">n</span><span class="p">,</span><span class="n">x</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class="line"><span class="n">sum</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span><span class="line"><span class="nb">p</span> <span class="p">(</span><span class="n">sum</span><span class="o">.</span><span class="n">abs</span> <span class="o">+</span> <span class="n">x</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">x</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<h2 id="b-sereja-and-contestshttpcodeforcescomcontest401problemb"><a href="http://codeforces.com/contest/401/problem/B">B. Sereja and Contests</a></h2>
<p>模拟题</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">n</span><span class="p">,</span><span class="n">k</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class="line"><span class="n">A</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>  <span class="mi">0</span><span class="p">}</span>
</span><span class="line"><span class="n">k</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span>
</span><span class="line">   <span class="n">c</span><span class="p">,</span><span class="n">d1</span><span class="p">,</span><span class="n">d2</span> <span class="o">=</span>  <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class="line">   <span class="n">A</span><span class="o">[</span><span class="n">d1</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">   <span class="k">if</span> <span class="n">d2</span> <span class="o">!=</span> <span class="kp">nil</span>
</span><span class="line">     <span class="n">A</span><span class="o">[</span><span class="n">d2</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">mx</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="n">mi</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="n">cur</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">   <span class="k">if</span> <span class="n">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class="line">        <span class="n">cur</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">   <span class="k">else</span>
</span><span class="line">       <span class="n">mx</span> <span class="o">+=</span> <span class="n">cur</span>
</span><span class="line">       <span class="n">mi</span> <span class="o">+=</span> <span class="p">(</span><span class="n">cur</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class="line">       <span class="n">cur</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">   <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">mx</span> <span class="o">+=</span> <span class="n">cur</span>
</span><span class="line"><span class="n">mi</span> <span class="o">+=</span> <span class="p">(</span><span class="n">cur</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">mi</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">mx</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="c-teamhttpcodeforcescomcontest401problemc"><a href="http://codeforces.com/contest/401/problem/C">C. Team</a></h2>
<p>也是模拟题，给你n个1，m个0，让你给出一种排列，不能有3个1连在一起，不能有两个0连在一起，给出任意一种方案即可，不能则输出-1</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">m</span><span class="p">,</span><span class="n">n</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>  <span class="n">e</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span>
</span><span class="line"><span class="k">if</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">m</span>
</span><span class="line">    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class="line">    <span class="nb">exit</span>
</span><span class="line"><span class="k">elsif</span> <span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span> <span class="o">&lt;</span> <span class="n">n</span>
</span><span class="line">    <span class="nb">p</span> <span class="o">-</span><span class="mi">1</span>
</span><span class="line">    <span class="nb">exit</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="n">m</span>
</span><span class="line">    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">printf</span> <span class="s2">&quot;10&quot;</span> <span class="p">}</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class="line"><span class="k">elsif</span> <span class="n">m</span> <span class="o">==</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span>
</span><span class="line">    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;01&quot;</span><span class="p">}</span>
</span><span class="line">    <span class="nb">puts</span> <span class="mi">0</span>
</span><span class="line"><span class="k">elsif</span> <span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span> <span class="o">==</span> <span class="n">n</span>
</span><span class="line">    <span class="n">m</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">printf</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;11&quot;</span>
</span><span class="line"><span class="k">elsif</span> <span class="n">m</span><span class="o">*</span><span class="mi">2</span> <span class="o">==</span> <span class="n">n</span>
</span><span class="line">    <span class="n">m</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">    <span class="n">k</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">m</span>
</span><span class="line">    <span class="p">(</span><span class="n">k</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;110&quot;</span><span class="p">}</span>
</span><span class="line">    <span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="n">k</span><span class="p">)</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;10&quot;</span><span class="p">}</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;1&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="d-roman-and-numbershttpcodeforcescomcontest401problemd"><a href="http://codeforces.com/contest/401/problem/D">D. Roman and Numbers</a></h2>
<p>暴力+状态压缩。 
题意：给你一个不超过18位的数n,和不超过100的m,将n进行重排(改变里面的位置，当然0不能排在最前面)，问有多少个数是m的倍数。 
ruby似乎跑的很慢，不幸TLE的，C++可以过 </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">n</span><span class="p">,</span><span class="n">m</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp!</span><span class="o">.</span><span class="n">split</span>
</span><span class="line"><span class="n">m</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">len</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="n">size</span>
</span><span class="line"><span class="n">dp</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">m</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span>
</span><span class="line"><span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="n">m</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class="line">        <span class="n">tp</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">        <span class="n">len</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="o">|</span>
</span><span class="line">            <span class="n">t</span> <span class="o">=</span> <span class="n">n</span><span class="o">[</span><span class="n">k</span><span class="o">].</span><span class="n">chr</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line">            <span class="k">if</span> <span class="n">i</span><span class="o">&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">k</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">||</span> <span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">t</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="n">tp</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">!=</span><span class="mi">0</span>
</span><span class="line">                <span class="k">next</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">            <span class="n">tp</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">|</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">k</span><span class="p">)</span><span class="o">][</span><span class="p">(</span><span class="n">j</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">t</span><span class="p">)</span><span class="o">%</span><span class="n">m</span><span class="o">]</span> <span class="o">+=</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="nb">p</span> <span class="n">dp</span><span class="o">[</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">len</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="e-olympic-gameshttpcodeforcescomcontest401probleme"><a href="http://codeforces.com/contest/401/problem/E">E. Olympic Games</a></h2>
<p>略难，暂时不会</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/">http://www.UnkelTao.com/blog/2014/03/11/codeforce-235/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Hustoj添加ruby支持]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/"/>
    <updated>2014-03-02T14:33:16+00:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj</id>
    <content type="html"><![CDATA[<p>虽然已经不是再搞ACM了，但是算法偶尔还是要练习一下写代码，然后最近学习ruby中，打算用ruby来写写ACM题目也算熟悉ruby，免得不用就忘记了，记得Hustoj是可以支持Ruby的，于是就在我们学校的训练Oj上提交了A+B的Ruby代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">readlines</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class="line">	<span class="nb">p</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>于是华丽的给了我一个WA~~~正在想怎么可能，想起来服务器上没有装ruby，于是远程到7509的服务器上再ssh到训练oj的服务器(只能内网访问，ping不到外网地址)，将ruby装上。</p>

<p>然后就开始了无止境的RE生涯，简直无情，各种call禁止：
<!--more-->
<img src="http://unkeltao.qiniudn.com/img/IMG_ruby_1.png" alt="" /></p>

<p>在hustoj的wiki页面上，终于找到了参考的添加其他<a href="http://code.google.com/p/hustoj/wiki/AddProgrammingLanguage">语言支持的方法</a></p>

<p>其实主要的就是找到所有的call编号，放到数组里面去就行了，ruby对应了两个数组</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="rb"><span class="line"><span class="c1">#保存为Main.rb</span>
</span><span class="line"><span class="nb">readlines</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class="line">	<span class="nb">p</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="n">x</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">inject</span><span class="p">{</span><span class="o">|</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="o">|</span> <span class="n">y</span> <span class="o">+=</span> <span class="n">x</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>terminal中运行如下命令。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">strace -ff ruby Main.rb 2&gt;&amp;1|awk -F<span class="se">\(</span> <span class="s1">&#39;{print $1}&#39;</span>|sort -u
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后会产生,以access开头，write结束（也有可能是其他）的一些列标志如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">access
</span><span class="line">xxx
</span><span class="line">xxx
</span><span class="line">write
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>把这些标志放入如下过程，结尾是0，对应RC数组其他值为-1，结尾为0.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="kt">int</span> <span class="n">LANG_RV</span><span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="n">SYS_access</span><span class="p">,</span><span class="n">SYS_write</span><span class="p">.....,</span><span class="mi">0</span><span class="p">};</span>
</span><span class="line"><span class="kt">int</span> <span class="n">LANG_RC</span><span class="p">[</span><span class="mi">256</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,......,</span><span class="mi">0</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>改好之后切换到对应目录下，重新make</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nb">cd</span> ~/hustoj-read-only/core/
</span><span class="line">./make.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下来就是体力活了，找到提交的runid，rejudge下，看看是不是AC了，可能还会接着RE，如果RE，就将新的callid(是一个数字)加入到数组中，也就是RV数组中，RC数组值为-1就行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo judge_client 2028 0 /home/judge/ debug Y
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>直到返回值不是10，然后再去页面提交，这下应该就可以了~~~（当然我中间还做了一堆傻事，这儿就不提了）
偶尔可以在训练oj上做做练习了，免得以后笔试说不定都跪。</p>

<p>最终结果：
<img src="http://unkeltao.qiniudn.com/img/IMG_ruby_2.png" alt="" /></p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/">http://www.UnkelTao.com/blog/2014/03/02/ruby-for-hustoj/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Latex 绘制跨页表格]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/24/latex-table/"/>
    <updated>2014-02-24T11:16:26+00:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/24/latex-table</id>
    <content type="html"><![CDATA[<p>使用latex绘制表格或多或少都会遇到这样的问题，一个表格过长超过一页应该如何处理，latex提供了一些宏包，如longtable和supertabular;这里介绍如何用supertabular绘制跨页表格。
<!--more-->
##标题命令</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>宏包相关命令</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line"><span class="k">\bottomcaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class="line">	 底部标题命令，指定在表格的下方生成表格标题。	
</span><span class="line"><span class="k">\tablecaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class="line">	 表格标题命令，生成在上方，作用于<span class="k">\caption</span>类似	
</span><span class="line"><span class="k">\tablefirsthead</span><span class="nb">{</span>首页列标题<span class="nb">}</span>
</span><span class="line">	 用于设置第一页表格的各列标题 	
</span><span class="line"><span class="k">\tablehead</span><span class="nb">{</span>续页列标题<span class="nb">}</span>
</span><span class="line">	 用于设置续页列标题，可以含有多个表格行 	
</span><span class="line"><span class="k">\tablelasttail</span><span class="nb">{</span>结束表示<span class="nb">}</span>
</span><span class="line">	 用于表格结束时候显示的标示。 	
</span><span class="line"><span class="k">\tabletail</span><span class="nb">{</span>分页标识<span class="nb">}</span>
</span><span class="line">	 用于设置分页前，所显示的分页标识，如&quot;接下页&quot;。	
</span><span class="line"><span class="k">\topcaption</span><span class="na">[目录标题]</span><span class="nb">{</span>表格标题<span class="nb">}</span>
</span><span class="line">	 顶部标题设置，指定表格上方生成表格标题。 	
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再和其他一些宏包使用，便可以轻松的画出表格了。  </p>

<h2 id="section">参考样例</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>宏包</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line"><span class="c">%涉及宏包</span>
</span><span class="line"><span class="k">\usepackage</span><span class="nb">{</span>supertabular<span class="nb">}</span> <span class="c">%supertabular表格宏包</span>
</span><span class="line"><span class="k">\usepackage</span><span class="nb">{</span>colortbl<span class="nb">}</span> <span class="c">%彩色表格宏包</span>
</span><span class="line"><span class="k">\usepackage</span><span class="nb">{</span>booktabs<span class="nb">}</span> <span class="c">%表格线宏包</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">参考代码</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line"><span class="c">%跨页表格</span>
</span><span class="line"><span class="k">\begin</span><span class="nb">{</span>center<span class="nb">}</span> <span class="k">\tablecaption</span><span class="nb">{</span>Linux 系统中的目录 <span class="k">\label</span><span class="nb">{</span>tab:super<span class="nb">}}</span>
</span><span class="line"><span class="k">\tablefirsthead</span><span class="nb">{</span>
</span><span class="line"><span class="k">\rowcolor</span><span class="na">[gray]</span><span class="nb">{</span>0.8<span class="nb">}</span>
</span><span class="line"><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>l<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>目录<span class="nb">}}</span> <span class="nb">&amp;</span>
</span><span class="line"><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>注解<span class="nb">}}</span> <span class="k">\\</span> <span class="nb">}</span>
</span><span class="line"><span class="k">\tablehead</span><span class="nb">{</span><span class="k">\multicolumn</span><span class="nb">{</span>2<span class="nb">}{</span>c<span class="nb">}{</span>
</span><span class="line"><span class="k">\small</span> 表 <span class="k">\ref</span><span class="nb">{</span>tab:super<span class="nb">}</span> (续) <span class="nb">}</span> <span class="k">\\</span>
</span><span class="line"><span class="k">\rowcolor</span><span class="na">[gray]</span><span class="nb">{</span>0.8<span class="nb">}</span>
</span><span class="line"><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>l<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>目录<span class="nb">}}</span> <span class="nb">&amp;</span>
</span><span class="line"><span class="k">\multicolumn</span><span class="nb">{</span>1<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\textbf</span><span class="nb">{</span>注解<span class="nb">}}</span> <span class="k">\\</span><span class="nb">}</span>
</span><span class="line"><span class="k">\tabletail</span><span class="nb">{</span><span class="k">\bottomrule</span>
</span><span class="line"><span class="k">\multicolumn</span><span class="nb">{</span>2<span class="nb">}{</span>c<span class="nb">}{</span><span class="k">\small</span> 接下页<span class="nb">}</span> <span class="k">\\</span><span class="nb">}</span>
</span><span class="line"><span class="k">\tablelasttail</span><span class="nb">{</span><span class="k">\bottomrule</span><span class="nb">}</span>
</span><span class="line">
</span><span class="line"><span class="k">\begin</span><span class="nb">{</span>supertabular<span class="nb">}{</span>p<span class="nb">{</span>2.cm<span class="nb">}</span>p<span class="nb">{</span>13cm<span class="nb">}}</span>
</span><span class="line">
</span><span class="line">/	<span class="nb">&amp;</span> 根目录，万物起源。<span class="k">\\</span>
</span><span class="line"><span class="k">\midrule</span>
</span><span class="line">/bin <span class="nb">&amp;</span> 包含系统启动和运行所必须的二进制程序。<span class="k">\\</span>
</span><span class="line"><span class="c">% 以下都是类似行数据，故省略</span>
</span><span class="line">
</span><span class="line"><span class="k">\end</span><span class="nb">{</span>supertabular<span class="nb">}</span>
</span><span class="line"><span class="k">\end</span><span class="nb">{</span>center<span class="nb">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">效果图</h3>

<p>(太长，缩小看整体效果)  </p>

<p><img src="http://unkeltao.qiniudn.com/img/001.png" alt="" /> </p>

<p>(标题)  </p>

<p><img src="http://unkeltao.qiniudn.com/img/002.png" alt="" /> </p>

<p>(跨页表示)  </p>

<p><img src="http://unkeltao.qiniudn.com/img/003.png" alt="" /> </p>

<p>(续页标题)  </p>

<p><img src="http://unkeltao.qiniudn.com/img/004.png" alt="" /></p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/02/24/latex-table/">http://www.UnkelTao.com/blog/2014/02/24/latex-table/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用Sublime text 编写 Ctex]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/"/>
    <updated>2014-02-20T08:29:21+00:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex</id>
    <content type="html"><![CDATA[<p>写论文必不可少的工具当然是 Latex，但是WinEdt的界面实在是不喜欢，钟爱Sublime的当然想在Sublime上进行Latex的书写，一找，还真找到插件了<strong><a href="https://github.com/SublimeText/LaTeXTools/blob/master/README.markdown">LatexTools</a></strong>。
<!--more--></p>

<h3 id="section">安装与配置</h3>

<p>安装也就是Sublime Text的插件安装，这个很easy。<br />
配置则参考于<a href="git@github.com:LiamHuang0205/liamhuang0205.github.io.git">这篇文章</a>,讲述的很详细，我就不重复了。<br />
与之不同的是我并没有安装Texlive,安装的是Ctex，但是操作是一样的。 </p>

<p>主要的问题是注意Sublime的中文问题，我是在tex中指明UTF8编码，并且使用xelatex进行编译。</p>

<p><img src="http://unkeltao.qiniudn.com/IMG_latex.png" alt="" /></p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/">http://www.UnkelTao.com/blog/2014/02/20/sublime-text-for-ctex/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从 Wordpress 搬迁到 Octopress]]></title>
    <link href="http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/"/>
    <updated>2014-02-18T13:48:51+00:00</updated>
    <id>http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>终于还是从 Wordpress 搬迁到 Octopress 上来了，搬迁相对还是挺容易了，毕竟以前还是接触过一些ruby，加上<a href="http://octopress.org/docs/setup/" title="官方文档">官方文档</a> ，所以环境什么的搭建的比较顺利。
<!--more-->
大概的步骤也就这些：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">安装相关环境：Ruby，Devkit,Python(代码高亮)
</span><span class="line">参照 Octopress 官方文档进行操作
</span><span class="line">下载对应主题并修改
</span><span class="line">添加 Disqus 评论
</span><span class="line">绑定域名暂时没有做（其实很简单，但是域名暂有其他作用）</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>而且本身Wordpress并没有使用太久，所以文章很少，就手动复制了两篇过来，其他觉得没有必要保留的就抛弃了。比较麻烦的是以前使用过很多个不同类型的博客，里面的搬迁过来手动的写Markdown还是挺麻烦的，而且数量也很大，只能挑选一些放上来了。</p>

<p>以后的博客就是这个了，试用了一下还可以哟。</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/">http://www.UnkelTao.com/blog/2014/02/18/wordpress-to-octopress/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemSQL start]]></title>
    <link href="http://www.UnkelTao.com/blog/2013/08/04/memsql-start/"/>
    <updated>2013-08-04T13:13:34+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2013/08/04/memsql-start</id>
    <content type="html"><![CDATA[<p>【测试代码】</p>

<p>昨晚的CF略晚~~而且提示说div2的少年们，你们很可能会爆0~~~</p>

<p>于是赤裸裸的去了，然后悲催的爆0了</p>

<p>只看了A、B两题~~A题觉得挺简单的，敲了个2分交上去过了Pass，想了想B觉得没有想法就睡觉了。。。
<!--more-->
早上一起洗个澡吃完早餐一看~~WA了~~然后看了下代码，我去，尼玛有一行特判输出没改，直接注释掉没用的特判就过了</p>

<p>说说A题吧，题意大概是一串字符串，求一个长度为k的子串，是的用最少的该子串来构成源串，你可以使用子串的其中任意个字符按照你想要的方式排序拼接,输出需要的最少个数和该k子串。</p>

<p>解法：数据那么弱，统计下源串每个字母的个数，直接暴力匹配从1个到(n+k-1)/k个能否拼成源串就好,写的2分,也过了.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cmath&gt;</span>
</span><span class="line"><span class="cp">#include &lt;climits&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cctype&gt;</span>
</span><span class="line"><span class="cp">#include &lt;ctime&gt;</span>
</span><span class="line"><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include &lt;queue&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="cp">#include &lt;set&gt;</span>
</span><span class="line"><span class="cp">#include &lt;map&gt;</span>
</span><span class="line"><span class="cp">#include &lt;stack&gt;</span>
</span><span class="line"><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class="line"><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class="line"><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class="line"><span class="cp">#define PB push_back</span>
</span><span class="line"><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class="line"><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class="line"><span class="cp">#define pi acos(-1)</span>
</span><span class="line"><span class="cp">#define eps 0.00000001</span>
</span><span class="line"><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class="line"><span class="cp">#define MaxN  1000000</span>
</span><span class="line"><span class="cp">#define mod 10e+7</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define typed int</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line"><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line"><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">char</span> <span class="n">s</span><span class="p">[</span><span class="mi">1100</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">su</span><span class="p">[</span><span class="mi">27</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">jd</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class="line"><span class="err">   </span><span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">){</span>
</span><span class="line"><span class="err">       </span><span class="n">cnt</span><span class="o">+=</span><span class="p">(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">n</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="p">}</span>
</span><span class="line"><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">cnt</span><span class="o">&lt;=</span><span class="n">k</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="n">pt</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class="line"><span class="err"> </span><span class="c1">//  cout&lt;&lt;&quot;pt&quot;&lt;&lt;endl;   </span>
</span><span class="line"><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">n</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="err">   </span>
</span><span class="line"><span class="err">   </span><span class="n">string</span> <span class="n">ss</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">){</span>
</span><span class="line"><span class="err">      </span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">n</span><span class="p">){</span> <span class="n">ss</span><span class="o">+=</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="sc">&#39;a&#39;</span><span class="p">);</span><span class="n">cnt</span><span class="o">++</span><span class="p">;}</span>
</span><span class="line"><span class="err">   </span><span class="p">}</span>
</span><span class="line"><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ss</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">k</span><span class="o">-</span><span class="n">cnt</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="sc">&#39;a&#39;</span><span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="n">bit</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
</span><span class="line"><span class="err">     </span><span class="k">while</span><span class="p">(</span><span class="n">l</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class="line"><span class="err">     </span><span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="kt">int</span> <span class="n">kk</span><span class="o">=</span><span class="n">jd</span><span class="p">(</span><span class="n">mid</span><span class="p">);</span>
</span><span class="line"><span class="err">       </span><span class="k">if</span><span class="p">(</span><span class="n">kk</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="n">r</span><span class="o">=</span><span class="n">mid</span><span class="p">;</span>
</span><span class="line"><span class="err">       </span><span class="k">else</span> <span class="n">l</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="err">   </span>
</span><span class="line"><span class="err">     </span><span class="p">}</span>
</span><span class="line"><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">l</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="err"> </span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line"><span class="err">   </span><span class="k">while</span><span class="p">(</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="o">&gt;&gt;</span><span class="n">k</span><span class="p">){</span>
</span><span class="line"><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">)</span> <span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">))</span><span class="n">su</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="kt">int</span> <span class="n">ma</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">26</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span><span class="n">ma</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">ma</span><span class="p">,</span><span class="n">su</span><span class="p">[</span><span class="n">i</span><span class="p">]);}</span>
</span><span class="line"><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">&lt;</span><span class="n">cnt</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;-</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="k">else</span><span class="p">{</span>
</span><span class="line"><span class="err">       </span>
</span><span class="line"><span class="err">         </span>
</span><span class="line"><span class="err">        </span><span class="c1">//bit((strlen(s)+k-1)/k,ma+1); //2分 </span>
</span><span class="line"><span class="err">        </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">)){</span><span class="err">  </span> <span class="c1">//暴力 </span>
</span><span class="line"><span class="err">           </span><span class="k">if</span><span class="p">(</span><span class="n">jd</span><span class="p">(</span><span class="n">i</span><span class="p">)){</span><span class="n">pt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span><span class="k">break</span><span class="p">;}</span>
</span><span class="line"><span class="err">        </span><span class="p">}</span>
</span><span class="line"><span class="err">     </span><span class="p">}</span>
</span><span class="line"><span class="err">   </span><span class="p">}</span><span class="err">       </span>
</span><span class="line"><span class="err">   </span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>B题一看最长回文子序列，能想到的方法就是2维DP出LCS~~可是源串长度为50000，2维DP肯定挂~~早上起来，顺带看了一眼，发现一个条件，回文最长为100（大于100输出100的就行）,这个想了下，就好搞了.一共26字母，说明在2600个字母序列里面肯定会产生回文长度至少是100的。。</p>

<p>这样超过长度2600的就可以直接DP前2600个字母就行了~~~然后就是模板题了~~~真是弱爆了~~</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cmath&gt;</span>
</span><span class="line"><span class="cp">#include &lt;climits&gt;</span>
</span><span class="line"><span class="cp">#include &lt;cctype&gt;</span>
</span><span class="line"><span class="cp">#include &lt;ctime&gt;</span>
</span><span class="line"><span class="err"> </span>
</span><span class="line"><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class="line"><span class="cp">#include &lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include &lt;queue&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="cp">#include &lt;set&gt;</span>
</span><span class="line"><span class="cp">#include &lt;map&gt;</span>
</span><span class="line"><span class="cp">#include &lt;stack&gt;</span>
</span><span class="line"><span class="err"> </span>
</span><span class="line"><span class="cp">#define SQR(x) ((x)*(x))</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="cp">#define repd(i,n)  for(int i=1;i&lt;=(n);++i)</span>
</span><span class="line"><span class="cp">#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)</span>
</span><span class="line"><span class="cp">#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)</span>
</span><span class="line"><span class="cp">#define PB push_back</span>
</span><span class="line"><span class="cp">#define MP(A, B) make_pair(A, B)</span>
</span><span class="line"><span class="cp">#define pow2(n) (1&lt;&lt;(n))</span>
</span><span class="line"><span class="cp">#define pi acos(-1)</span>
</span><span class="line"><span class="cp">#define eps 0.00000001</span>
</span><span class="line"><span class="cp">#define lg(n) log10((n)*1.0)</span>
</span><span class="line"><span class="cp">#define MaxN  50000</span>
</span><span class="line"><span class="cp">#define mod 10e+7</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define typed int</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">data</span><span class="p">(){</span>
</span><span class="line"><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class="line"><span class="err">   </span><span class="n">freopen</span><span class="p">(</span><span class="s">&quot;data.out&quot;</span><span class="p">,</span><span class="s">&quot;w&quot;</span><span class="p">,</span><span class="n">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">dp</span><span class="p">[</span><span class="mi">2620</span><span class="p">][</span><span class="mi">2620</span><span class="p">];</span>
</span><span class="line"><span class="kt">char</span> <span class="n">c</span><span class="p">[</span><span class="n">MaxN</span><span class="o">+</span><span class="mi">100</span><span class="p">],</span><span class="n">a</span><span class="p">[</span><span class="mi">2620</span><span class="p">],</span><span class="n">b</span><span class="p">[</span><span class="mi">2620</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">k</span><span class="p">[</span><span class="mi">2620</span><span class="p">][</span><span class="mi">2620</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">cnt</span><span class="p">[</span><span class="mi">27</span><span class="p">];</span>
</span><span class="line"><span class="kt">void</span> <span class="n">LCS</span><span class="p">(</span><span class="kt">int</span> <span class="n">len</span><span class="p">){</span>
</span><span class="line"><span class="err">     </span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
</span><span class="line"><span class="err">      </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span>
</span><span class="line"><span class="err">      </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class="line"><span class="err">        </span><span class="n">repd</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class="line"><span class="err">        </span><span class="p">{</span>
</span><span class="line"><span class="err">            </span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span>
</span><span class="line"><span class="err">                </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">                </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="o">+</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="err"> </span>
</span><span class="line"><span class="err">            </span><span class="p">}</span>
</span><span class="line"><span class="err">            </span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]){</span>
</span><span class="line"><span class="err">                </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="err">                </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class="line"><span class="err">            </span><span class="p">}</span>
</span><span class="line"><span class="err">            </span><span class="k">else</span><span class="p">{</span>
</span><span class="line"><span class="err">                 </span><span class="n">k</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="err">                 </span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class="line"><span class="err">            </span><span class="p">}</span><span class="err">        </span>
</span><span class="line"><span class="err">        </span><span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">char</span> <span class="n">st</span><span class="p">[</span><span class="mi">2610</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
</span><span class="line"><span class="kt">void</span> <span class="n">pt</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class="line"><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="o">||</span><span class="n">m</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="p">;</span>
</span><span class="line"><span class="err">   </span><span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class="line"><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="err">     </span><span class="n">st</span><span class="p">[</span><span class="n">num</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">[</span><span class="n">m</span><span class="p">];</span>
</span><span class="line"><span class="err">   </span><span class="p">}</span>
</span><span class="line"><span class="err">   </span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span> <span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
</span><span class="line"><span class="err">   </span><span class="k">else</span> <span class="n">pt</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="err"> </span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line"><span class="err">    </span><span class="c1">//data();</span>
</span><span class="line"><span class="err">    </span><span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)){</span><span class="err">                           </span>
</span><span class="line"><span class="err">     </span><span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">strlen</span><span class="p">(</span><span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="err">     </span><span class="n">num</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class="line"><span class="err">         </span><span class="n">cnt1</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="err">         </span><span class="k">if</span><span class="p">(</span><span class="n">cnt1</span><span class="o">-</span><span class="sc">&#39;a&#39;</span><span class="p">]</span><span class="o">&gt;=</span><span class="mi">100</span><span class="p">){</span>
</span><span class="line"><span class="err">           </span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line"><span class="err">           </span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span>
</span><span class="line"><span class="err">         </span><span class="p">}</span>
</span><span class="line"><span class="err">     </span><span class="p">}</span>
</span><span class="line"><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fg</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">len</span><span class="o">&gt;</span><span class="mi">2602</span><span class="p">)</span> <span class="n">len</span><span class="o">=</span><span class="mi">2602</span><span class="p">;</span>
</span><span class="line"><span class="err">     </span><span class="n">repd</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">len</span><span class="p">){</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">b</span><span class="p">[</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];}</span>
</span><span class="line"><span class="err">     </span><span class="n">LCS</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class="line"><span class="err">     </span><span class="n">pt</span><span class="p">(</span><span class="n">len</span><span class="p">,</span><span class="n">len</span><span class="p">);</span>
</span><span class="line"><span class="err">     </span><span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">st</span><span class="p">);</span>
</span><span class="line"><span class="err">     </span><span class="k">else</span><span class="p">{</span>
</span><span class="line"><span class="err">       </span><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">st</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">reps</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">49</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">st</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span><span class="err"> </span>
</span><span class="line"><span class="err">     </span><span class="p">}</span>
</span><span class="line"><span class="err">     </span>
</span><span class="line"><span class="err">    </span><span class="p">}</span><span class="err">          </span>
</span><span class="line"><span class="err">   </span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>（效果似乎一般）</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2013/08/04/memsql-start/">http://www.UnkelTao.com/blog/2013/08/04/memsql-start/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The 9th SWJTU Collegiate Programming Contest Qualification Round]]></title>
    <link href="http://www.UnkelTao.com/blog/2013/04/13/the-9th-swjtu-collegiate-programming-contest-qualification-round/"/>
    <updated>2013-04-13T23:16:28+01:00</updated>
    <id>http://www.UnkelTao.com/blog/2013/04/13/the-9th-swjtu-collegiate-programming-contest-qualification-round</id>
    <content type="html"><![CDATA[<p><strong>比赛链接：</strong>  <a href="http://acm.swjtu.edu.cn/JudgeOnline/showcontest?contest_id=1135" title="第九届ACM校赛资格赛">第九届ACM校赛资格赛</a>  </p>

<p>资格赛嘛，本着大家熟悉环境增强自信心的原则~10道题没有太难的题目~适合新手练习.本次比赛D、E、F是我出的，本着简单的想法却没想到坑了一部分人，其中E题的数据再随机的时候超出了题目描述的范围造成一些人AC的程序WA了，在此表示抱歉,致以诚挚的歉意。下面给出我对着10道题的解法，可能我的解法并不是完全正确恰好过了数据而已，欢迎大家指正。</p>

<!--more-->
<p>##A <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1982">A+B</a>
完全熟悉OJ环境的题目,上面都有标程,第一次接触ACM的需要知道怎么多组输入.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
</span><span class="line"><span class="k">while</span><span class="p">(</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d %d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">)</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="b-1httpacmswjtueducnjudgeonlineshowproblemproblemid1986">B <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1986">猴子爬楼梯1</a></h2>
<p>因为数据不大，可以有3中解法:  </p>

<ul>
  <li>
    <p>原理：看 n能被被整除<code>GCD(a,b)</code>整除，推论过程略,详见大牛(<a href="http://blog.csdn.net/openspirit/article/details/8797246">大牛题解</a>)。	</p>
  </li>
  <li>
    <p>模拟法：我们可以确定只要大于 <code>a+b-1</code>的数 我们都可以通过加上a来得到,在+a ,-b的过程中，通过模拟产生出<code>(1，a+b-1)</code>所有的可能,把n对a取模既可以。	</p>
  </li>
  <li>
    <p>搜索或者暴力,记忆化搜索，也就1000个点而已,代码未写,参见C题。	</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="c1">//模拟法</span>
</span><span class="line"><span class="kt">int</span> <span class="n">s</span><span class="p">[</span><span class="mi">10000</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">cnt</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">cur</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="n">memset</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">s</span><span class="p">));</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="n">s</span><span class="p">[</span><span class="n">cur</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">tmp</span><span class="p">;</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">&gt;=</span><span class="n">b</span><span class="p">)</span><span class="n">tmp</span><span class="o">-=</span><span class="n">b</span><span class="p">;</span>
</span><span class="line">        <span class="k">else</span> <span class="n">tmp</span><span class="o">+=</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="n">cur</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="c-2httpacmswjtueducnjudgeonlineshowproblemproblemid1990">C <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1990">猴子爬楼梯2</a></h2>

<p><strong>本题将我深深的伤害了</strong>  </p>

<ul>
  <li>
    <p>模拟法:看着数据不大，于是暴力模拟,无限WA,基本思路同B题二解法，只是模拟过程中出现大于top就停止,至今未AC，未发现错误数据，回头对拍,有待考证。(<strong>忘记加特判了<code>a=0,b=0</code>时候挂掉了, 加上AC</strong>)	</p>
  </li>
  <li>
    <p>记忆化搜索	</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="c1">//模拟法</span>
</span><span class="line"><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class="line"><span class="kt">int</span> <span class="n">gcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span> <span class="n">b</span><span class="o">?</span><span class="n">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span><span class="o">:</span><span class="n">a</span><span class="p">;}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">s</span><span class="p">[</span><span class="mi">1000</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">cnt</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">cur</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">;</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;}</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="n">cur</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">tmp</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">&gt;=</span><span class="n">b</span><span class="p">)</span><span class="n">tmp</span><span class="o">-=</span><span class="n">b</span><span class="p">;</span><span class="k">else</span> <span class="n">tmp</span><span class="o">+=</span><span class="n">a</span><span class="p">;}</span>
</span><span class="line">    <span class="k">return</span> <span class="n">cur</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data2.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">;</span>
</span><span class="line">    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class="line">       <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">,</span><span class="o">&amp;</span><span class="n">b</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">       <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">&gt;</span><span class="n">m</span><span class="o">||</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NO</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">       <span class="k">else</span> <span class="p">{</span>
</span><span class="line">          <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">%</span><span class="n">a</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;YES</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">          <span class="k">else</span> <span class="p">{</span>
</span><span class="line">               <span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">cnt</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
</span><span class="line">               <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">%</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">               <span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">               <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">len</span><span class="p">){</span>
</span><span class="line">                  <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span>
</span><span class="line">                  <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&gt;</span><span class="n">m</span><span class="p">){</span><span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;}</span>
</span><span class="line">               <span class="p">}</span>
</span><span class="line">               <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;YES</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="k">else</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;NO</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">          <span class="p">}</span>
</span><span class="line">       <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="c1">//记忆化搜索</span>
</span><span class="line"><span class="kt">bool</span> <span class="n">used</span><span class="p">[</span><span class="mi">1100</span><span class="p">];</span>
</span><span class="line"><span class="kt">bool</span> <span class="n">bfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span><span class="kt">int</span> <span class="n">b</span><span class="p">,</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="kt">int</span> <span class="n">m</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">q</span><span class="p">;</span>
</span><span class="line">    <span class="n">memset</span><span class="p">(</span><span class="n">used</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">used</span><span class="p">));</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">m</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class="line">    <span class="n">used</span><span class="p">[</span><span class="n">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">t</span><span class="p">;</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">       <span class="kt">int</span> <span class="n">tmp</span><span class="o">=</span><span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
</span><span class="line">       <span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">==</span><span class="n">n</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class="line">       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">&amp;&amp;!</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">]){</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">tmp</span><span class="o">+</span><span class="n">a</span><span class="p">);}</span>
</span><span class="line">       <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">]){</span><span class="n">used</span><span class="p">[</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">tmp</span><span class="o">-</span><span class="n">b</span><span class="p">);}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="d-httpacmswjtueducnjudgeonlineshowproblemproblemid1991">D <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1991">统计学号</a></h2>

<p>排序下，扫描一遍即可，秒杀级水题一枚。不会快排的可冒泡。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include&lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include&lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class="line"><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">110</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line"> <span class="c1">//   freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class="line"> <span class="c1">//   freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">){</span>
</span><span class="line">       <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">       <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class="line">       <span class="n">sort</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">       <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">       <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">!=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="n">cnt</span><span class="o">++</span><span class="p">;}</span>
</span><span class="line">       <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="e-20httpacmswjtueducnjudgeonlineshowproblemproblemid1992">E <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1992">德德的嗜好2.0</a></h2>

<p>此题也是一个排序题，当然如果直接<code>strcmp</code>是不行的，考虑90 9这组数据，结果很明显应该是990而不是909。<br />
因为我们在排序的时候只要保证<code>(a+b)&gt;(b+a)</code>即可。<br />
<strong>再次表示对数据中出现了大于1000的数表示抱歉</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include&lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include&lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="n">string</span> <span class="n">s</span><span class="p">[</span><span class="mi">81</span><span class="p">];</span>
</span><span class="line"><span class="kt">bool</span> <span class="n">cmp</span><span class="p">(</span><span class="n">string</span> <span class="n">a</span><span class="p">,</span><span class="n">string</span> <span class="n">b</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">     <span class="k">return</span> <span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span><span class="o">&gt;</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">a</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">T</span><span class="p">;</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">      <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">      <span class="n">sort</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="n">n</span><span class="p">,</span><span class="n">cmp</span><span class="p">);</span>
</span><span class="line">      <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">      <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="f-30httpacmswjtueducnjudgeonlineshowproblemproblemid1993">F <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1993">德德的嗜好3.0</a></h2>
<p>公式题或者找规律  <code>b(8k+m)=b(m)+60k;  (k=n/8;m=n%8)</code> 打表出前8项就够了;其中<code>b(0)=-1;</code> 可以m等于1到8~这样就用不到b(0)但是计算k,m就多了几行代码。<br />
下面是推论：  </p>

<ul>
  <li>
    <p>由于<code>a(n+15)-a(n)=60</code>,故若<code>a(n)</code>是3或5的倍数,当且仅当<code>a(n+15)</code>是3或5的倍数. 	</p>
  </li>
  <li>
    <p>于是每15个数是一个周期，前15个3-59~所以划分区间。	</p>
  </li>
  <li>
    <p>现将数轴正向分成一系列长为60的区间段: <code>(0,+?)＝(0,60]∪(60,120]∪(120,180]∪…,</code>注意第一个区间段中含有{a(n)}的项15个,即<code>3,7,11,15,19,23,27,31,35,39,43,47,51,55,59</code>其中属于{ }的项8个,为:<code>b(1)=7, b(2)=11, b(3)=19, b(4)=23,   b(5)=31, b(6)=43, b(7)=47, b(8)=59</code>	</p>
  </li>
  <li>
    <p>于是每个区间段中恰有15个{ }的项,8个{ }的项,且有<code>b(8k+m)-b(m)=60k;</code>	 </p>
  </li>
  <li>
    <p>EG：由于<code>2006＝8×250+6</code>,而<code>b(6)=43</code>,所以<code>b(2006)=60*250+b(6)=15043</code>。	</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include&lt;cstdio&gt;</span>
</span><span class="line"><span class="cp">#include&lt;cstring&gt;</span>
</span><span class="line"><span class="cp">#include&lt;iostream&gt;</span>
</span><span class="line"><span class="cp">#include&lt;algorithm&gt;</span>
</span><span class="line"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class="line"><span class="cp">#define ll long long</span>
</span><span class="line"><span class="cp">#define rep(i, n) for (int i=0; i&lt;(n); ++i)</span>
</span><span class="line"><span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">43</span><span class="p">,</span><span class="mi">47</span><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data.in&quot;,&quot;r&quot;,stdin);</span>
</span><span class="line">    <span class="c1">//freopen(&quot;data.out&quot;,&quot;w&quot;,stdout);</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">T</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">T</span><span class="p">);</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">        <span class="n">ll</span> <span class="n">ans</span><span class="o">=</span><span class="mi">60LL</span><span class="o">*</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="n">b</span><span class="p">[</span><span class="n">n</span><span class="o">%</span><span class="mi">8</span><span class="p">];</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%lld</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="g-httpacmswjtueducnjudgeonlineshowproblemproblemid1994">G <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1994">不知道自己不知道</a></h2>

<p>没什么好说的</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="k">while</span><span class="p">(</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">))</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="mi">2013</span><span class="o">-</span><span class="n">n</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="h-httpacmswjtueducnjudgeonlineshowproblemproblemid1995">H <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1995">知道自己不知道</a></h2>

<p>数组求和除以M向上取整.  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
</span><span class="line"><span class="n">sum</span><span class="o">+=</span><span class="n">a</span><span class="p">;</span>
</span><span class="line"><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,(</span><span class="n">sum</span><span class="o">+</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">m</span><span class="p">);</span> <span class="c1">//加上m-1为向上取整</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="i-httpacmswjtueducnjudgeonlineshowproblemproblemid1996">I <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1996">不知道自己知道</a></h2>

<p>暴力比较即可</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class="line"><span class="n">string</span> <span class="n">s</span><span class="p">[</span><span class="mi">110</span><span class="p">];</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">T</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">T</span><span class="p">;</span>
</span><span class="line">    <span class="n">string</span> <span class="n">qurry</span><span class="p">;</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">t</span><span class="o">++&lt;</span><span class="n">T</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">){</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];}</span>
</span><span class="line">        <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Case #&quot;</span><span class="o">&lt;&lt;</span><span class="n">t</span><span class="o">&lt;&lt;</span><span class="s">&quot;:&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">){</span>
</span><span class="line">          <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">qurry</span><span class="p">;</span>
</span><span class="line">          <span class="kt">bool</span> <span class="n">fg</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">          <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="n">qurry</span><span class="o">==</span><span class="n">s</span><span class="p">[</span><span class="n">j</span><span class="p">]){</span><span class="n">fg</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;}}</span>
</span><span class="line">          <span class="k">if</span><span class="p">(</span><span class="n">fg</span><span class="p">)</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Yes&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">          <span class="k">else</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;No&quot;</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h1 id="j-httpacmswjtueducnjudgeonlineshowproblemproblemid1997">J <a href="http://acm.swjtu.edu.cn/JudgeOnline/showproblem?problem_id=1997">知道自己知道</a></h1>

<p>做一下结构体，保存i和和i出现的次数，有负数，i集体加上100，然后恢复即可。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#define rep(i,a,n) for (int i=(a); i&lt;(n); ++i)</span>
</span><span class="line"><span class="k">struct</span> <span class="n">pt</span><span class="p">{</span>
</span><span class="line">	<span class="kt">int</span> <span class="n">cnt</span><span class="p">;</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="n">pt</span> <span class="n">s</span><span class="p">[</span><span class="mi">550</span><span class="p">];</span>
</span><span class="line"><span class="kt">bool</span> <span class="n">cmp</span><span class="p">(</span><span class="n">pt</span> <span class="n">a</span><span class="p">,</span><span class="n">pt</span> <span class="n">b</span><span class="p">){</span>
</span><span class="line">     <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">cnt</span><span class="o">==</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">)</span> <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">i</span><span class="o">&lt;</span><span class="n">b</span><span class="p">.</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">     <span class="k">return</span> <span class="n">a</span><span class="p">.</span><span class="n">cnt</span><span class="o">&gt;</span><span class="n">b</span><span class="p">.</span><span class="n">cnt</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">t</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">t</span><span class="p">);</span>
</span><span class="line">    <span class="k">while</span><span class="p">(</span><span class="n">t</span><span class="o">--</span><span class="p">){</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">i</span><span class="o">=</span><span class="n">i</span><span class="o">-</span><span class="mi">100</span><span class="p">;</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span>
</span><span class="line">        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>  <span class="p">{</span>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>      <span class="n">s</span><span class="p">[</span><span class="n">a</span><span class="o">+</span><span class="mi">100</span><span class="p">].</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span> <span class="p">}</span>
</span><span class="line">        <span class="n">sort</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="mi">500</span><span class="p">,</span><span class="n">cmp</span><span class="p">);</span>
</span><span class="line">        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="o">!=</span><span class="mi">0</span><span class="p">)</span><span class="n">cnt</span><span class="o">++</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">;}</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">cnt</span><span class="p">);</span>
</span><span class="line">        <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">500</span><span class="p">){</span>  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">cnt</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %d&quot;</span><span class="p">,</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">i</span><span class="p">);</span>   <span class="p">}</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>以上题目均为过测试数据的程序，不保证程序完全正确无误，欢迎指正,预赛题目难度很明显会增大很多，大家加油。 3Q</p>

<p class="post-footer">原文地址:&nbsp;<a href="http://www.UnkelTao.com/blog/2013/04/13/the-9th-swjtu-collegiate-programming-contest-qualification-round/">http://www.UnkelTao.com/blog/2013/04/13/the-9th-swjtu-collegiate-programming-contest-qualification-round/</a><br /><br />&nbsp;由 <a href="http://www.UnkelTao.com">UnkelTao</a>&nbsp;撰写并发表于 <a href="http://www.UnkelTao.com">http://www.UnkelTao.com</a></p>
]]></content>
  </entry>
  
</feed>
