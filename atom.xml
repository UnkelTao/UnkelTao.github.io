<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[UnkelTao]]></title>
  <link href="http://UnkelTao.github.io/atom.xml" rel="self"/>
  <link href="http://UnkelTao.github.io/"/>
  <updated>2014-02-18T23:45:11+08:00</updated>
  <id>http://UnkelTao.github.io/</id>
  <author>
    <name><![CDATA[UnkelTao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从 Wordpress 搬迁到 Octopress]]></title>
    <link href="http://UnkelTao.github.io/blog/2014/02/18/wordpress-to-octopress/"/>
    <updated>2014-02-18T21:48:51+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2014/02/18/wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>终于还是从 Wordpress 搬迁到 Octopress 上来了，搬迁相对还是挺容易了，毕竟以前还是接触过一些ruby，所以环境什么的搭建的比较顺利。</p>

<p>大概的步骤也就这些：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>安装相关环境：Ruby，Devkit,Python(代码高亮)
</span><span class='line'>参照Octopress官方文档就行操作
</span><span class='line'>下载对应主题并修改
</span><span class='line'>添加Disqus评论
</span><span class='line'>绑定域名暂时没有做（其实很简单，但是域名暂有其他作用）</span></code></pre></td></tr></table></div></figure>


<p>而且本身Wordpress并没有使用太久，所以文章很少，就手动复制了两篇过来，其他觉得没有必要保留的就抛弃了。比较麻烦的是以前使用过很多个不同类型的博客，里面的搬迁过来手动的写Markdown还是挺麻烦的，而且数量也很大，只能挑选一些放上来了。</p>

<p>以后的博客就是这个了，试用了一下还可以哟。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MemSQL start]]></title>
    <link href="http://UnkelTao.github.io/blog/2013/08/04/memsql-start/"/>
    <updated>2013-08-04T20:13:34+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2013/08/04/memsql-start</id>
    <content type="html"><![CDATA[<p>【测试代码】</p>

<p>昨晚的CF略晚~~而且提示说div2的少年们，你们很可能会爆0~~~</p>

<p>于是赤裸裸的去了，然后悲催的爆0了</p>

<p>只看了A、B两题~~A题觉得挺简单的，敲了个2分交上去过了Pass，想了想B觉得没有想法就睡觉了。。。</p>

<!--more-->


<p>早上一起洗个澡吃完早餐一看<del>WA了</del>然后看了下代码，我去，尼玛有一行特判输出没改，直接注释掉没用的特判就过了</p>

<p>说说A题吧，题意大概是一串字符串，求一个长度为k的子串，是的用最少的该子串来构成源串，你可以使用子串的其中任意个字符按照你想要的方式排序拼接,输出需要的最少个数和该k子串。</p>

<p>解法：数据那么弱，统计下源串每个字母的个数，直接暴力匹配从1个到(n+k-1)/k个能否拼成源串就好,写的2分,也过了.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>#include &lt;cstdlib&gt;
</span><span class='line'>#include &lt;cstring&gt;
</span><span class='line'>#include &lt;cmath&gt;
</span><span class='line'>#include &lt;climits&gt;
</span><span class='line'>#include &lt;cctype&gt;
</span><span class='line'>#include &lt;ctime&gt;
</span><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;iostream&gt;
</span><span class='line'>#include &lt;queue&gt;
</span><span class='line'>#include &lt;vector&gt;
</span><span class='line'>#include &lt;set&gt;
</span><span class='line'>#include &lt;map&gt;
</span><span class='line'>#include &lt;stack&gt;
</span><span class='line'>#define SQR(x) ((x)*(x))
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class='line'>#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class='line'>#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class='line'>#define PB push_back
</span><span class='line'>#define MP(A, B) make_pair(A, B)
</span><span class='line'>#define pow2(n) (1&lt;&lt;(n))
</span><span class='line'>#define pi acos(-1)
</span><span class='line'>#define eps 0.00000001
</span><span class='line'>#define lg(n) log10((n)*1.0)
</span><span class='line'>#define MaxN  1000000
</span><span class='line'>#define mod 10e+7
</span><span class='line'>#define ll long long
</span><span class='line'>#define typed int
</span><span class='line'>using namespace std;
</span><span class='line'>void data(){
</span><span class='line'>   freopen("data.in","r",stdin);
</span><span class='line'>   freopen("data.out","w",stdout);
</span><span class='line'>}
</span><span class='line'>char s[1100];
</span><span class='line'>int su[27];
</span><span class='line'>int k;
</span><span class='line'>int jd(int n){
</span><span class='line'>   int cnt=0;
</span><span class='line'>   rep(i,26){
</span><span class='line'>       cnt+=(su[i]+n-1)/n;
</span><span class='line'>   } 
</span><span class='line'>   if(cnt&lt;=k) return 1;
</span><span class='line'>   else return 0;
</span><span class='line'>}
</span><span class='line'>void pt(int n){
</span><span class='line'> //  cout&lt;&lt;"pt"&lt;&lt;endl;   
</span><span class='line'>   cout&lt;&lt;n&lt;&lt;endl;    
</span><span class='line'>   string ss="";
</span><span class='line'>   int cnt=0;
</span><span class='line'>   rep(i,26){
</span><span class='line'>      rep(j,(su[i]+n-1)/n){ ss+=(i+'a');cnt++;}
</span><span class='line'>   }
</span><span class='line'>   cout&lt;&lt;ss;
</span><span class='line'>   rep(i,k-cnt)cout&lt;&lt;'a';
</span><span class='line'>   cout&lt;&lt;endl;
</span><span class='line'>}
</span><span class='line'>void bit(int l,int r){
</span><span class='line'>     while(l&lt;r){
</span><span class='line'>     int mid=(l+r)/2;
</span><span class='line'>     int kk=jd(mid);
</span><span class='line'>       if(kk&gt;0) r=mid;
</span><span class='line'>       else l=mid+1;    
</span><span class='line'>     }
</span><span class='line'>     pt(l);
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>int main(){
</span><span class='line'>   while(cin&gt;&gt;s&gt;&gt;k){
</span><span class='line'>     rep(i,26) su[i]=0;
</span><span class='line'>     rep(i,strlen(s))su[s[i]-'a']++;
</span><span class='line'>     int ma=0,cnt=0;
</span><span class='line'>     rep(i,26)if(su[i]){cnt++;ma=max(ma,su[i]);}
</span><span class='line'>     if(k&lt;cnt)cout&lt;&lt;-1&lt;&lt;endl;
</span><span class='line'>     else{
</span><span class='line'>       
</span><span class='line'>         
</span><span class='line'>        //bit((strlen(s)+k-1)/k,ma+1); //2分 
</span><span class='line'>        repd(i,strlen(s)){   //暴力 
</span><span class='line'>           if(jd(i)){pt(i);break;}
</span><span class='line'>        }
</span><span class='line'>     } 
</span><span class='line'>   }        
</span><span class='line'>   return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>B题一看最长回文子序列，能想到的方法就是2维DP出LCS<del>可是源串长度为50000，2维DP肯定挂</del>早上起来，顺带看了一眼，发现一个条件，回文最长为100（大于100输出100的就行）,这个想了下，就好搞了.一共26字母，说明在2600个字母序列里面肯定会产生回文长度至少是100的。。</p>

<p>这样超过长度2600的就可以直接DP前2600个字母就行了<del>然后就是模板题了</del>真是弱爆了~~</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>#include &lt;cstdlib&gt;
</span><span class='line'>#include &lt;cstring&gt;
</span><span class='line'>#include &lt;cmath&gt;
</span><span class='line'>#include &lt;climits&gt;
</span><span class='line'>#include &lt;cctype&gt;
</span><span class='line'>#include &lt;ctime&gt;
</span><span class='line'> 
</span><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;iostream&gt;
</span><span class='line'>#include &lt;queue&gt;
</span><span class='line'>#include &lt;vector&gt;
</span><span class='line'>#include &lt;set&gt;
</span><span class='line'>#include &lt;map&gt;
</span><span class='line'>#include &lt;stack&gt;
</span><span class='line'> 
</span><span class='line'>#define SQR(x) ((x)*(x))
</span><span class='line'>#define rep(i, n) for (int i=0; i&lt;(n); ++i)
</span><span class='line'>#define repd(i,n)  for(int i=1;i&lt;=(n);++i)
</span><span class='line'>#define repf(i, a, b) for (int i=(a); i&lt;=(b); ++i)
</span><span class='line'>#define reps(i, a, b) for (int i=(a); i&gt;=(b); --i)
</span><span class='line'>#define PB push_back
</span><span class='line'>#define MP(A, B) make_pair(A, B)
</span><span class='line'>#define pow2(n) (1&lt;&lt;(n))
</span><span class='line'>#define pi acos(-1)
</span><span class='line'>#define eps 0.00000001
</span><span class='line'>#define lg(n) log10((n)*1.0)
</span><span class='line'>#define MaxN  50000
</span><span class='line'>#define mod 10e+7
</span><span class='line'>#define ll long long
</span><span class='line'>#define typed int
</span><span class='line'>using namespace std;
</span><span class='line'>void data(){
</span><span class='line'>   freopen("data.in","r",stdin);
</span><span class='line'>   freopen("data.out","w",stdout);
</span><span class='line'>}
</span><span class='line'>int dp[2620][2620];
</span><span class='line'>char c[MaxN+100],a[2620],b[2620];
</span><span class='line'>int k[2620][2620];
</span><span class='line'>int cnt[27];
</span><span class='line'>void LCS(int len){
</span><span class='line'>     int i, j;
</span><span class='line'>      rep(i,len+1){ dp[i][0]=dp[0][i]=0;}
</span><span class='line'>      repd(i,len)
</span><span class='line'>        repd(j,len)
</span><span class='line'>        {
</span><span class='line'>            if(a[i]==b[j]){
</span><span class='line'>                k[i][j]=0;
</span><span class='line'>                dp[i][j]=1+dp[i-1][j-1];  
</span><span class='line'>            }
</span><span class='line'>            else if(dp[i-1][j]&gt;=dp[i][j-1]){
</span><span class='line'>                k[i][j]=1;
</span><span class='line'>                dp[i][j]=dp[i-1][j]; 
</span><span class='line'>            }
</span><span class='line'>            else{
</span><span class='line'>                 k[i][j]=-1;
</span><span class='line'>                 dp[i][j]=dp[i][j-1];
</span><span class='line'>            }         
</span><span class='line'>        } 
</span><span class='line'>}
</span><span class='line'>char st[2610];
</span><span class='line'>int num;
</span><span class='line'>void pt(int m,int n){
</span><span class='line'>   if(n==0||m==0) return ;
</span><span class='line'>   if(k[m][n]==0){
</span><span class='line'>     pt(m-1,n-1);
</span><span class='line'>     st[num++]=a[m];
</span><span class='line'>   }
</span><span class='line'>   else if(k[m][n]&gt;0) pt(m-1,n);
</span><span class='line'>   else pt(m,n-1);  
</span><span class='line'>}
</span><span class='line'>int main(){
</span><span class='line'>    //data();
</span><span class='line'>    while(~scanf("%s",c+1)){                            
</span><span class='line'>     int len=strlen(c+1);
</span><span class='line'>     num=0;
</span><span class='line'>     bool fg=1;
</span><span class='line'>     repd(i,len){
</span><span class='line'>         cnt1-'a']++;
</span><span class='line'>         if(cnt1-'a']&gt;=100){
</span><span class='line'>           rep(j,100)cout&lt;&lt;c[i];
</span><span class='line'>           cout&lt;&lt;endl;fg=0;break;
</span><span class='line'>         }
</span><span class='line'>     }
</span><span class='line'>     if(!fg)continue;
</span><span class='line'>     if(len&gt;2602) len=2602;
</span><span class='line'>     repd(i,len){a[i]=c[i];b[len+1-i]=c[i];}
</span><span class='line'>     LCS(len);
</span><span class='line'>     pt(len,len);
</span><span class='line'>     if(num&lt;=100)printf("%s\n",st);
</span><span class='line'>     else{
</span><span class='line'>       rep(i,50)cout&lt;&lt;st[i];reps(i,49,0)cout&lt;&lt;st[i]; cout&lt;&lt;endl;  
</span><span class='line'>     }
</span><span class='line'>     
</span><span class='line'>    }           
</span><span class='line'>   return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>（效果似乎一般）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu problem]]></title>
    <link href="http://UnkelTao.github.io/blog/2011/02/19/ubuntu-problem/"/>
    <updated>2011-02-19T00:00:07+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2011/02/19/ubuntu-problem</id>
    <content type="html"><![CDATA[<p>问题：</p>

<p><img src="http://d.pcs.baidu.com/thumbnail/7d035361bbf02d85d862a84985d594da?fid=101724653-250528-1662718638&amp;time=1392729334&amp;rt=pr&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-DtygEbw%2Bh4AN0AwdIGRv9Zydyqc%3D&amp;expires=8h&amp;prisign=RK9dhfZlTqV5TuwkO5ihMQzlM241kT2YfffnCZFTaEPwOxHv/XxtwRXLxDSXMBba1Ms9seOiqT9/QffwI8K2Baw0mmLABRQNl51b/oS8+InqoadADmwcyikKawH2SpzFmVrGREiaH1zZ09BZiFo3CF7dwGcK/xIzj9971pKao/QALkDxW+JJC9zJS3FHk0o7boWsiiwPAK5reKjnULC44sCCTNu35NkJ&amp;r=276187455&amp;size=c850_u580&amp;quality=100" alt="" /></p>

<p><img src="http://d.pcs.baidu.com/thumbnail/8d0133f3f0ba1407dc893c36a21526bf?fid=101724653-250528-1716450544&amp;time=1392729334&amp;rt=pr&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-DIEnFY3z3zMHbQMpJSui0w7fCXM%3D&amp;expires=8h&amp;prisign=RK9dhfZlTqV5TuwkO5ihMQzlM241kT2YfffnCZFTaEPwOxHv/XxtwRXLxDSXMBba1Ms9seOiqT9/QffwI8K2Baw0mmLABRQNl51b/oS8+InqoadADmwcyikKawH2SpzFmVrGREiaH1zZ09BZiFo3CF7dwGcK/xIzj9971pKao/QALkDxW+JJC9zJS3FHk0o7boWsiiwPAK5reKjnULC44sCCTNu35NkJ&amp;r=735911543&amp;size=c850_u580&amp;quality=100" alt="" /></p>

<p>解决代码：</p>

<p>法1：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install dkms build-essential linux-headers-$(uname -r) 
</span><span class='line'>sudo /etc/init.d/vboxdrv setup</span></code></pre></td></tr></table></div></figure>


<p>法2：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install module-assistant
</span><span class='line'>sudo modprobe vboxnetflt
</span><span class='line'>sudo modprobe vboxdrv</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[雨季不再来]]></title>
    <link href="http://UnkelTao.github.io/blog/2010/03/05/my-first-post/"/>
    <updated>2010-03-05T20:10:42+08:00</updated>
    <id>http://UnkelTao.github.io/blog/2010/03/05/my-first-post</id>
    <content type="html"><![CDATA[<p><img src="http://d.pcs.baidu.com/thumbnail/7035e986948392045e392f38a9dcc9b9?fid=101724653-250528-881813552&amp;time=1392723708&amp;rt=pr&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-fDVLgea6GfJrq4xfvDwYjTHdh4o%3D&amp;expires=8h&amp;prisign=RK9dhfZlTqV5TuwkO5ihMQzlM241kT2YfffnCZFTaEPwOxHv/XxtwRXLxDSXMBba1Ms9seOiqT9/QffwI8K2Baw0mmLABRQNl51b/oS8+InqoadADmwcyikKawH2SpzFmVrGREiaH1zZ09BZiFo3CF7dwGcK/xIzj9971pKao/QALkDxW+JJC9zJS3FHk0o7boWsiiwPAK5reKjnULC44nO2igm8C/0s&amp;r=120311863&amp;size=c850_u580&amp;quality=100" alt="" />
人之所以悲哀，是因为我们留不住岁月，更无法不承认，青春，有一日是要这么自然地消失过去。</p>

<!--more-->


<p>而人之可贵，也在于我们因着时光环境的改变，在生活上得到长进。岁月的流失固然是无可奈何，而人的逐渐蜕变，却又脱不出时光的力量。</p>

<p>我想，一个人的过去，就像《圣经》上雅各的天梯一样，踏一步决不能上升到天国去。而人的过程，也是要一格一格地爬着梯子，才能到了某种高度。在那个高度上，满江风月，青山绿水，尽入眼前。这种境界心情与踏上第一步梯子而不知上面将是什么情形的迷惘惶惑是很不相同的。</p>

<p>乐观与悲观，都不流于实际。一件明明没有希望的事情，如果乐观地去处理，在我，就是失之于天真，这跟悲观是一样的不正确，甚而更坏。</p>

<p>我，只是一个实际的人，我要得着的东西，说起来十分普通。一切不着边际的想法，如果我守着自己淡泊宁静的生活原则，我根本不会刻意去追求它。对于生活的环境，我也抱着一样的态度。我唯一锲而不舍，愿意以自己的生命去努力的，只不过是保守我个人的心怀意念，在有生之日，不放弃对生活的热爱和执著，在有限的时空里，过无限广大的日子。</p>

<p>人，是可以改变的，只是每个人都需要时间。我们要如何度过自己的一生，固执不变当然是可贵，而有时向生活中另找乐趣，亦是不可或缺的努力和目标。</p>

<p>我的心中有一个不变的信仰，它是什么，我也不清楚，但我不会放弃这在冥冥中引导我的力量，直到有一天我离开人世，返回永恒的地方。-</p>

<p>真正的快乐，不是狂喜，亦不是痛苦，在我很主观的来说，它是细水长流，碧海无波，在芸芸众生里做一个普通的人，享受生命一刹间喜悦，那么我们即使不死，也在天堂了。。。。</p>

<p>—《雨季不再来》</p>
]]></content>
  </entry>
  
</feed>
